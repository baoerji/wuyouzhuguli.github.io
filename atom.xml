<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MrBird</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://mrbird.cc/"/>
  <updated>2018-06-06T08:35:56.435Z</updated>
  <id>http://mrbird.cc/</id>
  
  <author>
    <name>MrBird</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java8实战——Lambda表达式(一)</title>
    <link href="http://mrbird.cc/java8lambda1.html"/>
    <id>http://mrbird.cc/java8lambda1.html</id>
    <published>2018-04-05T11:15:35.000Z</published>
    <updated>2018-06-06T08:35:56.435Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Jun 06 2018 16:37:33 GMT+0800 (中国标准时间) --><p>Java 8的Lambda表达式借鉴了C#和Scala等语言中的类似特性，简化了匿名函数的表达方式。Lambda表达式可以直接以内联的形式为<strong>函数式接口</strong>的抽象方法提供实现，并把整个表达式作为函数式接口的实例。什么是函数式接口？简单来说就是只包含一个抽象方法的接口，允许有默认的实现（使用default关键字描述方法）。函数式接口建议使用<code>@FunctionalInterface</code>注解标注，虽然这不是必须的，但是这样做更符合规范。</p><a id="more"></a><p>在Java 8之前，实现Runnable常用方式是编写一个匿名类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Thread thread = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"hello"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line">thread.start();</div></pre></td></tr></table></figure><p></p><p>使用Lambda表达式后，上面的代码可以改造为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Thread thread = <span class="keyword">new</span> Thread(() -&gt; System.out.println(<span class="string">"hello"</span>));</div><div class="line">thread.start();</div></pre></td></tr></table></figure><p></p><p>是不是很神奇？！很简洁？！</p><h2 id="Lambda表达式解析"><a href="#Lambda表达式解析" class="headerlink" title="Lambda表达式解析"></a>Lambda表达式解析</h2><p>Lambda表达式的基本语法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">(parameters) -&gt; <span class="function">expression </span></div><div class="line"><span class="title">or</span></div><div class="line"><span class="params">(parameters)</span> -&gt; &#123; statements; &#125;</div></pre></td></tr></table></figure><p></p><p>由语法可以看到，Lambda表达式包含了三个部分：</p><ul><li><p>参数列表；</p></li><li><p>箭头<code>-&gt;</code>把参数列表与Lambda主体分隔开；</p></li><li><p>Lambda主体，只有一行代码的时候可以省略大括号和<code>return</code>关键字。</p></li></ul><p>比如下面这些Lambda表达式都是合法的：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">(String str) -&gt; str.length()</div><div class="line">(String str) -&gt; &#123; <span class="keyword">return</span> str.length(); &#125;</div><div class="line"></div><div class="line">() -&gt; System.out.println(<span class="string">"hello"</span>)</div><div class="line"></div><div class="line">() -&gt; &#123;&#125;</div><div class="line">() -&gt; <span class="number">17</span></div><div class="line"></div><div class="line">(<span class="keyword">int</span> x, <span class="keyword">int</span> y) -&gt; &#123;</div><div class="line">    System.out.println(x);</div><div class="line">    System.out.println(y);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><h2 id="Lambda的使用场合"><a href="#Lambda的使用场合" class="headerlink" title="Lambda的使用场合"></a>Lambda的使用场合</h2><p>什么时候可以使用Lambda表达式？使用Lambda必须满足以下两个条件：</p><ol><li><p>实现的对象是函数式接口的抽象方法；</p></li><li><p>函数式接口的抽象方法的函数描述符和Lambda表达式的函数描述符一致。</p></li></ol><h3 id="函数式接口"><a href="#函数式接口" class="headerlink" title="函数式接口"></a>函数式接口</h3><p>函数式接口的定义开头已经说了，这里就不再赘述。在Java 8之前，常见的函数式接口有<code>java.util.Comparator</code>，<code>java.lang.Runnable</code>等。拿<code>java.util.Runnable</code>来说，查看其源码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@FunctionalInterface</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Runnable</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>这个接口只有一个抽象方法，并且使用<code>@FunctionalInterface</code>注解标注。</p><p>接口现在还可以拥有默认方法（即在类没有对方法进行实现时，其主体为方法提供默认实现的方法）。哪怕有很多默认方法，只要接口只定义了一个抽象方法，它就仍然是一个函数式接口。</p><h3 id="函数描述符"><a href="#函数描述符" class="headerlink" title="函数描述符"></a>函数描述符</h3><p><strong>函数描述符</strong>其实也可以理解为方法的签名。比如上述的Runnable抽象方法不接受参数，并且返回void，所以其函数描述符为<code>() -&gt; void</code>。而<code>() -&gt; System.out.println(&quot;hello&quot;)</code>Lambda表达式也是不接受参数，并且返回void，即其函数描述符也是<code>() -&gt; void</code>。所以代码<code>Runnable r = () -&gt; System.out.println(&quot;hello&quot;);</code>是合法的。</p><div class="note danger"><p><strong>特殊的void兼容规则</strong></p><p>如果一个Lambda的主体是一个语句表达式， 它就和一个返回void的函数描述符兼容（当然需要参数列表也兼容）。例如，以下Lambda是合法的，尽管List的add方法返回了一个 boolean，而不是Runnable抽象方法函数描述符<code>() -&gt; void</code>所要求的void：</p></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">List&lt;String&gt; list = new ArrayList&lt;&gt;();</div><div class="line">Runnable r = () -&gt; list.add(&quot;hello&quot;);</div></pre></td></tr></table></figure><h2 id="更简洁的Lambda"><a href="#更简洁的Lambda" class="headerlink" title="更简洁的Lambda"></a>更简洁的Lambda</h2><p>编写一个类型转换的函数式接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@FunctionalInterface</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TransForm</span>&lt;<span class="title">T</span>, <span class="title">R</span>&gt; </span>&#123;</div><div class="line">    <span class="function">R <span class="title">transForm</span><span class="params">(T t)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>编写一个Lambda表达式实现该函数式接口，用于实现String转换为Integer，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">TransForm&lt;String, Integer&gt; t = (String str) -&gt; Integer.valueOf(str);</div><div class="line">System.out.println(t.transForm(<span class="string">"123"</span>));</div></pre></td></tr></table></figure><p></p><p>上面的Lambda表达式可以进一步简化为如下方式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">TransForm&lt;String, Integer&gt; t = (str) -&gt; Integer.valueOf(str);</div><div class="line">System.out.println(t.transForm(<span class="string">"123"</span>));</div></pre></td></tr></table></figure><p></p><p>因为Java编译器会从上下文（目标类型）推断出用什么函数式接口来配合Lambda表达式，这意味着它也可以推断出适合Lambda的签名。就拿这个例子来说，TransForm的抽象方法transForm在本例中的函数描述符为<code>(String) -&gt; Integer</code>，所以对应的Lambda的签名也是如此，即Lambda的参数即使不声名类型，Java编译器可以知道其参数实际上为String类型。</p><p>其实，上面的Labmda表达式还不是最简洁的，其还可以更进一步地简化为如下写法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">TransForm&lt;String, Integer&gt; t = Integer::valueOf;</div><div class="line">System.out.println(t.transForm(<span class="string">"123"</span>));</div></pre></td></tr></table></figure><p></p><p>你肯定很困惑，这还是Lambda表达式吗，箭头去哪里了？双冒号又是什么鬼？其实这种写法有一个新的名称，叫做<strong>方法的引用</strong>。</p><p>方法引用可以被看作仅仅调用特定方法的Lambda的一种快捷写法。它的基本思想是，如果一个Lambda代表的只是“直接调用这个方法”，那最好还是用名称来调用它，而不是去描述如何调用它，这样代码可读性更好。基本写法就是目标引用放在分隔符<code>::</code>前，方法的名称放在后面。</p><p>举几个Lambda及其等效方法引用的例子：</p><table style="margin-top:-1rem"><tr><th>Lambda表达式</th><th>等效方法引用</th></tr><br><tr><td>(String s) -&gt; System.out.println(s)</td><td>System.out::println</td></tr><tr><td>(str, i) -&gt; str.substring(i)</td><td>String::substring</td></tr><tr><td>() -&gt; Thread.currentThread().dumpStack()</td><td>Thread.currentThread()::dumpStack</td></tr></table><p>符号<code>::</code>除了出现在方法的引用外，它还常见于<strong>构造函数的引用</strong>中。为了演示什么是构造函数的引用，我们创建一个新的函数式接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@FunctionalInterface</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Generator</span>&lt;<span class="title">T</span>, <span class="title">R</span>&gt; </span>&#123;</div><div class="line">    <span class="function">R <span class="title">create</span><span class="params">(T t)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>创建一个Apple类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Apple</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Apple</span><span class="params">(String color)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.color = color;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">private</span> String color;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getColor</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> color;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setColor</span><span class="params">(String color)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.color = color;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>现在我们可以使用如下方式来创造一个Apple实例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Generator&lt;String, Apple&gt; g = Apple::<span class="keyword">new</span>;</div><div class="line">Apple apple = g.create(<span class="string">"red"</span>);</div></pre></td></tr></table></figure><p></p><p>这种通过<code>ClassName::new</code>的写法就是构造函数的引用。在这里Generator的抽象方法接收一个String类型参数，返回值类型为Apple，这和Apple类的构造函数相符合，所以这里编译可以通过。它等价于下面的写法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Generator&lt;String, Apple&gt; g = (color) -&gt; <span class="keyword">new</span> Apple(color);</div><div class="line">Apple apple = g.create(<span class="string">"red"</span>);</div></pre></td></tr></table></figure><p></p><h2 id="Lambda表达式访问变量"><a href="#Lambda表达式访问变量" class="headerlink" title="Lambda表达式访问变量"></a>Lambda表达式访问变量</h2><p>Lambda表达式可以访问局部final变量，成员变量和静态变量。</p><p>这里主要说下局部final变量。有无final关键字不重要，重要的是确保该变量的值不会被改变就行了。比如下面的例子可以编译通过：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">String hello = <span class="string">"hello lambda"</span>;</div><div class="line">Runnable r = () -&gt; System.out.println(hello);</div></pre></td></tr></table></figure><p></p><p>而下面的这个就会编译出错，因为变量hello的值被改变了：</p><p><img src="img/QQ截图20180606151220.png" alt="QQ截图20180606151220.png"></p><h2 id="Lambda表达式实战"><a href="#Lambda表达式实战" class="headerlink" title="Lambda表达式实战"></a>Lambda表达式实战</h2><p>假如现在有如下需求：现有一个包含了各种颜色不同重量的苹果的List，编写一个方法，从中筛选出满足要求的苹果。比如筛选出红色的苹果、红色并且重量大于1kg的苹果、绿色重量小于0.5kg的苹果或者红色大于0.5kg的苹果等等。</p><h3 id="不使用Lambda"><a href="#不使用Lambda" class="headerlink" title="不使用Lambda"></a>不使用Lambda</h3><p>在没有接触Lambda之前，我们一般会这样做：</p><p>定义一个筛选的接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> cc.mrbird.java8.domain.Apple;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AppleFilter</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">test</span><span class="params">(Apple apple)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>然后根据筛选的条件来编写各个不同的实现类：</p><p>筛选出红色苹果的实现方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> cc.mrbird.java8.domain.Apple;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedApple</span> <span class="keyword">implements</span> <span class="title">AppleFilter</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">test</span><span class="params">(Apple apple)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">"red"</span>.equalsIgnoreCase(apple.getColor());</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>筛选出红色并且重量大于1kg的苹果的实现方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> cc.mrbird.java8.domain.Apple;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedAndMoreThan1kgApple</span> <span class="keyword">implements</span> <span class="title">AppleFilter</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">test</span><span class="params">(Apple apple)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">"red"</span>.equalsIgnoreCase(apple.getColor()) &amp;&amp; apple.getWeight() &gt; <span class="number">1.0</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>筛选出绿色重量小于0.5kg的苹果或者红色大于0.5kg的苹果的实现方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> cc.mrbird.java8.domain.Apple;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GreenAndLessThan05OrRedAndMoreThan05Apple</span> <span class="keyword">implements</span> <span class="title">AppleFilter</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">test</span><span class="params">(Apple apple)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> (<span class="string">"green"</span>.equalsIgnoreCase(apple.getColor()) &amp;&amp; apple.getWeight() &lt; <span class="number">0.5</span>)</div><div class="line">                || (<span class="string">"red"</span>.equalsIgnoreCase(apple.getColor()) &amp;&amp; apple.getWeight() &gt; <span class="number">0.5</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>筛选苹果的方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> cc.mrbird.java8.domain.Apple;</div><div class="line"><span class="keyword">import</span> java.util.ArrayList;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppleFilterMethod</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;Apple&gt; <span class="title">filterApple</span><span class="params">(List&lt;Apple&gt; list, AppleFilter filter)</span> </span>&#123;</div><div class="line">        List&lt;Apple&gt; filterList = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">        <span class="keyword">for</span> (Apple apple : list) &#123;</div><div class="line">            <span class="keyword">if</span> (filter.test(apple)) &#123;</div><div class="line">                filterList.add(apple);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> filterList;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>开始筛选苹果：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">List&lt;Apple&gt; appleList = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">appleList.add(<span class="keyword">new</span> Apple(<span class="string">"red"</span>, <span class="number">0.4</span>));</div><div class="line">appleList.add(<span class="keyword">new</span> Apple(<span class="string">"red"</span>, <span class="number">0.6</span>));</div><div class="line">appleList.add(<span class="keyword">new</span> Apple(<span class="string">"red"</span>, <span class="number">1.3</span>));</div><div class="line">appleList.add(<span class="keyword">new</span> Apple(<span class="string">"green"</span>, <span class="number">0.2</span>));</div><div class="line">appleList.add(<span class="keyword">new</span> Apple(<span class="string">"green"</span>, <span class="number">0.35</span>));</div><div class="line">appleList.add(<span class="keyword">new</span> Apple(<span class="string">"green"</span>, <span class="number">1.1</span>));</div><div class="line"></div><div class="line">List&lt;Apple&gt; appleFilterList = AppleFilterMethod.filterApple(appleList, <span class="keyword">new</span> RedApple());</div><div class="line"><span class="keyword">for</span> (Apple apple : appleFilterList) &#123;</div><div class="line">    System.out.println(apple.getColor() + <span class="string">" apple,weight:"</span> + apple.getWeight());</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">red apple,weight:0.4</div><div class="line">red apple,weight:0.6</div><div class="line">red apple,weight:1.3</div></pre></td></tr></table></figure><p></p><p>剩下的略。</p><p>可以看到，我们为了满足各种筛选条件创造了各种筛选接口的实现类，真正起作用的只有筛选方法中return那一行代码，剩下的都是一些重复的模板代码。使用Java 8中的Lambda可以很好的消除这些模板代码。</p><h3 id="使用Lambda"><a href="#使用Lambda" class="headerlink" title="使用Lambda"></a>使用Lambda</h3><p>AppleFilter接口实际上就是一个函数式接口，所以它的各种实现可以用Lambda表达式来替代，而无需真正的去写实现方法。</p><p>定义筛选接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> cc.mrbird.java8.domain.Apple;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AppleFilter</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">test</span><span class="params">(Apple apple)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>筛选苹果的方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> cc.mrbird.java8.domain.Apple;</div><div class="line"><span class="keyword">import</span> java.util.ArrayList;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppleFilterMethod</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;Apple&gt; <span class="title">filterApple</span><span class="params">(List&lt;Apple&gt; list, AppleFilter filter)</span> </span>&#123;</div><div class="line">        List&lt;Apple&gt; filterList = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">        <span class="keyword">for</span> (Apple apple : list) &#123;</div><div class="line">            <span class="keyword">if</span> (filter.test(apple)) &#123;</div><div class="line">                filterList.add(apple);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> filterList;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>接下来便可以开始筛选了：</p><p>筛选红色的苹果：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">List&lt;Apple&gt; appleFilterList = AppleFilterMethod.filterApple(appleList,</div><div class="line">        (apple) -&gt; <span class="string">"red"</span>.equalsIgnoreCase(apple.getColor()));</div><div class="line"><span class="keyword">for</span> (Apple apple : appleFilterList) &#123;</div><div class="line">    System.out.println(apple.getColor() + <span class="string">" apple,weight:"</span> + apple.getWeight());</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">red apple,weight:0.4</div><div class="line">red apple,weight:0.6</div><div class="line">red apple,weight:1.3</div></pre></td></tr></table></figure><p></p><p>筛选出红色并且重量大于1kg的苹果:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"> List&lt;Apple&gt; appleFilterList = AppleFilterMethod.filterApple(appleList,</div><div class="line">                (apple) -&gt; <span class="string">"red"</span>.equalsIgnoreCase(apple.getColor()) &amp;&amp; apple.getWeight() &gt; <span class="number">1.0</span>);</div><div class="line"><span class="keyword">for</span> (Apple apple : appleFilterList) &#123;</div><div class="line">    System.out.println(apple.getColor() + <span class="string">" apple,weight:"</span> + apple.getWeight());</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">red apple,weight:1.3</div></pre></td></tr></table></figure><p></p><p>筛选出绿色重量小于0.5kg的苹果或者红色大于0.5kg的苹果:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">List&lt;Apple&gt; appleFilterList = AppleFilterMethod.filterApple(appleList,</div><div class="line">        (apple) -&gt; (<span class="string">"green"</span>.equalsIgnoreCase(apple.getColor()) &amp;&amp; apple.getWeight() &lt; <span class="number">0.5</span>) ||</div><div class="line">                   (<span class="string">"red"</span>.equalsIgnoreCase(apple.getColor()) &amp;&amp; apple.getWeight() &gt; <span class="number">0.5</span>));</div><div class="line"><span class="keyword">for</span> (Apple apple : appleFilterList) &#123;</div><div class="line">    System.out.println(apple.getColor() + <span class="string">" apple,weight:"</span> + apple.getWeight());</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">red apple,weight:0.6</div><div class="line">red apple,weight:1.3</div><div class="line">green apple,weight:0.2</div><div class="line">green apple,weight:0.35</div></pre></td></tr></table></figure><p></p><p>使用Lambda表达式消除了大量的样板代码，并且可以灵活的构造筛选条件！</p><blockquote><p><a href="https://book.douban.com/subject/26772632/" target="_blank" rel="external">《Java 8实战》</a>读书笔记</p></blockquote><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Jun 06 2018 16:37:33 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;Java 8的Lambda表达式借鉴了C#和Scala等语言中的类似特性，简化了匿名函数的表达方式。Lambda表达式可以直接以内联的形式为&lt;strong&gt;函数式接口&lt;/strong&gt;的抽象方法提供实现，并把整个表达式作为函数式接口的实例。什么是函数式接口？简单来说就是只包含一个抽象方法的接口，允许有默认的实现（使用default关键字描述方法）。函数式接口建议使用&lt;code&gt;@FunctionalInterface&lt;/code&gt;注解标注，虽然这不是必须的，但是这样做更符合规范。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="http://mrbird.cc/tags/Java/"/>
    
      <category term="Java 8" scheme="http://mrbird.cc/tags/Java-8/"/>
    
  </entry>
  
  <entry>
    <title>初识Spring Cloud与微服务</title>
    <link href="http://mrbird.cc/Spring-Cloud%20and%20MicroService.html"/>
    <id>http://mrbird.cc/Spring-Cloud and MicroService.html</id>
    <published>2018-04-02T02:04:16.000Z</published>
    <updated>2018-05-25T05:34:06.545Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Jun 06 2018 16:37:33 GMT+0800 (中国标准时间) --><p>在传统的软件架构中，我们通常采用的是单体应用来构建一个系统，一个单体应用糅合了各种业务模块。起初在业务规模不是很大的情况下，对于单体应用的开发维护也相对容易。但随着企业的发展，业务规模与日递增，单体应用变得愈发臃肿。由于单体应用将各种业务模块聚合在一起，并且部署在一个进程内，所以通常我们对其中一个业务模块的修改也必须将整个应用重新打包上线。为了解决单体应用变得庞大脯肿之后产生的难以维护的问题，微服务架构便出现在了大家的视线里。</p><a id="more"></a><h2 id="什么是微服务"><a href="#什么是微服务" class="headerlink" title="什么是微服务"></a>什么是微服务</h2><p>微服务 (Microservices) 是一种软件架构风格，起源于Peter Rodgers博士于 2005 年度云端运算博览会提出的微 Web 服务 (Micro-Web-Service) 。微服务主旨是将一个原本独立的系统 拆分成多个小型服务，这些小型服务都在各自独立的进程中运行，服务之间通过基于HTTP的RESTful API进行通信协作。下图展示了单体应用和微服务之间的区别：</p><p><img src="img/micro-deployment.png" alt="micro-deployment.png"></p><p>在微服务的架构下，单体应用的各个业务模块被拆分为一个个单独的服务并部署在单独的进程里，每个服务都可以单独的部署和升级。这种去中心化的模式使得后期维护和开发变得更加灵活和方便。由于各个服务单独部署，所以可以使用不同的语句来开发各个业务服务模块。</p><h2 id="什么是Spring-Cloud"><a href="#什么是Spring-Cloud" class="headerlink" title="什么是Spring Cloud"></a>什么是Spring Cloud</h2><p><a href="https://projects.spring.io/spring-cloud/" target="_blank" rel="external">Spring Cloud</a>是一个基千Spring Boot实现的微服务架构开发工具。它为微服务架构中涉及的配置管理、服务治理、断路器、智能路由、微代理、控制总线、全局锁、决策竞选、分布式会话和集群状态管理等操作提供了一种简单的开发方式。Spring Cloud的诞生并不是为了解决微服务中的某一个问题，而是提供了一套解决微服务架构实施的综合性解决方案。</p><p>Spring Cloud是一个由各个独立项目组成的综合项目，每个独立项目有着不同的发布节奏，为了管理每个版本的子项目清单，避免Spring Cloud的版本号与其子项目的版本号相混淆，没有采用版本号的方式，而是通过命名的方式。这些版本的名字采用了伦敦地铁站的名字，根据字母表的顺序来对应版本时间顺序。比如”Angel”是Sping Cloud的第一个发行版名称, “Brixton”是Sping Cloud的第二个发行版名称。当一个版本的Spring Cloud项目的发布内容积累到临界点或者一个严重bug解决可用后，就会发布一个”service releases”版本，简称SRX版本，其中X是一个递增的数字，所以Brixton.SR5就是Brixton的第5个Release版本。</p><p>截至2018年4月02日，Spring Cloud已经发布了代号为Finchley的快照版本，采用的Spring Boot版本为2.0.1.RELEASE。Spring Cloud的版本和Spring Boot的版本关系可以查看官网给的例子。</p><p>以下是Spring Cloud版本与各个独立项目版本对应关系表：</p><table><thead><tr><th>Component</th><th>Edgware.SR3</th><th>Finchley.RC1</th><th>Finchley.BUILD-SNAPSHOT</th></tr></thead><tbody><tr><td>spring-cloud-aws</td><td>1.2.2.RELEASE</td><td>2.0.0.RC1</td><td>2.0.0.BUILD-SNAPSHOT</td></tr><tr><td>spring-cloud-bus</td><td>1.3.2.RELEASE</td><td>2.0.0.RC1</td><td>2.0.0.BUILD-SNAPSHOT</td></tr><tr><td>spring-cloud-cli</td><td>1.4.1.RELEASE</td><td>2.0.0.RC1</td><td>2.0.0.BUILD-SNAPSHOT</td></tr><tr><td>spring-cloud-commons</td><td>1.3.3.RELEASE</td><td>2.0.0.RC1</td><td>2.0.0.BUILD-SNAPSHOT</td></tr><tr><td>spring-cloud-contract</td><td>1.2.4.RELEASE</td><td>2.0.0.RC1</td><td>2.0.0.BUILD-SNAPSHOT</td></tr><tr><td>spring-cloud-config</td><td>1.4.3.RELEASE</td><td>2.0.0.RC1</td><td>2.0.0.BUILD-SNAPSHOT</td></tr><tr><td>spring-cloud-netflix</td><td>1.4.4.RELEASE</td><td>2.0.0.RC1</td><td>2.0.0.BUILD-SNAPSHOT</td></tr><tr><td>spring-cloud-security</td><td>1.2.2.RELEASE</td><td>2.0.0.RC1</td><td>2.0.0.BUILD-SNAPSHOT</td></tr><tr><td>spring-cloud-cloudfoundry</td><td>1.1.1.RELEASE</td><td>2.0.0.RC1</td><td>2.0.0.BUILD-SNAPSHOT</td></tr><tr><td>spring-cloud-consul</td><td>1.3.3.RELEASE</td><td>2.0.0.RC1</td><td>2.0.0.BUILD-SNAPSHOT</td></tr><tr><td>spring-cloud-sleuth</td><td>1.3.3.RELEASE</td><td>2.0.0.RC1</td><td>2.0.0.BUILD-SNAPSHOT</td></tr><tr><td>spring-cloud-stream</td><td>Ditmars.SR3</td><td>Elmhurst.RELEASE</td><td>Elmhurst.BUILD-SNAPSHOT</td></tr><tr><td>spring-cloud-zookeeper</td><td>1.2.1.RELEASE</td><td>2.0.0.RC1</td><td>2.0.0.BUILD-SNAPSHOT</td></tr><tr><td>spring-boot</td><td>1.5.10.RELEASE</td><td>2.0.1.RELEASE</td><td>2.0.0.BUILD-SNAPSHOT</td></tr><tr><td>spring-cloud-task</td><td>1.2.2.RELEASE</td><td>2.0.0.RC1</td><td>2.0.0.RELEASE</td></tr><tr><td>spring-cloud-vault</td><td>1.1.0.RELEASE</td><td>2.0.0.RC1</td><td>2.0.0.BUILD-SNAPSHOT</td></tr><tr><td>spring-cloud-gateway</td><td>1.0.1.RELEASE</td><td>2.0.0.RC1</td><td>2.0.0.BUILD-SNAPSHOT</td></tr><tr><td>spring-cloud-openfeign</td><td>&nbsp;</td><td>2.0.0.RC1</td><td>2.0.0.BUILD-SNAPSHOT</td></tr></tbody></table><p>Finchley使用Spring Boot 2.0.x构建，不建议与Spring Boot 1.5.x一起使用。</p><p>Dalston和Edgware发行版建立在Spring Boot 1.5.x之上，不建议与Spring Boot 2.0.x一起使用。</p><p>之后博文的例子将采用<a href="http://cloud.spring.io/spring-cloud-static/Edgware.SR3/multi/multi_spring-cloud.html" target="_blank" rel="external">Spring Cloud Edgware SR3</a>版本，对应的Spring Boot版本为1.5.13.RELEASE。</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ol><li><p><a href="http://blog.cuicc.com/blog/2015/07/22/microservices/" target="_blank" rel="external">http://blog.cuicc.com/blog/2015/07/22/microservices/</a></p></li><li><p><a href="https://www.ibm.com/developerworks/community/blogs/3302cc3b-074e-44da-90b1-5055f1dc0d9c/entry/%E8%A7%A3%E6%9E%90%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84_%E4%B8%80_%E4%BB%80%E4%B9%88%E6%98%AF%E5%BE%AE%E6%9C%8D%E5%8A%A1?lang=en_us" target="_blank" rel="external">https://www.ibm.com/developerworks/community/blogs/</a></p></li><li><p><a href="https://projects.spring.io/spring-cloud/" target="_blank" rel="external">https://projects.spring.io/spring-cloud/</a></p></li><li><p><a href="https://book.douban.com/subject/27025912/" target="_blank" rel="external">《Spring Cloud微服务实战》</a></p></li></ol><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Jun 06 2018 16:37:33 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;在传统的软件架构中，我们通常采用的是单体应用来构建一个系统，一个单体应用糅合了各种业务模块。起初在业务规模不是很大的情况下，对于单体应用的开发维护也相对容易。但随着企业的发展，业务规模与日递增，单体应用变得愈发臃肿。由于单体应用将各种业务模块聚合在一起，并且部署在一个进程内，所以通常我们对其中一个业务模块的修改也必须将整个应用重新打包上线。为了解决单体应用变得庞大脯肿之后产生的难以维护的问题，微服务架构便出现在了大家的视线里。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Spring Cloud" scheme="http://mrbird.cc/tags/Spring-Cloud/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot Devtools热部署</title>
    <link href="http://mrbird.cc/Spring-Boot-Devtools.html"/>
    <id>http://mrbird.cc/Spring-Boot-Devtools.html</id>
    <published>2018-03-31T01:25:49.000Z</published>
    <updated>2018-05-23T03:31:39.786Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Jun 06 2018 16:37:32 GMT+0800 (中国标准时间) --><p>平日里开发项目中，修改了Java代码或者配置文件的时候，必须手动重启项目才能生效。所谓的热部署就是在你修改了后端代码后不需要手动重启，工具会帮你快速的自动重启是修改生效。其深层原理是使用了两个<code>ClassLoader</code>，一个<code>Classloader</code>加载那些不会改变的类（第三方Jar包），另一个<code>ClassLoader</code>加载会更改的类，称为<code>restart ClassLoader</code>，这样在有代码更改的时候，原来的<code>restart ClassLoader</code> 被丢弃，重新创建一个<code>restart ClassLoader</code>，由于需要加载的类相比较少，所以实现了较快的重启时间。</p><a id="more"></a><p>本文将介绍如何通过使用<code>Spring-Boot-devtools</code>来实现Spring Boot项目的热部署。IDE使用的是Eclipse Oxygen，并且使用Maven构建。</p><h2 id="引入Devtools"><a href="#引入Devtools" class="headerlink" title="引入Devtools"></a>引入Devtools</h2><p>搭建一个简单的Spring Boot项目，然后引入Spring-Boot-devtools：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>devtools会监听classpath下的文件变动，并且会立即重启应用（发生在保存时机），因为其采用的虚拟机机制，该项重启是很快的。</p><p>在Eclipse中生效还需要修改<code>spring-boot-maven-plugin</code>插件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">fork</span>&gt;</span>true<span class="tag">&lt;/<span class="name">fork</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>并且开启Build Automatically：</p><p><img src="img/QQ截图20180523094924.png" alt="QQ截图20180523094924.png"></p><h2 id="测试热部署"><a href="#测试热部署" class="headerlink" title="测试热部署"></a>测试热部署</h2><p>在入口类中添加一个方法，用于热部署测试：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</div><div class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</div><div class="line"></div><div class="line"><span class="meta">@RestController</span></div><div class="line"><span class="meta">@SpringBootApplication</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoApplication</span> </span>&#123;</div><div class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/"</span>)</div><div class="line">    <span class="function">String <span class="title">index</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">"hello spring boot"</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        SpringApplication.run(DemoApplication.class, args);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>启动项目访问<a href="http://localhost:8080/" target="_blank" rel="external">http://localhost:8080/</a>，页面输出hello spring boot。</p><p>将方法的返回值修改为hello world并在保存的瞬间，应用便重启好了，刷新页面，内容也将得到更改。</p><h2 id="所有配置"><a href="#所有配置" class="headerlink" title="所有配置"></a>所有配置</h2><p>下面是所有Devtools在Spring Boot中的可选配置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"># Whether to enable a livereload.com-compatible server.</div><div class="line">spring.devtools.livereload.enabled=true </div><div class="line"></div><div class="line"># Server port.</div><div class="line">spring.devtools.livereload.port=35729 </div><div class="line"></div><div class="line"># Additional patterns that should be excluded from triggering a full restart.</div><div class="line">spring.devtools.restart.additional-exclude= </div><div class="line"></div><div class="line"># Additional paths to watch for changes.</div><div class="line">spring.devtools.restart.additional-paths= </div><div class="line"></div><div class="line"># Whether to enable automatic restart.</div><div class="line">spring.devtools.restart.enabled=true</div><div class="line"></div><div class="line"># Patterns that should be excluded from triggering a full restart.</div><div class="line">spring.devtools.restart.exclude=META-INF/maven/**,META-INF/resources/**,resources/**,static/**,public/**,templates/**,**/*Test.class,**/*Tests.class,git.properties,META-INF/build-info.properties</div><div class="line"></div><div class="line"># Whether to log the condition evaluation delta upon restart.</div><div class="line">spring.devtools.restart.log-condition-evaluation-delta=true </div><div class="line"></div><div class="line"># Amount of time to wait between polling for classpath changes.</div><div class="line">spring.devtools.restart.poll-interval=1s </div><div class="line"></div><div class="line"># Amount of quiet time required without any classpath changes before a restart is triggered.</div><div class="line">spring.devtools.restart.quiet-period=400ms </div><div class="line"></div><div class="line"># Name of a specific file that, when changed, triggers the restart check. If not specified, any classpath file change triggers the restart.</div><div class="line">spring.devtools.restart.trigger-file=</div></pre></td></tr></table></figure><p></p><p>源码链接：<a href="https://github.com/wuyouzhuguli/Spring-Boot-Demos/tree/master/24.Spring-Boot-Devtools" target="_blank" rel="external">https://github.com/wuyouzhuguli/Spring-Boot-Demos/tree/master/24.Spring-Boot-Devtools</a></p><blockquote><p>参考自： <a href="http://412887952-qq-com.iteye.com/blog/2300313" target="_blank" rel="external">http://412887952-qq-com.iteye.com/blog/2300313</a></p></blockquote><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Jun 06 2018 16:37:32 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;平日里开发项目中，修改了Java代码或者配置文件的时候，必须手动重启项目才能生效。所谓的热部署就是在你修改了后端代码后不需要手动重启，工具会帮你快速的自动重启是修改生效。其深层原理是使用了两个&lt;code&gt;ClassLoader&lt;/code&gt;，一个&lt;code&gt;Classloader&lt;/code&gt;加载那些不会改变的类（第三方Jar包），另一个&lt;code&gt;ClassLoader&lt;/code&gt;加载会更改的类，称为&lt;code&gt;restart ClassLoader&lt;/code&gt;，这样在有代码更改的时候，原来的&lt;code&gt;restart ClassLoader&lt;/code&gt; 被丢弃，重新创建一个&lt;code&gt;restart ClassLoader&lt;/code&gt;，由于需要加载的类相比较少，所以实现了较快的重启时间。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Spring Boot" scheme="http://mrbird.cc/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>使用Spring Boot Admin监控服务</title>
    <link href="http://mrbird.cc/Spring-Boot-Admin.html"/>
    <id>http://mrbird.cc/Spring-Boot-Admin.html</id>
    <published>2018-03-25T01:12:02.000Z</published>
    <updated>2018-05-14T11:18:11.961Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Jun 06 2018 16:37:32 GMT+0800 (中国标准时间) --><p>在<a href="https://mrbird.cc/Acutator-Spring-Boot.html">使用Actuator监控Spring Boot应用</a>一节中我们介绍了使用Actuator来监控Spring Boot应用，其提供了许多REST接口来查看应用的信息。但其返回的是大量的JSON格式数据，信息看上去不直观也不易于理解。而Spring Boot Admin（SBA）是一款基于Actuator开发的开源软件：<a href="https://github.com/codecentric/spring-boot-admin" target="_blank" rel="external">https://github.com/codecentric/spring-boot-admin</a>，以图形化界面的方式展示Spring Boot应用的配置信息、Beans信息、环境属性、线程信息、JVM状况等。本文使用的Spring Boot Admin版本为1.5.7，有能力的朋友可以直接阅读官方文档：<a href="http://codecentric.github.io/spring-boot-admin/1.5.7" target="_blank" rel="external">http://codecentric.github.io/spring-boot-admin/1.5.7</a>。<a id="more"></a></p><h2 id="搭建SBA服务端"><a href="#搭建SBA服务端" class="headerlink" title="搭建SBA服务端"></a>搭建SBA服务端</h2><p>搭建一个SBA服务端（Server），其他被监控的Spring Boot应用作为客户端（Client），客户端通过HTTP的方式将自己注册到服务端，以供服务端进行监控服务。大致关系如下图所示：</p><p><img src="img/QQ截图20180514100246.png" alt="QQ截图20180514100246.png"></p><h3 id="引入SBA-Server依赖"><a href="#引入SBA-Server依赖" class="headerlink" title="引入SBA Server依赖"></a>引入SBA Server依赖</h3><p>使用<a href="http://start.spring.io/" target="_blank" rel="external">http://start.spring.io/</a>开启一个简单的Spring Boot项目，然后引入spring-boot-admin-server相关依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>de.codecentric<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-admin-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>de.codecentric<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-admin-server-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span>·</div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure><p></p><h3 id="开启Admin监控"><a href="#开启Admin监控" class="headerlink" title="开启Admin监控"></a>开启Admin监控</h3><p>在Spring Boot入口类中加入<code>@EnableAutoConfiguration</code>，<code>@EnableAdminServer</code>注解开启监控功能：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</div><div class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.EnableAutoConfiguration;</div><div class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</div><div class="line"></div><div class="line"><span class="keyword">import</span> de.codecentric.boot.admin.config.EnableAdminServer;</div><div class="line"></div><div class="line"><span class="meta">@SpringBootApplication</span></div><div class="line"><span class="meta">@EnableAutoConfiguration</span></div><div class="line"><span class="meta">@EnableAdminServer</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoApplication</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        SpringApplication.run(DemoApplication.class, args);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>然后在yml中对项目进行简单的配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attr">server:</span></div><div class="line"><span class="attr">  port:</span> <span class="number">8080</span></div><div class="line"><span class="attr">  context-path:</span> <span class="string">/admin-server</span></div></pre></td></tr></table></figure><p></p><p>启动项目，访问<a href="http://localhost:8080/admin-server" target="_blank" rel="external">http://localhost:8080/admin-server</a>：</p><p><img src="img/QQ截图20180514102405.png" alt="QQ截图20180514102405.png"></p><p>因为还没添加客户端，所以监控列表里是空的，接下来创建一个Spring Boot应用作为客户端。</p><h2 id="SBA客户端"><a href="#SBA客户端" class="headerlink" title="SBA客户端"></a>SBA客户端</h2><h3 id="引入SBA-Client依赖"><a href="#引入SBA-Client依赖" class="headerlink" title="引入SBA Client依赖"></a>引入SBA Client依赖</h3><p>同样的，使用<a href="http://start.spring.io/" target="_blank" rel="external">http://start.spring.io/</a>搭建一个简单的Spring Boot项目作为SBA客户端，然后引入Client依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>de.codecentric<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-admin-starter-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>yml配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="attr">management:</span></div><div class="line"><span class="attr">  security:</span></div><div class="line"><span class="attr">    enabled:</span> <span class="literal">false</span></div><div class="line">    </div><div class="line"><span class="attr">server:</span></div><div class="line"><span class="attr">  port:</span> <span class="number">8081</span></div><div class="line">  </div><div class="line"><span class="attr">spring:</span></div><div class="line"><span class="attr">  boot:</span></div><div class="line"><span class="attr">    admin:</span></div><div class="line"><span class="attr">      url:</span> <span class="attr">http://localhost:8080/admin-server</span></div></pre></td></tr></table></figure><p></p><p><code>spring.boot.admin.url</code>配置的是SBA服务端的地址，<code>management.security.enabled: false</code>这里先关闭安全验证。启动客户端后查看<a href="http://localhost:8080/admin-server" target="_blank" rel="external">http://localhost:8080/admin-server</a>地址：</p><p><img src="img/QQ截图20180514104330.png" alt="QQ截图20180514104330.png"></p><p>可看到SBA客户端已经被注册到SBA服务端了，接下来便可以在SBA服务端页面上查看各种SBA客户端信息：</p><p><img src="img/2018-05-14_105123.png" alt="2018-05-14_105123.png"></p><h3 id="客户端额外信息"><a href="#客户端额外信息" class="headerlink" title="客户端额外信息"></a>客户端额外信息</h3><p>默认客户端在服务端监控列表呈现的信息并不多：</p><p><img src="img/QQ截图20180514105704.png" alt="QQ截图20180514105704.png"></p><p>我们可以在SBA客户端yml里配置更为详细的信息：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="attr">info:</span> </div><div class="line"><span class="attr">  app:</span>  </div><div class="line"><span class="attr">    name:</span> <span class="string">"@project.name@"</span></div><div class="line"><span class="attr">    description:</span> <span class="string">"@project.description@"</span>  </div><div class="line"><span class="attr">    version:</span> <span class="string">"@project.version@"</span>  </div><div class="line"><span class="attr">    spring-boot-version:</span> <span class="string">"@project.parent.version@"</span></div></pre></td></tr></table></figure><p></p><p>然后便可以在SBA服务端看到较为详细的客户端信息： <img src="img/QQ截图20180514111433.png" alt="QQ截图20180514111433.png"></p><h2 id="添加邮件预警"><a href="#添加邮件预警" class="headerlink" title="添加邮件预警"></a>添加邮件预警</h2><p>SBA服务端也可以配置邮件预警服务，默认情况下对于被检测的应用启动或者停止的时候会触发预警。</p><p>首先添加邮件依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-mail<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>然后在SBA服务端的yml中配置邮件预警：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="attr">spring:</span></div><div class="line"><span class="attr">  mail:</span></div><div class="line"><span class="attr">    host:</span> <span class="string">smtp.163.com</span></div><div class="line"><span class="attr">    username:</span> <span class="string">xxx@163.com</span></div><div class="line"><span class="attr">    password:</span> <span class="string">xxx</span></div><div class="line"><span class="attr">    properties:</span></div><div class="line"><span class="attr">      mail:</span></div><div class="line"><span class="attr">        smtp:</span></div><div class="line"><span class="attr">          auth:</span> <span class="literal">true</span></div><div class="line"><span class="attr">          starttls:</span></div><div class="line"><span class="attr">            enable:</span> <span class="literal">true</span></div><div class="line"><span class="attr">            required:</span> <span class="literal">true</span></div><div class="line"></div><div class="line"><span class="attr">  boot:</span></div><div class="line"><span class="attr">    admin:</span></div><div class="line"><span class="attr">      notify:</span></div><div class="line"><span class="attr">        mail:</span></div><div class="line"><span class="attr">          from:</span> <span class="string">xxx@163.com</span></div><div class="line"><span class="attr">          to:</span> <span class="string">xxx@qq.com</span></div></pre></td></tr></table></figure><p></p><p>邮件的具体使用方法可参考<a href="https://mrbird.cc/Spring-Boot-Email.html">https://mrbird.cc/Spring-Boot-Email.html</a>。</p><p>当被检测的应用关停的时候，收到如下邮件：</p><p><img src="img/QQ截图20180514190424.png" alt="QQ截图20180514190424.png"></p><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><h3 id="SBA-Server配置说明"><a href="#SBA-Server配置说明" class="headerlink" title="SBA Server配置说明"></a>SBA Server配置说明</h3><table><thead><tr><th align="left" style="width:28%">Property name</th><th align="left" style="width:28%">Description</th><th align="left" style="width:15%">Default value</th><th align="left">中文说明</th></tr></thead><tbody><tr><td align="left">spring.boot.admin.context-path</td><td align="left">The context-path prefixes the path where the Admin Server’s statics assets and API should be served. Relative to the Dispatcher-Servlet.</td><td align="left"></td><td align="left">Admin Server 保留的静态访问和API的前缀（当你在业务应用中使用而不是单独使用时就很有必要了）</td></tr><tr><td align="left">spring.boot.admin.monitor.period</td><td align="left">Time interval in ms to update the status of applications with expired status-informations.</td><td align="left">10.000</td><td align="left">更新应用信息的频率，单位毫秒</td></tr><tr><td align="left">spring.boot.admin.monitor.status-lifetime</td><td align="left">Lifetime of application statuses in ms. The applications /health-endpoint will not be queried until the lifetime has expired.</td><td align="left">10.000</td><td align="left">被监控的应用信息的过期时间，单位毫秒</td></tr></tbody></table><h3 id="SBA-Client配置说明"><a href="#SBA-Client配置说明" class="headerlink" title="SBA Client配置说明"></a>SBA Client配置说明</h3><table><thead><tr><th align="left" style="width:28%">Property name</th><th align="left" style="width:28%">Description</th><th align="left" style="width:15%">Default value</th><th align="left">中文说明</th></tr></thead><tbody><tr><td align="left">spring.boot.admin.client.enabled</td><td align="left">Enables the Spring Boot Admin Client.</td><td align="left">true</td><td align="left">默认开启</td></tr><tr><td align="left">spring.boot.admin.url</td><td align="left">List of URLs of the Spring Boot Admin server to register at. This triggers the AutoConfiguration. Mandatory.</td><td align="left"></td><td align="left">admin server 的地址列表，此设置会触发自动配置，必须</td></tr><tr><td align="left">spring.boot.admin.api-path</td><td align="left">Http-path of registration endpoint at your admin server.</td><td align="left">“api/applications”</td><td align="left">注册到 admin server 端点的 Http-path</td></tr><tr><td align="left">spring.boot.admin.username spring.boot.admin.password</td><td align="left">Username and password for http-basic authentication. If set the registration uses http-basic-authentication when registering at the admin server.</td><td align="left"></td><td align="left">注册到 admin server 的账号密码</td></tr><tr><td align="left">spring.boot.admin.period</td><td align="left">Interval for repeating the registration (in ms).</td><td align="left">10.000</td><td align="left">重试注册的间隔时间</td></tr><tr><td align="left">spring.boot.admin.auto-registration</td><td align="left">If set to true the periodic task to register the application is automatically scheduled after the application is ready.</td><td align="left">true</td><td align="left">应用启动后自动执行周期性的注册任务</td></tr><tr><td align="left">spring.boot.admin.auto-deregistration</td><td align="left">Switch to enable auto-deregistration at Spring Boot Admin server when context is closed.</td><td align="left">false</td><td align="left">当应用关闭时，自动取消注册</td></tr><tr><td align="left">spring.boot.admin.client.health-url</td><td align="left">Client-health-url to register with. Can be overridden in case the reachable URL is different (e.g. Docker). Must be unique in registry.</td><td align="left">Guessed based on management-url and endpoints.health.id.</td><td align="left"></td></tr><tr><td align="left">spring.boot.admin.client.management-url</td><td align="left">Client-management-url to register with. Can be overridden in case the reachable url is different (e.g. Docker).</td><td align="left">Guessed based on service-url, server.servlet-path, management.port and management.context-path.</td><td align="left"></td></tr><tr><td align="left">spring.boot.admin.client.service-url</td><td align="left">Client-service-url to register with. Can be overridden in case the reachable url is different (e.g. Docker).</td><td align="left">Guessed based on hostname, server.port and server.context-path.</td><td align="left"></td></tr><tr><td align="left">spring.boot.admin.client.name</td><td align="left">Name to register with.</td><td align="left">${spring.application.name} if set, “spring-boot-application” otherwise.</td><td align="left">注册时的名字</td></tr><tr><td align="left">spring.boot.admin.client.prefer-ip</td><td align="left">Use the ip-address rather then the hostname in the guessed urls. If server.address / management.address is set, it get used. Otherwise the IP address returned from InetAddress.getLocalHost() gets used.</td><td align="left">false</td><td align="left"></td></tr></tbody></table><h3 id="邮件配置选项"><a href="#邮件配置选项" class="headerlink" title="邮件配置选项"></a>邮件配置选项</h3><table><thead><tr><th align="left">Property name</th><th align="left">Description</th><th align="left" style="width:15%">Default value</th><th align="left">中文说明</th></tr></thead><tbody><tr><td align="left">spring.boot.admin.notify.mail.enabled</td><td align="left">Enable mail notifications</td><td align="left">true</td><td align="left">默认启用</td></tr><tr><td align="left">spring.boot.admin.notify.mail.ignore-changes</td><td align="left">Comma-delimited list of status changes to be ignored. Format: “:”. Wildcards allowed.</td><td align="left">“UNKNOWN:UP”</td><td align="left">需要忽略的状态改变通知，逗号分隔</td></tr><tr><td align="left">spring.boot.admin.notify.mail.to</td><td align="left">Comma-delimited list of mail recipients</td><td align="left">“root@localhost”</td><td align="left">接收通知的邮箱地址，逗号分隔</td></tr><tr><td align="left">spring.boot.admin.notify.mail.cc</td><td align="left">Comma-delimited list of carbon-copy recipients</td><td align="left"></td><td align="left">抄送</td></tr><tr><td align="left">spring.boot.admin.notify.mail.from</td><td align="left">Mail sender</td><td align="left"></td><td align="left">发送人</td></tr><tr><td align="left">spring.boot.admin.notify.mail.subject</td><td align="left">Mail subject. SpEL-expressions are supported</td><td align="left">“#{application.name} (#{application.id}) is #{to.status}”</td><td align="left">主题</td></tr><tr><td align="left">spring.boot.admin.notify.mail.text</td><td align="left">Mail body. SpEL-expressions are supported</td><td align="left">“#{application.name} (#{application.id})\nstatus changed from #{from.status} to #{to.status}\n\n#{application.healthUrl}”</td><td align="left">内容</td></tr></tbody></table><p>参考博文：<a href="https://blog.csdn.net/kinginblue/article/details/52132113#t26" target="_blank" rel="external">https://blog.csdn.net/kinginblue/article/details/52132113#t26</a></p><p>源码链接：<a href="https://github.com/wuyouzhuguli/Spring-Boot-Demos/tree/master/23.Spring-Boot-Admin" target="_blank" rel="external">https://github.com/wuyouzhuguli/Spring-Boot-Demos/tree/master/23.Spring-Boot-Admin</a>。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Jun 06 2018 16:37:32 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;在&lt;a href=&quot;https://mrbird.cc/Acutator-Spring-Boot.html&quot;&gt;使用Actuator监控Spring Boot应用&lt;/a&gt;一节中我们介绍了使用Actuator来监控Spring Boot应用，其提供了许多REST接口来查看应用的信息。但其返回的是大量的JSON格式数据，信息看上去不直观也不易于理解。而Spring Boot Admin（SBA）是一款基于Actuator开发的开源软件：&lt;a href=&quot;https://github.com/codecentric/spring-boot-admin&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/codecentric/spring-boot-admin&lt;/a&gt;，以图形化界面的方式展示Spring Boot应用的配置信息、Beans信息、环境属性、线程信息、JVM状况等。本文使用的Spring Boot Admin版本为1.5.7，有能力的朋友可以直接阅读官方文档：&lt;a href=&quot;http://codecentric.github.io/spring-boot-admin/1.5.7&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://codecentric.github.io/spring-boot-admin/1.5.7&lt;/a&gt;。
    
    </summary>
    
    
      <category term="Spring Boot" scheme="http://mrbird.cc/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>使用Spring Boot发送邮件</title>
    <link href="http://mrbird.cc/Spring-Boot-Email.html"/>
    <id>http://mrbird.cc/Spring-Boot-Email.html</id>
    <published>2018-03-20T07:16:25.000Z</published>
    <updated>2018-05-10T06:14:53.447Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Jun 06 2018 16:37:32 GMT+0800 (中国标准时间) --><p>在项目的维护过程中，我们通常会在应用中加入短信或者邮件预警功能，比如当应用出现异常宕机时应该及时地将预警信息发送给运维或者开发人员，本文将介绍如何在Spring Boot中发送邮件。在Spring Boot中发送邮件使用的是Spring提供的<code>org.springframework.mail.javamail.JavaMailSender</code>，其提供了许多简单易用的方法，可发送简单的邮件、HTML格式的邮件、带附件的邮件，并且可以创建邮件模板。<a id="more"></a></p><h2 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h2><p>在Spring Boot中发送邮件，需要用到<code>spring-boot-starter-mail</code>，引入<code>spring-boot-starter-mail</code>：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-mail<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure><p></p><h2 id="邮件配置"><a href="#邮件配置" class="headerlink" title="邮件配置"></a>邮件配置</h2><p>在application.yml中进行简单的配置（以163邮件为例）：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="attr">server:</span></div><div class="line"><span class="attr">  port:</span> <span class="number">80</span></div><div class="line"></div><div class="line"><span class="attr">spring:</span></div><div class="line"><span class="attr">  mail:</span></div><div class="line"><span class="attr">    host:</span> <span class="string">smtp.163.com</span></div><div class="line"><span class="attr">    username:</span> <span class="string">你的账号</span></div><div class="line"><span class="attr">    password:</span> <span class="string">你的密码</span></div><div class="line"><span class="attr">    properties:</span></div><div class="line"><span class="attr">      mail:</span></div><div class="line"><span class="attr">        smtp:</span></div><div class="line"><span class="attr">          auth:</span> <span class="literal">true</span></div><div class="line"><span class="attr">          starttls:</span></div><div class="line"><span class="attr">            enable:</span> <span class="literal">true</span></div><div class="line"><span class="attr">            required:</span> <span class="literal">true</span></div></pre></td></tr></table></figure><p></p><p><code>spring.mail.username</code>，<code>spring.mail.password</code>填写自己的邮箱账号密码即可。</p><h2 id="发送简单的邮件"><a href="#发送简单的邮件" class="headerlink" title="发送简单的邮件"></a>发送简单的邮件</h2><p>编写<code>EmailController</code>，注入<code>JavaMailSender</code>:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</div><div class="line"><span class="keyword">import</span> org.springframework.mail.SimpleMailMessage;</div><div class="line"><span class="keyword">import</span> org.springframework.mail.javamail.JavaMailSender;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</div><div class="line"></div><div class="line"><span class="meta">@RestController</span></div><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/email"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmailController</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> JavaMailSender jms;</div><div class="line">    </div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spring.mail.username&#125;"</span>)</div><div class="line">    <span class="keyword">private</span> String from;</div><div class="line">    </div><div class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"sendSimpleEmail"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sendSimpleEmail</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            SimpleMailMessage message = <span class="keyword">new</span> SimpleMailMessage();</div><div class="line">            message.setFrom(from);</div><div class="line">            message.setTo(<span class="string">"888888@qq.com"</span>); <span class="comment">// 接收地址</span></div><div class="line">            message.setSubject(<span class="string">"一封简单的邮件"</span>); <span class="comment">// 标题</span></div><div class="line">            message.setText(<span class="string">"使用Spring Boot发送简单邮件。"</span>); <span class="comment">// 内容</span></div><div class="line">            jms.send(message);</div><div class="line">            <span class="keyword">return</span> <span class="string">"发送成功"</span>;</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">            <span class="keyword">return</span> e.getMessage();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>启动项目访问<a href="http://localhost/email/sendSimpleEmail" target="_blank" rel="external">http://localhost/email/sendSimpleEmail</a>，提示发送成功：</p><p><img src="img/QQ截图20180509111645.png" alt="QQ截图20180509111645.png"></p><h2 id="发送HTML格式的邮件"><a href="#发送HTML格式的邮件" class="headerlink" title="发送HTML格式的邮件"></a>发送HTML格式的邮件</h2><p>改造<code>EmailController</code>，<code>SimpleMailMessage</code>替换为<code>MimeMessage</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> javax.mail.internet.MimeMessage;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</div><div class="line"><span class="keyword">import</span> org.springframework.mail.SimpleMailMessage;</div><div class="line"><span class="keyword">import</span> org.springframework.mail.javamail.JavaMailSender;</div><div class="line"><span class="keyword">import</span> org.springframework.mail.javamail.MimeMessageHelper;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</div><div class="line"></div><div class="line"><span class="meta">@RestController</span></div><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/email"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmailController</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> JavaMailSender jms;</div><div class="line">    </div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spring.mail.username&#125;"</span>)</div><div class="line">    <span class="keyword">private</span> String from;</div><div class="line">    </div><div class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"sendHtmlEmail"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sendHtmlEmail</span><span class="params">()</span> </span>&#123;</div><div class="line">        MimeMessage message = <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            message = jms.createMimeMessage();</div><div class="line">            MimeMessageHelper helper = <span class="keyword">new</span> MimeMessageHelper(message, <span class="keyword">true</span>);</div><div class="line">            helper.setFrom(from); </div><div class="line">            helper.setTo(<span class="string">"888888@qq.com"</span>); <span class="comment">// 接收地址</span></div><div class="line">            helper.setSubject(<span class="string">"一封HTML格式的邮件"</span>); <span class="comment">// 标题</span></div><div class="line">            <span class="comment">// 带HTML格式的内容</span></div><div class="line">            StringBuffer sb = <span class="keyword">new</span> StringBuffer(<span class="string">"&lt;p style='color:#42b983'&gt;使用Spring Boot发送HTML格式邮件。&lt;/p&gt;"</span>);</div><div class="line">            helper.setText(sb.toString(), <span class="keyword">true</span>);</div><div class="line">            jms.send(message);</div><div class="line">            <span class="keyword">return</span> <span class="string">"发送成功"</span>;</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">            <span class="keyword">return</span> e.getMessage();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p><code>helper.setText(sb.toString(), true);</code>中的<code>true</code>表示发送HTML格式邮件。启动项目，访问<a href="http://localhost/email/sendHtmlEmail" target="_blank" rel="external">http://localhost/email/sendHtmlEmail</a>，提示发送成功，可看到文本已经加上了颜色<code>#42b983</code>：</p><p><img src="img/QQ截图20180509112837.png" alt="QQ截图20180509112837.png"></p><h2 id="发送带附件的邮件"><a href="#发送带附件的邮件" class="headerlink" title="发送带附件的邮件"></a>发送带附件的邮件</h2><p>发送带附件的邮件和普通邮件相比，其实就只是多了个传入附件的过程。不过使用的仍是<code>MimeMessage</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.springboot.demo.controller;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.File;</div><div class="line"></div><div class="line"><span class="keyword">import</span> javax.mail.internet.MimeMessage;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</div><div class="line"><span class="keyword">import</span> org.springframework.core.io.FileSystemResource;</div><div class="line"><span class="keyword">import</span> org.springframework.mail.SimpleMailMessage;</div><div class="line"><span class="keyword">import</span> org.springframework.mail.javamail.JavaMailSender;</div><div class="line"><span class="keyword">import</span> org.springframework.mail.javamail.MimeMessageHelper;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</div><div class="line"></div><div class="line"><span class="meta">@RestController</span></div><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/email"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmailController</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> JavaMailSender jms;</div><div class="line">    </div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spring.mail.username&#125;"</span>)</div><div class="line">    <span class="keyword">private</span> String from;</div><div class="line">	</div><div class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"sendAttachmentsMail"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sendAttachmentsMail</span><span class="params">()</span> </span>&#123;</div><div class="line">        MimeMessage message = <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            message = jms.createMimeMessage();</div><div class="line">            MimeMessageHelper helper = <span class="keyword">new</span> MimeMessageHelper(message, <span class="keyword">true</span>);</div><div class="line">            helper.setFrom(from); </div><div class="line">            helper.setTo(<span class="string">"888888@qq.com"</span>); <span class="comment">// 接收地址</span></div><div class="line">            helper.setSubject(<span class="string">"一封带附件的邮件"</span>); <span class="comment">// 标题</span></div><div class="line">            helper.setText(<span class="string">"详情参见附件内容！"</span>); <span class="comment">// 内容</span></div><div class="line">            <span class="comment">// 传入附件</span></div><div class="line">            FileSystemResource file = <span class="keyword">new</span> FileSystemResource(<span class="keyword">new</span> File(<span class="string">"src/main/resources/static/file/项目文档.docx"</span>));</div><div class="line">            helper.addAttachment(<span class="string">"项目文档.docx"</span>, file);</div><div class="line">            jms.send(message);</div><div class="line">            <span class="keyword">return</span> <span class="string">"发送成功"</span>;</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">            <span class="keyword">return</span> e.getMessage();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>启动项目访问<a href="http://localhost/email/sendAttachmentsMail" target="_blank" rel="external">http://localhost/email/sendAttachmentsMail</a>，提示发送成功：</p><p><img src="img/QQ截图20180510101405.png" alt="QQ截图20180510101405.png"></p><h2 id="发送带静态资源的邮件"><a href="#发送带静态资源的邮件" class="headerlink" title="发送带静态资源的邮件"></a>发送带静态资源的邮件</h2><p>发送带静态资源的邮件其实就是在发送HTML邮件的基础上嵌入静态资源（比如图片），嵌入静态资源的过程和传入附件类似，唯一的区别在于需要标识资源的cid：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.springboot.demo.controller;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.File;</div><div class="line"></div><div class="line"><span class="keyword">import</span> javax.mail.internet.MimeMessage;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</div><div class="line"><span class="keyword">import</span> org.springframework.core.io.FileSystemResource;</div><div class="line"><span class="keyword">import</span> org.springframework.mail.SimpleMailMessage;</div><div class="line"><span class="keyword">import</span> org.springframework.mail.javamail.JavaMailSender;</div><div class="line"><span class="keyword">import</span> org.springframework.mail.javamail.MimeMessageHelper;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</div><div class="line"></div><div class="line"><span class="meta">@RestController</span></div><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/email"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmailController</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> JavaMailSender jms;</div><div class="line">    </div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spring.mail.username&#125;"</span>)</div><div class="line">    <span class="keyword">private</span> String from;</div><div class="line">	</div><div class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"sendInlineMail"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sendInlineMail</span><span class="params">()</span> </span>&#123;</div><div class="line">        MimeMessage message = <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            message = jms.createMimeMessage();</div><div class="line">            MimeMessageHelper helper = <span class="keyword">new</span> MimeMessageHelper(message, <span class="keyword">true</span>);</div><div class="line">            helper.setFrom(from); </div><div class="line">            helper.setTo(<span class="string">"888888@qq.com"</span>); <span class="comment">// 接收地址</span></div><div class="line">            helper.setSubject(<span class="string">"一封带静态资源的邮件"</span>); <span class="comment">// 标题</span></div><div class="line">            helper.setText(<span class="string">"&lt;html&gt;&lt;body&gt;博客图：&lt;img src='cid:img'/&gt;&lt;/body&gt;&lt;/html&gt;"</span>, <span class="keyword">true</span>); <span class="comment">// 内容</span></div><div class="line">            <span class="comment">// 传入附件</span></div><div class="line">            FileSystemResource file = <span class="keyword">new</span> FileSystemResource(<span class="keyword">new</span> File(<span class="string">"src/main/resources/static/img/sunshine.png"</span>));</div><div class="line">            helper.addInline(<span class="string">"img"</span>, file); </div><div class="line">            jms.send(message);</div><div class="line">            <span class="keyword">return</span> <span class="string">"发送成功"</span>;</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">            <span class="keyword">return</span> e.getMessage();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p><code>helper.addInline(&quot;img&quot;, file);</code>中的img和图片标签里cid后的名称相对应。启动项目访问<a href="http://localhost/email/sendInlineMail" target="_blank" rel="external">http://localhost/email/sendInlineMail</a>，提示发送成功：</p><p><img src="img/QQ截图20180510111000.png" alt="QQ截图20180510111000.png"></p><h2 id="使用模板发送邮件"><a href="#使用模板发送邮件" class="headerlink" title="使用模板发送邮件"></a>使用模板发送邮件</h2><p>在发送验证码等情况下可以创建一个邮件的模板，唯一的变量为验证码。这个例子中使用的模板解析引擎为Thymeleaf，所以首先引入Thymeleaf依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>在template目录下创建一个<code>emailTemplate.html</code>模板：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh"</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>模板<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    您好，您的验证码为&#123;code&#125;，请在两分钟内使用完成操作。</div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>发送模板邮件，本质上还是发送HTML邮件，只不过多了绑定变量的过程，详细如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.springboot.demo.controller;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.File;</div><div class="line"></div><div class="line"><span class="keyword">import</span> javax.mail.internet.MimeMessage;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</div><div class="line"><span class="keyword">import</span> org.springframework.core.io.FileSystemResource;</div><div class="line"><span class="keyword">import</span> org.springframework.mail.SimpleMailMessage;</div><div class="line"><span class="keyword">import</span> org.springframework.mail.javamail.JavaMailSender;</div><div class="line"><span class="keyword">import</span> org.springframework.mail.javamail.MimeMessageHelper;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</div><div class="line"><span class="keyword">import</span> org.thymeleaf.TemplateEngine;</div><div class="line"><span class="keyword">import</span> org.thymeleaf.context.Context;</div><div class="line"></div><div class="line"><span class="meta">@RestController</span></div><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/email"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmailController</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> JavaMailSender jms;</div><div class="line">    </div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spring.mail.username&#125;"</span>)</div><div class="line">    <span class="keyword">private</span> String from;</div><div class="line">    </div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> TemplateEngine templateEngine;</div><div class="line">	</div><div class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"sendTemplateEmail"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sendTemplateEmail</span><span class="params">(String code)</span> </span>&#123;</div><div class="line">        MimeMessage message = <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            message = jms.createMimeMessage();</div><div class="line">            MimeMessageHelper helper = <span class="keyword">new</span> MimeMessageHelper(message, <span class="keyword">true</span>);</div><div class="line">            helper.setFrom(from); </div><div class="line">            helper.setTo(<span class="string">"888888@qq.com"</span>); <span class="comment">// 接收地址</span></div><div class="line">            helper.setSubject(<span class="string">"邮件摸板测试"</span>); <span class="comment">// 标题</span></div><div class="line">            <span class="comment">// 处理邮件模板</span></div><div class="line">            Context context = <span class="keyword">new</span> Context();</div><div class="line">            context.setVariable(<span class="string">"code"</span>, code);</div><div class="line">            String template = templateEngine.process(<span class="string">"emailTemplate"</span>, context);</div><div class="line">            helper.setText(template, <span class="keyword">true</span>);</div><div class="line">            jms.send(message);</div><div class="line">            <span class="keyword">return</span> <span class="string">"发送成功"</span>;</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">            <span class="keyword">return</span> e.getMessage();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>其中<code>code</code>对应模板里的<code>${code}</code>变量。启动项目，访问<a href="http://localhost/email/sendTemplateEmail?code=EOS9" target="_blank" rel="external">http://localhost/email/sendTemplateEmail?code=EOS9</a>，页面提示发送成功：</p><p><img src="img/QQ截图20180510134244.png" alt="QQ截图20180510134244.png"></p><p>源码链接：<a href="https://github.com/wuyouzhuguli/Spring-Boot-Demos/tree/master/22.Spring-Boot-Email" target="_blank" rel="external">https://github.com/wuyouzhuguli/Spring-Boot-Demos/tree/master/22.Spring-Boot-Email</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Jun 06 2018 16:37:32 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;在项目的维护过程中，我们通常会在应用中加入短信或者邮件预警功能，比如当应用出现异常宕机时应该及时地将预警信息发送给运维或者开发人员，本文将介绍如何在Spring Boot中发送邮件。在Spring Boot中发送邮件使用的是Spring提供的&lt;code&gt;org.springframework.mail.javamail.JavaMailSender&lt;/code&gt;，其提供了许多简单易用的方法，可发送简单的邮件、HTML格式的邮件、带附件的邮件，并且可以创建邮件模板。
    
    </summary>
    
    
      <category term="Spring Boot" scheme="http://mrbird.cc/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>使用Actuator监控Spring Boot应用</title>
    <link href="http://mrbird.cc/Acutator-Spring-Boot.html"/>
    <id>http://mrbird.cc/Acutator-Spring-Boot.html</id>
    <published>2018-03-18T02:04:08.000Z</published>
    <updated>2018-05-07T06:35:14.425Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Jun 06 2018 16:37:34 GMT+0800 (中国标准时间) --><p>我们都知道Spring Boot是一个用于快速开发Java Web的框架，不需要太多的配置即可使用Spring的大量功能。Spring Boot遵循着“约定大于配置”的原则，许多功能使用默认的配置即可。这样的做法好处在于我们不需要像使用Spring那样编写一大堆的XML配置代码，但过于简单的配置过程会让我们在了解各种依赖，配置之间的关系过程上带来一些困难。不过没关系，在Spring Boot中，我们可以使用Actuator来监控应用，Actuator提供了一系列的RESTful API让我们可以更为细致的了解各种信息。<a id="more"></a></p><h2 id="引入Actuator"><a href="#引入Actuator" class="headerlink" title="引入Actuator"></a>引入Actuator</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure><h2 id="配置Actuator"><a href="#配置Actuator" class="headerlink" title="配置Actuator"></a>配置Actuator</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="attr">server:</span></div><div class="line"><span class="attr">  port:</span> <span class="number">80</span></div><div class="line"></div><div class="line"><span class="attr">management:</span></div><div class="line"><span class="attr">  security:</span></div><div class="line"><span class="attr">    enabled:</span> <span class="literal">false</span> <span class="comment">#关掉安全认证</span></div><div class="line"><span class="attr">  port:</span> <span class="number">80</span></div><div class="line"><span class="attr">  context-path:</span> <span class="string">/monitor</span> <span class="comment">#actuator的访问路径</span></div><div class="line"><span class="attr">endpoints:</span></div><div class="line"><span class="attr">  shutdown:</span></div><div class="line"><span class="attr">    enabled:</span> <span class="literal">true</span></div></pre></td></tr></table></figure><p>配置中关闭了安全认证的功能，如果需要开启这个功能的话还需引入<code>spring-boot-starter-security</code>依赖。除了使用Spring Security来开启监控路径安全认证外，还可以使用Shiro对监控路径进行权限控制。</p><p>监控的端口和应用一致，配置<code>context-path</code>为<code>/monitor</code>，这样可以避免和自己应用的路径映射地址重复。</p><p><code>endpoints.shutdown.enabled: true</code>提供了使用post请求来关闭Spring Boot应用的功能。</p><h2 id="Actuator接口列表"><a href="#Actuator接口列表" class="headerlink" title="Actuator接口列表"></a>Actuator接口列表</h2><p>Actuator提供了13个接口，可以分为三大类：配置接口、度量接口和其它接口，具体如下表所示：</p><table><thead><tr><th>HTTP 方法</th><th>路径</th><th>描述</th></tr></thead><tbody><tr><td>GET</td><td>/autoconfig</td><td>提供了一份自动配置报告，记录哪些自动配置条件通过了，哪些没通过</td></tr><tr><td>GET</td><td>/configprops</td><td>描述配置属性(包含默认值)如何注入Bean</td></tr><tr><td>GET</td><td>/beans</td><td>描述应用程序上下文里全部的Bean，以及它们的关系</td></tr><tr><td>GET</td><td>/dump</td><td>获取线程活动的快照</td></tr><tr><td>GET</td><td>/env</td><td>获取全部环境属性</td></tr><tr><td>GET</td><td>/env/{name}</td><td>根据名称获取特定的环境属性值</td></tr><tr><td>GET</td><td>/health</td><td>报告应用程序的健康指标，这些值由HealthIndicator的实现类提供</td></tr><tr><td>GET</td><td>/info</td><td>获取应用程序的定制信息，这些信息由info打头的属性提供</td></tr><tr><td>GET</td><td>/mappings</td><td>描述全部的URI路径，以及它们和控制器(包含Actuator端点)的映射关系</td></tr><tr><td>GET</td><td>/metrics</td><td>报告各种应用程序度量信息，比如内存用量和HTTP请求计数</td></tr><tr><td>GET</td><td>/metrics/{name}</td><td>报告指定名称的应用程序度量值</td></tr><tr><td>POST</td><td>/shutdown</td><td>关闭应用程序，要求endpoints.shutdown.enabled设置为true</td></tr><tr><td>GET</td><td>/trace</td><td>提供基本的HTTP请求跟踪信息(时间戳、HTTP头等)</td></tr></tbody></table><h2 id="接口使用示例"><a href="#接口使用示例" class="headerlink" title="接口使用示例"></a>接口使用示例</h2><h3 id="autoconfig"><a href="#autoconfig" class="headerlink" title="autoconfig"></a>autoconfig</h3><p>显示所有自动装配类的报告，以及是什么原因导致自动装配成功或者不成功。在浏览器输入：<a href="http://localhost/monitor/autoconfig" target="_blank" rel="external">http://localhost/monitor/autoconfig</a>，输出如下（截取部分）：</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    "positiveMatches": &#123;</div><div class="line">        "AuditAutoConfiguration#auditListener": [&#123;</div><div class="line">            "condition": "OnBeanCondition",</div><div class="line">            "message": "@ConditionalOnMissingBean (types: org.springframework.boot.actuate.audit.listener.AbstractAuditListener; SearchStrategy: all) did not find any beans"</div><div class="line">        &#125;],</div><div class="line">        "AuditAutoConfiguration.AuditEventRepositoryConfiguration": [&#123;</div><div class="line">            "condition": "OnBeanCondition",</div><div class="line">            "message": "@ConditionalOnMissingBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans"</div><div class="line">        &#125;],</div><div class="line">        "EndpointAutoConfiguration#autoConfigurationReportEndpoint": [&#123;</div><div class="line">            "condition": "OnBeanCondition",</div><div class="line">            "message": "@ConditionalOnBean (types: org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport; SearchStrategy: all) found bean 'autoConfigurationReport'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.AutoConfigurationReportEndpoint; SearchStrategy: current) did not find any beans"</div><div class="line">        &#125;],</div><div class="line">        "EndpointAutoConfiguration#beansEndpoint": [&#123;</div><div class="line">            "condition": "OnBeanCondition",</div><div class="line">            "message": "@ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.BeansEndpoint; SearchStrategy: all) did not find any beans"</div><div class="line">        &#125;],</div><div class="line">        "EndpointAutoConfiguration#configurationPropertiesReportEndpoint": [&#123;</div><div class="line">            "condition": "OnBeanCondition",</div><div class="line">            "message": "@ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) did not find any beans"</div><div class="line">        &#125;],</div><div class="line">        "EndpointAutoConfiguration#dumpEndpoint": [&#123;</div><div class="line">            "condition": "OnBeanCondition",</div><div class="line">            "message": "@ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.DumpEndpoint; SearchStrategy: all) did not find any beans"</div><div class="line">        &#125;],</div><div class="line">        "EndpointAutoConfiguration#environmentEndpoint": [&#123;</div><div class="line">            "condition": "OnBeanCondition",</div><div class="line">            "message": "@ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.EnvironmentEndpoint; SearchStrategy: all) did not find any beans"</div><div class="line">        &#125;],</div><div class="line">        "EndpointAutoConfiguration#healthEndpoint": [&#123;</div><div class="line">            "condition": "OnBeanCondition",</div><div class="line">            "message": "@ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.HealthEndpoint; SearchStrategy: all) did not find any beans"</div><div class="line">        &#125;],</div><div class="line">        "EndpointAutoConfiguration#infoEndpoint": [&#123;</div><div class="line">            "condition": "OnBeanCondition",</div><div class="line">            "message": "@ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.InfoEndpoint; SearchStrategy: all) did not find any beans"</div><div class="line">        &#125;],</div><div class="line">        "EndpointAutoConfiguration#loggersEndpoint": [&#123;</div><div class="line">            "condition": "OnBeanCondition",</div><div class="line">            "message": "@ConditionalOnBean (types: org.springframework.boot.logging.LoggingSystem; SearchStrategy: all) found bean 'springBootLoggingSystem'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.LoggersEndpoint; SearchStrategy: all) did not find any beans"</div><div class="line">        &#125;],</div><div class="line">        "EndpointAutoConfiguration#metricsEndpoint": [&#123;</div><div class="line">            "condition": "OnBeanCondition",</div><div class="line">            "message": "@ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.MetricsEndpoint; SearchStrategy: all) did not find any beans"</div><div class="line">        &#125;],</div><div class="line">        "EndpointAutoConfiguration#shutdownEndpoint": [&#123;</div><div class="line">            "condition": "OnBeanCondition",</div><div class="line">            "message": "@ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.ShutdownEndpoint; SearchStrategy: all) did not find any beans"</div><div class="line">        &#125;],</div><div class="line">        "EndpointAutoConfiguration#traceEndpoint": [&#123;</div><div class="line">            "condition": "OnBeanCondition",</div><div class="line">            "message": "@ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.TraceEndpoint; SearchStrategy: all) did not find any beans"</div><div class="line">        &#125;],</div><div class="line">        "EndpointAutoConfiguration.RequestMappingEndpointConfiguration": [&#123;</div><div class="line">            "condition": "OnClassCondition",</div><div class="line">            "message": "@ConditionalOnClass found required class 'org.springframework.web.servlet.handler.AbstractHandlerMethodMapping'; @ConditionalOnMissingClass did not find unwanted class"</div><div class="line">        &#125;],</div><div class="line">        "EndpointAutoConfiguration.RequestMappingEndpointConfiguration#requestMappingEndpoint": [&#123;</div><div class="line">            "condition": "OnBeanCondition",</div><div class="line">            "message": "@ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.RequestMappingEndpoint; SearchStrategy: all) did not find any beans"</div><div class="line">        &#125;],</div><div class="line">...</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><h3 id="beans"><a href="#beans" class="headerlink" title="beans"></a>beans</h3><p>查看Spring 容器管理的Bean,访问<a href="http://localhost/monitor/beans" target="_blank" rel="external">http://localhost/monitor/beans</a>，输出如下（截取部分）：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div></pre></td><td class="code"><pre><div class="line">[&#123;</div><div class="line">    <span class="attr">"context"</span>: <span class="string">"application:80"</span>,</div><div class="line">    <span class="attr">"parent"</span>: <span class="literal">null</span>,</div><div class="line">    <span class="attr">"beans"</span>: [&#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"demoApplication"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"com.springboot.demo.DemoApplication$$EnhancerBySpringCGLIB$$77e6b2b4"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"null"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: []</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"org.springframework.core.type.classreading.CachingMetadataReaderFactory"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"null"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: []</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration$$EnhancerBySpringCGLIB$$dc9af024"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"null"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: []</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"org.springframework.boot.autoconfigure.condition.BeanTypeRegistry"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"org.springframework.boot.autoconfigure.condition.BeanTypeRegistry"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"null"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: []</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"propertySourcesPlaceholderConfigurer"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"org.springframework.context.support.PropertySourcesPlaceholderConfigurer"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"class path resource [org/springframework/boot/autoconfigure/context/PropertyPlaceholderAutoConfiguration.class]"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: []</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$a4dba584"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"null"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: []</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"standardJacksonObjectMapperBuilderCustomizer"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration.class]"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: [<span class="string">"org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78f30883"</span>, <span class="string">"spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties"</span>]</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"org.springframework.boot.autoconfigure.jackson.JacksonProperties"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"null"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: []</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"null"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: [<span class="string">"org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.store"</span>]</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.store"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"org.springframework.boot.context.properties.ConfigurationBeanFactoryMetaData"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"null"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: []</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$e9c4bf95"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"null"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: [<span class="string">"org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78f30883"</span>]</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"jacksonObjectMapperBuilder"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration.class]"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: [<span class="string">"standardJacksonObjectMapperBuilderCustomizer"</span>]</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$3777fd7c"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"null"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: []</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"jacksonObjectMapper"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"com.fasterxml.jackson.databind.ObjectMapper"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperConfiguration.class]"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: [<span class="string">"jacksonObjectMapperBuilder"</span>]</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$19839b0b"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"null"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: []</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"jsonComponentModule"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"org.springframework.boot.jackson.JsonComponentModule"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.class]"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: []</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"org.springframework.boot.autoconfigure.websocket.WebSocketAutoConfiguration$TomcatWebSocketConfiguration"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"org.springframework.boot.autoconfigure.websocket.WebSocketAutoConfiguration$TomcatWebSocketConfiguration$$EnhancerBySpringCGLIB$$ab6fe14"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"null"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: []</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"websocketContainerCustomizer"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"org.springframework.boot.autoconfigure.websocket.TomcatWebSocketContainerCustomizer"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"class path resource [org/springframework/boot/autoconfigure/websocket/WebSocketAutoConfiguration$TomcatWebSocketConfiguration.class]"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: []</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"org.springframework.boot.autoconfigure.websocket.WebSocketAutoConfiguration"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"org.springframework.boot.autoconfigure.websocket.WebSocketAutoConfiguration$$EnhancerBySpringCGLIB$$ee951243"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"null"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: []</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"org.springframework.boot.autoconfigure.web.EmbeddedServletContainerAutoConfiguration$EmbeddedTomcat"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"org.springframework.boot.autoconfigure.web.EmbeddedServletContainerAutoConfiguration$EmbeddedTomcat$$EnhancerBySpringCGLIB$$8f67c107"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"null"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: []</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"tomcatEmbeddedServletContainerFactory"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"class path resource [org/springframework/boot/autoconfigure/web/EmbeddedServletContainerAutoConfiguration$EmbeddedTomcat.class]"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: []</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"org.springframework.boot.autoconfigure.web.EmbeddedServletContainerAutoConfiguration"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"org.springframework.boot.autoconfigure.web.EmbeddedServletContainerAutoConfiguration$$EnhancerBySpringCGLIB$$48514e2b"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"null"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: []</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"embeddedServletContainerCustomizerBeanPostProcessor"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"org.springframework.boot.context.embedded.EmbeddedServletContainerCustomizerBeanPostProcessor"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"null"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: []</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"errorPageRegistrarBeanPostProcessor"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"org.springframework.boot.web.servlet.ErrorPageRegistrarBeanPostProcessor"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"null"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: []</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"org.springframework.boot.autoconfigure.web.DispatcherServletAutoConfiguration$DispatcherServletConfiguration"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"org.springframework.boot.autoconfigure.web.DispatcherServletAutoConfiguration$DispatcherServletConfiguration$$EnhancerBySpringCGLIB$$824a2d3d"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"null"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: [<span class="string">"spring.mvc-org.springframework.boot.autoconfigure.web.WebMvcProperties"</span>]</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"dispatcherServlet"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"org.springframework.web.servlet.DispatcherServlet"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"class path resource [org/springframework/boot/autoconfigure/web/DispatcherServletAutoConfiguration$DispatcherServletConfiguration.class]"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: []</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"spring.mvc-org.springframework.boot.autoconfigure.web.WebMvcProperties"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"org.springframework.boot.autoconfigure.web.WebMvcProperties"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"null"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: []</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"org.springframework.boot.autoconfigure.web.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"org.springframework.boot.autoconfigure.web.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration$$EnhancerBySpringCGLIB$$fd39bc64"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"null"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: [<span class="string">"serverProperties"</span>, <span class="string">"spring.mvc-org.springframework.boot.autoconfigure.web.WebMvcProperties"</span>]</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"dispatcherServletRegistration"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"org.springframework.boot.web.servlet.ServletRegistrationBean"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"class path resource [org/springframework/boot/autoconfigure/web/DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration.class]"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: [<span class="string">"dispatcherServlet"</span>]</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"org.springframework.boot.autoconfigure.web.DispatcherServletAutoConfiguration"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"org.springframework.boot.autoconfigure.web.DispatcherServletAutoConfiguration$$EnhancerBySpringCGLIB$$d158c03f"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"null"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: []</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration$$EnhancerBySpringCGLIB$$4ce40e75"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"null"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: []</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"methodValidationPostProcessor"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"org.springframework.validation.beanvalidation.MethodValidationPostProcessor"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"class path resource [org/springframework/boot/autoconfigure/validation/ValidationAutoConfiguration.class]"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: [<span class="string">"environment"</span>]</div><div class="line">    &#125;,</div><div class="line">    ......</div><div class="line">     &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"org.springframework.boot.autoconfigure.web.WebClientAutoConfiguration"</span>,</div><div class="line">        <span class="attr">"aliases"</span>: [],</div><div class="line">        <span class="attr">"scope"</span>: <span class="string">"singleton"</span>,</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"org.springframework.boot.autoconfigure.web.WebClientAutoConfiguration$$EnhancerBySpringCGLIB$$ec83a29e"</span>,</div><div class="line">        <span class="attr">"resource"</span>: <span class="string">"null"</span>,</div><div class="line">        <span class="attr">"dependencies"</span>: []</div><div class="line">    &#125;]</div><div class="line">&#125;]</div></pre></td></tr></table></figure><p></p><h3 id="configprops"><a href="#configprops" class="headerlink" title="configprops"></a>configprops</h3><p>所有<code>＠ConfigurationProperties</code>注解的配置信息，如文件上传的最大允许配置等。访问<a href="http://localhost/monitor/configprops" target="_blank" rel="external">http://localhost/monitor/configprops</a>，输出如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div><div class="line">413</div><div class="line">414</div><div class="line">415</div><div class="line">416</div><div class="line">417</div><div class="line">418</div><div class="line">419</div><div class="line">420</div><div class="line">421</div><div class="line">422</div><div class="line">423</div><div class="line">424</div><div class="line">425</div><div class="line">426</div><div class="line">427</div><div class="line">428</div><div class="line">429</div><div class="line">430</div><div class="line">431</div><div class="line">432</div><div class="line">433</div><div class="line">434</div><div class="line">435</div><div class="line">436</div><div class="line">437</div><div class="line">438</div><div class="line">439</div><div class="line">440</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"environmentMvcEndpoint"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"endpoints.env"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"path"</span>: <span class="string">"/env"</span></div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"heapdumpMvcEndpoint"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"endpoints.heapdump"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"enabled"</span>: <span class="literal">true</span>,</div><div class="line">            <span class="attr">"path"</span>: <span class="string">"/heapdump"</span>,</div><div class="line">            <span class="attr">"sensitive"</span>: <span class="literal">true</span></div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"managementServerProperties"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"management"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"port"</span>: <span class="number">80</span>,</div><div class="line">            <span class="attr">"addApplicationContextHeader"</span>: <span class="literal">true</span>,</div><div class="line">            <span class="attr">"address"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"contextPath"</span>: <span class="string">"/monitor"</span>,</div><div class="line">            <span class="attr">"ssl"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"security"</span>: &#123;</div><div class="line">                <span class="attr">"enabled"</span>: <span class="literal">false</span>,</div><div class="line">                <span class="attr">"roles"</span>: [<span class="string">"ACTUATOR"</span>],</div><div class="line">                <span class="attr">"sessions"</span>: <span class="string">"STATELESS"</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"spring.mvc-org.springframework.boot.autoconfigure.web.WebMvcProperties"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"spring.mvc"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"locale"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"mediaTypes"</span>: &#123;&#125;,</div><div class="line">            <span class="attr">"localeResolver"</span>: <span class="string">"ACCEPT_HEADER"</span>,</div><div class="line">            <span class="attr">"messageCodesResolverFormat"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"async"</span>: &#123;</div><div class="line">                <span class="attr">"requestTimeout"</span>: <span class="literal">null</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">"dispatchOptionsRequest"</span>: <span class="literal">true</span>,</div><div class="line">            <span class="attr">"servlet"</span>: &#123;</div><div class="line">                <span class="attr">"loadOnStartup"</span>: <span class="number">-1</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">"ignoreDefaultModelOnRedirect"</span>: <span class="literal">true</span>,</div><div class="line">            <span class="attr">"dispatchTraceRequest"</span>: <span class="literal">false</span>,</div><div class="line">            <span class="attr">"staticPathPattern"</span>: <span class="string">"/**"</span>,</div><div class="line">            <span class="attr">"dateFormat"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"view"</span>: &#123;</div><div class="line">                <span class="attr">"prefix"</span>: <span class="literal">null</span>,</div><div class="line">                <span class="attr">"suffix"</span>: <span class="literal">null</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">"logResolvedException"</span>: <span class="literal">false</span>,</div><div class="line">            <span class="attr">"throwExceptionIfNoHandlerFound"</span>: <span class="literal">false</span></div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"spring.http.multipart-org.springframework.boot.autoconfigure.web.MultipartProperties"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"spring.http.multipart"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"enabled"</span>: <span class="literal">true</span>,</div><div class="line">            <span class="attr">"maxRequestSize"</span>: <span class="string">"10MB"</span>,</div><div class="line">            <span class="attr">"location"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"resolveLazily"</span>: <span class="literal">false</span>,</div><div class="line">            <span class="attr">"fileSizeThreshold"</span>: <span class="string">"0"</span>,</div><div class="line">            <span class="attr">"maxFileSize"</span>: <span class="string">"1MB"</span></div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"spring.http.encoding-org.springframework.boot.autoconfigure.web.HttpEncodingProperties"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"spring.http.encoding"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"charset"</span>: <span class="string">"UTF-8"</span>,</div><div class="line">            <span class="attr">"mapping"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"force"</span>: <span class="literal">false</span>,</div><div class="line">            <span class="attr">"forceResponse"</span>: <span class="literal">false</span>,</div><div class="line">            <span class="attr">"forceRequest"</span>: <span class="literal">false</span></div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"endpoints.health-org.springframework.boot.actuate.autoconfigure.HealthMvcEndpointProperties"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"endpoints.health"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"mapping"</span>: &#123;&#125;</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"spring.resources"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"staticLocations"</span>: [<span class="string">"/"</span>, <span class="string">"classpath:/META-INF/resources/"</span>, <span class="string">"classpath:/resources/"</span>, <span class="string">"classpath:/static/"</span>, <span class="string">"classpath:/public/"</span>],</div><div class="line">            <span class="attr">"addMappings"</span>: <span class="literal">true</span>,</div><div class="line">            <span class="attr">"chain"</span>: &#123;</div><div class="line">                <span class="attr">"cache"</span>: <span class="literal">true</span>,</div><div class="line">                <span class="attr">"htmlApplicationCache"</span>: <span class="literal">false</span>,</div><div class="line">                <span class="attr">"gzipped"</span>: <span class="literal">false</span>,</div><div class="line">                <span class="attr">"strategy"</span>: &#123;</div><div class="line">                    <span class="attr">"fixed"</span>: &#123;</div><div class="line">                        <span class="attr">"enabled"</span>: <span class="literal">false</span>,</div><div class="line">                        <span class="attr">"paths"</span>: [<span class="string">"/**"</span>],</div><div class="line">                        <span class="attr">"version"</span>: <span class="literal">null</span></div><div class="line">                    &#125;,</div><div class="line">                    <span class="attr">"content"</span>: &#123;</div><div class="line">                        <span class="attr">"enabled"</span>: <span class="literal">false</span>,</div><div class="line">                        <span class="attr">"paths"</span>: [<span class="string">"/**"</span>]</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;,</div><div class="line">            <span class="attr">"cachePeriod"</span>: <span class="literal">null</span></div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"shutdownMvcEndpoint"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"endpoints.shutdown"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"path"</span>: <span class="string">"/shutdown"</span></div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"requestMappingEndpoint"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"endpoints.mappings"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"id"</span>: <span class="string">"mappings"</span>,</div><div class="line">            <span class="attr">"enabled"</span>: <span class="literal">true</span>,</div><div class="line">            <span class="attr">"sensitive"</span>: <span class="literal">true</span></div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"autoConfigurationReportEndpoint"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"endpoints.autoconfig"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"id"</span>: <span class="string">"autoconfig"</span>,</div><div class="line">            <span class="attr">"enabled"</span>: <span class="literal">true</span>,</div><div class="line">            <span class="attr">"sensitive"</span>: <span class="literal">true</span></div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"management.trace-org.springframework.boot.actuate.trace.TraceProperties"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"management.trace"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"include"</span>: [<span class="string">"TIME_TAKEN"</span>, <span class="string">"ERRORS"</span>, <span class="string">"REQUEST_HEADERS"</span>, <span class="string">"COOKIES"</span>, <span class="string">"RESPONSE_HEADERS"</span>]</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"management.info-org.springframework.boot.actuate.autoconfigure.InfoContributorProperties"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"management.info"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"git"</span>: &#123;</div><div class="line">                <span class="attr">"mode"</span>: <span class="string">"SIMPLE"</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"loggersEndpoint"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"endpoints.loggers"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"id"</span>: <span class="string">"loggers"</span>,</div><div class="line">            <span class="attr">"enabled"</span>: <span class="literal">true</span>,</div><div class="line">            <span class="attr">"sensitive"</span>: <span class="literal">true</span></div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"spring.jackson"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"deserialization"</span>: &#123;&#125;,</div><div class="line">            <span class="attr">"defaultPropertyInclusion"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"propertyNamingStrategy"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"locale"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"serialization"</span>: &#123;&#125;,</div><div class="line">            <span class="attr">"jodaDateTimeFormat"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"mapper"</span>: &#123;&#125;,</div><div class="line">            <span class="attr">"generator"</span>: &#123;&#125;,</div><div class="line">            <span class="attr">"timeZone"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"dateFormat"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"parser"</span>: &#123;&#125;</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"shutdownEndpoint"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"endpoints.shutdown"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"id"</span>: <span class="string">"shutdown"</span>,</div><div class="line">            <span class="attr">"enabled"</span>: <span class="literal">true</span>,</div><div class="line">            <span class="attr">"sensitive"</span>: <span class="literal">true</span></div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"endpoints.metrics.filter-org.springframework.boot.actuate.autoconfigure.MetricFilterProperties"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"endpoints.metrics.filter"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"counterSubmissions"</span>: [<span class="string">"MERGED"</span>],</div><div class="line">            <span class="attr">"gaugeSubmissions"</span>: [<span class="string">"MERGED"</span>]</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"loggersMvcEndpoint"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"endpoints.loggers"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"path"</span>: <span class="string">"/loggers"</span></div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"dumpEndpoint"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"endpoints.dump"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"id"</span>: <span class="string">"dump"</span>,</div><div class="line">            <span class="attr">"enabled"</span>: <span class="literal">true</span>,</div><div class="line">            <span class="attr">"sensitive"</span>: <span class="literal">true</span></div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"endpoints-org.springframework.boot.actuate.endpoint.EndpointProperties"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"endpoints"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"enabled"</span>: <span class="literal">true</span>,</div><div class="line">            <span class="attr">"sensitive"</span>: <span class="literal">null</span></div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"metricsMvcEndpoint"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"endpoints.metrics"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"path"</span>: <span class="string">"/metrics"</span></div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"metricsEndpoint"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"endpoints.metrics"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"id"</span>: <span class="string">"metrics"</span>,</div><div class="line">            <span class="attr">"enabled"</span>: <span class="literal">true</span>,</div><div class="line">            <span class="attr">"sensitive"</span>: <span class="literal">true</span></div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"healthEndpoint"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"endpoints.health"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"id"</span>: <span class="string">"health"</span>,</div><div class="line">            <span class="attr">"enabled"</span>: <span class="literal">true</span>,</div><div class="line">            <span class="attr">"timeToLive"</span>: <span class="number">1000</span>,</div><div class="line">            <span class="attr">"sensitive"</span>: <span class="literal">false</span></div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"auditEventMvcEndpoint"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"endpoints.auditevents"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"enabled"</span>: <span class="literal">true</span>,</div><div class="line">            <span class="attr">"path"</span>: <span class="string">"/auditevents"</span>,</div><div class="line">            <span class="attr">"sensitive"</span>: <span class="literal">true</span></div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"healthMvcEndpoint"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"endpoints.health"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"path"</span>: <span class="string">"/health"</span></div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"endpoints.cors-org.springframework.boot.actuate.autoconfigure.EndpointCorsProperties"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"endpoints.cors"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"maxAge"</span>: <span class="number">1800</span>,</div><div class="line">            <span class="attr">"exposedHeaders"</span>: [],</div><div class="line">            <span class="attr">"allowedHeaders"</span>: [],</div><div class="line">            <span class="attr">"allowedOrigins"</span>: [],</div><div class="line">            <span class="attr">"allowedMethods"</span>: [],</div><div class="line">            <span class="attr">"allowCredentials"</span>: <span class="literal">null</span></div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"diskSpaceHealthIndicatorProperties"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"management.health.diskspace"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"path"</span>: <span class="string">"C:\\Users\\Administrator\\Desktop\\01.Start-Spring-Boot\\."</span>,</div><div class="line">            <span class="attr">"threshold"</span>: <span class="number">10485760</span></div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"beansEndpoint"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"endpoints.beans"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"id"</span>: <span class="string">"beans"</span>,</div><div class="line">            <span class="attr">"enabled"</span>: <span class="literal">true</span>,</div><div class="line">            <span class="attr">"sensitive"</span>: <span class="literal">true</span></div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"traceEndpoint"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"endpoints.trace"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"id"</span>: <span class="string">"trace"</span>,</div><div class="line">            <span class="attr">"enabled"</span>: <span class="literal">true</span>,</div><div class="line">            <span class="attr">"sensitive"</span>: <span class="literal">true</span></div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"auditEventsEndpoint"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"endpoints.auditevents"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"enabled"</span>: <span class="literal">true</span></div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"endpoints.jmx-org.springframework.boot.actuate.autoconfigure.EndpointMBeanExportProperties"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"endpoints.jmx"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"enabled"</span>: <span class="literal">true</span>,</div><div class="line">            <span class="attr">"uniqueNames"</span>: <span class="literal">false</span>,</div><div class="line">            <span class="attr">"domain"</span>: <span class="string">""</span>,</div><div class="line">            <span class="attr">"staticNames"</span>: &#123;&#125;</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"spring.metrics.export-org.springframework.boot.actuate.metrics.export.MetricExportProperties"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"spring.metrics.export"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"enabled"</span>: <span class="literal">true</span>,</div><div class="line">            <span class="attr">"redis"</span>: &#123;</div><div class="line">                <span class="attr">"prefix"</span>: <span class="string">"spring.metrics.application.7f8f2ef33a0f173c075f96c8f5c5b4fd"</span>,</div><div class="line">                <span class="attr">"key"</span>: <span class="string">"******"</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">"aggregate"</span>: &#123;</div><div class="line">                <span class="attr">"prefix"</span>: <span class="string">"application.7f8f2ef33a0f173c075f96c8f5c5b4fd"</span>,</div><div class="line">                <span class="attr">"keyPattern"</span>: <span class="string">"k.d"</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">"excludes"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"statsd"</span>: &#123;</div><div class="line">                <span class="attr">"host"</span>: <span class="literal">null</span>,</div><div class="line">                <span class="attr">"port"</span>: <span class="number">8125</span>,</div><div class="line">                <span class="attr">"prefix"</span>: <span class="literal">null</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">"triggers"</span>: &#123;&#125;,</div><div class="line">            <span class="attr">"includes"</span>: <span class="literal">null</span></div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"configurationPropertiesReportEndpoint"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"endpoints.configprops"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"id"</span>: <span class="string">"configprops"</span>,</div><div class="line">            <span class="attr">"enabled"</span>: <span class="literal">true</span>,</div><div class="line">            <span class="attr">"sensitive"</span>: <span class="literal">true</span></div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"spring.info"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"git"</span>: &#123;</div><div class="line">                <span class="attr">"location"</span>: &#123;&#125;</div><div class="line">            &#125;,</div><div class="line">            <span class="attr">"build"</span>: &#123;</div><div class="line">                <span class="attr">"location"</span>: &#123;&#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"infoEndpoint"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"endpoints.info"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"id"</span>: <span class="string">"info"</span>,</div><div class="line">            <span class="attr">"enabled"</span>: <span class="literal">true</span>,</div><div class="line">            <span class="attr">"sensitive"</span>: <span class="literal">false</span></div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"serverProperties"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"server"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"undertow"</span>: &#123;</div><div class="line">                <span class="attr">"maxHttpPostSize"</span>: <span class="number">0</span>,</div><div class="line">                <span class="attr">"bufferSize"</span>: <span class="literal">null</span>,</div><div class="line">                <span class="attr">"buffersPerRegion"</span>: <span class="literal">null</span>,</div><div class="line">                <span class="attr">"ioThreads"</span>: <span class="literal">null</span>,</div><div class="line">                <span class="attr">"workerThreads"</span>: <span class="literal">null</span>,</div><div class="line">                <span class="attr">"directBuffers"</span>: <span class="literal">null</span>,</div><div class="line">                <span class="attr">"accesslog"</span>: &#123;</div><div class="line">                    <span class="attr">"enabled"</span>: <span class="literal">null</span>,</div><div class="line">                    <span class="attr">"pattern"</span>: <span class="string">"common"</span>,</div><div class="line">                    <span class="attr">"prefix"</span>: <span class="string">"access_log."</span>,</div><div class="line">                    <span class="attr">"suffix"</span>: <span class="string">"log"</span>,</div><div class="line">                    <span class="attr">"dir"</span>: <span class="string">"C:\\Users\\Administrator\\Desktop\\01.Start-Spring-Boot\\logs"</span>,</div><div class="line">                    <span class="attr">"rotate"</span>: <span class="literal">true</span></div><div class="line">                &#125;</div><div class="line">            &#125;,</div><div class="line">            <span class="attr">"port"</span>: <span class="number">80</span>,</div><div class="line">            <span class="attr">"error"</span>: &#123;</div><div class="line">                <span class="attr">"path"</span>: <span class="string">"/error"</span>,</div><div class="line">                <span class="attr">"includeStacktrace"</span>: <span class="string">"NEVER"</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">"maxHttpHeaderSize"</span>: <span class="number">0</span>,</div><div class="line">            <span class="attr">"jspServlet"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"ssl"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"maxHttpPostSize"</span>: <span class="number">0</span>,</div><div class="line">            <span class="attr">"jetty"</span>: &#123;</div><div class="line">                <span class="attr">"maxHttpPostSize"</span>: <span class="number">0</span>,</div><div class="line">                <span class="attr">"acceptors"</span>: <span class="literal">null</span>,</div><div class="line">                <span class="attr">"selectors"</span>: <span class="literal">null</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">"servletPath"</span>: <span class="string">"/"</span>,</div><div class="line">            <span class="attr">"tomcat"</span>: &#123;</div><div class="line">                <span class="attr">"accesslog"</span>: &#123;</div><div class="line">                    <span class="attr">"enabled"</span>: <span class="literal">false</span>,</div><div class="line">                    <span class="attr">"pattern"</span>: <span class="string">"common"</span>,</div><div class="line">                    <span class="attr">"directory"</span>: <span class="string">"logs"</span>,</div><div class="line">                    <span class="attr">"prefix"</span>: <span class="string">"access_log"</span>,</div><div class="line">                    <span class="attr">"suffix"</span>: <span class="string">".log"</span>,</div><div class="line">                    <span class="attr">"rotate"</span>: <span class="literal">true</span>,</div><div class="line">                    <span class="attr">"renameOnRotate"</span>: <span class="literal">false</span>,</div><div class="line">                    <span class="attr">"fileDateFormat"</span>: <span class="string">".yyyy-MM-dd"</span>,</div><div class="line">                    <span class="attr">"requestAttributesEnabled"</span>: <span class="literal">false</span>,</div><div class="line">                    <span class="attr">"buffered"</span>: <span class="literal">true</span></div><div class="line">                &#125;,</div><div class="line">                <span class="attr">"internalProxies"</span>: <span class="string">"10\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|192\\.168\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|169\\.254\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|127\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|172\\.1[6-9]&#123;1&#125;\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|172\\.2[0-9]&#123;1&#125;\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|172\\.3[0-1]&#123;1&#125;\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;"</span>,</div><div class="line">                <span class="attr">"protocolHeader"</span>: <span class="literal">null</span>,</div><div class="line">                <span class="attr">"protocolHeaderHttpsValue"</span>: <span class="string">"https"</span>,</div><div class="line">                <span class="attr">"portHeader"</span>: <span class="string">"X-Forwarded-Port"</span>,</div><div class="line">                <span class="attr">"remoteIpHeader"</span>: <span class="literal">null</span>,</div><div class="line">                <span class="attr">"basedir"</span>: <span class="literal">null</span>,</div><div class="line">                <span class="attr">"backgroundProcessorDelay"</span>: <span class="number">30</span>,</div><div class="line">                <span class="attr">"maxThreads"</span>: <span class="number">0</span>,</div><div class="line">                <span class="attr">"minSpareThreads"</span>: <span class="number">0</span>,</div><div class="line">                <span class="attr">"maxHttpPostSize"</span>: <span class="number">0</span>,</div><div class="line">                <span class="attr">"redirectContextRoot"</span>: <span class="literal">null</span>,</div><div class="line">                <span class="attr">"uriEncoding"</span>: <span class="literal">null</span>,</div><div class="line">                <span class="attr">"maxConnections"</span>: <span class="number">0</span>,</div><div class="line">                <span class="attr">"acceptCount"</span>: <span class="number">0</span>,</div><div class="line">                <span class="attr">"additionalTldSkipPatterns"</span>: []</div><div class="line">            &#125;,</div><div class="line">            <span class="attr">"connectionTimeout"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"session"</span>: &#123;</div><div class="line">                <span class="attr">"timeout"</span>: <span class="literal">null</span>,</div><div class="line">                <span class="attr">"trackingModes"</span>: <span class="literal">null</span>,</div><div class="line">                <span class="attr">"persistent"</span>: <span class="literal">false</span>,</div><div class="line">                <span class="attr">"storeDir"</span>: <span class="literal">null</span>,</div><div class="line">                <span class="attr">"cookie"</span>: &#123;</div><div class="line">                    <span class="attr">"name"</span>: <span class="literal">null</span>,</div><div class="line">                    <span class="attr">"domain"</span>: <span class="literal">null</span>,</div><div class="line">                    <span class="attr">"path"</span>: <span class="literal">null</span>,</div><div class="line">                    <span class="attr">"comment"</span>: <span class="literal">null</span>,</div><div class="line">                    <span class="attr">"httpOnly"</span>: <span class="literal">null</span>,</div><div class="line">                    <span class="attr">"secure"</span>: <span class="literal">null</span>,</div><div class="line">                    <span class="attr">"maxAge"</span>: <span class="literal">null</span></div><div class="line">                &#125;</div><div class="line">            &#125;,</div><div class="line">            <span class="attr">"address"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"contextParameters"</span>: &#123;&#125;,</div><div class="line">            <span class="attr">"serverHeader"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"useForwardHeaders"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"contextPath"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"displayName"</span>: <span class="string">"application"</span></div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"management.health.status-org.springframework.boot.actuate.autoconfigure.HealthIndicatorProperties"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"management.health.status"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"order"</span>: <span class="literal">null</span></div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"environmentEndpoint"</span>: &#123;</div><div class="line">        <span class="attr">"prefix"</span>: <span class="string">"endpoints.env"</span>,</div><div class="line">        <span class="attr">"properties"</span>: &#123;</div><div class="line">            <span class="attr">"id"</span>: <span class="string">"env"</span>,</div><div class="line">            <span class="attr">"enabled"</span>: <span class="literal">true</span>,</div><div class="line">            <span class="attr">"sensitive"</span>: <span class="literal">true</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><h3 id="trace"><a href="#trace" class="headerlink" title="trace"></a>trace</h3><p><code>/trace</code>接口能查看最近的HTTP 请求和响应，在浏览器输入：<a href="http://localhost/monitor/trace" target="_blank" rel="external">http://localhost/monitor/trace</a>，输出如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div></pre></td><td class="code"><pre><div class="line">[&#123;</div><div class="line">    <span class="attr">"timestamp"</span>: <span class="number">1525657638444</span>,</div><div class="line">    <span class="attr">"info"</span>: &#123;</div><div class="line">        <span class="attr">"method"</span>: <span class="string">"GET"</span>,</div><div class="line">        <span class="attr">"path"</span>: <span class="string">"/login;JSESSIONID=c1d0a83c-05fd-479c-ae6b-2ecc9b878a4a"</span>,</div><div class="line">        <span class="attr">"headers"</span>: &#123;</div><div class="line">            <span class="attr">"request"</span>: &#123;</div><div class="line">                <span class="attr">"host"</span>: <span class="string">"localhost"</span>,</div><div class="line">                <span class="attr">"user-agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0"</span>,</div><div class="line">                <span class="attr">"accept"</span>: <span class="string">"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"</span>,</div><div class="line">                <span class="attr">"accept-language"</span>: <span class="string">"zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2"</span>,</div><div class="line">                <span class="attr">"accept-encoding"</span>: <span class="string">"gzip, deflate"</span>,</div><div class="line">                <span class="attr">"connection"</span>: <span class="string">"keep-alive"</span>,</div><div class="line">                <span class="attr">"upgrade-insecure-requests"</span>: <span class="string">"1"</span>,</div><div class="line">                <span class="attr">"pragma"</span>: <span class="string">"no-cache"</span>,</div><div class="line">                <span class="attr">"cache-control"</span>: <span class="string">"no-cache"</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">"response"</span>: &#123;</div><div class="line">                <span class="attr">"X-Application-Context"</span>: <span class="string">"application:80"</span>,</div><div class="line">                <span class="attr">"status"</span>: <span class="string">"404"</span></div><div class="line">            &#125;</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">"timeTaken"</span>: <span class="string">"11"</span></div><div class="line">    &#125;</div><div class="line">&#125;, &#123;</div><div class="line">    <span class="attr">"timestamp"</span>: <span class="number">1525657495017</span>,</div><div class="line">    <span class="attr">"info"</span>: &#123;</div><div class="line">        <span class="attr">"method"</span>: <span class="string">"GET"</span>,</div><div class="line">        <span class="attr">"path"</span>: <span class="string">"/monitor/beans"</span>,</div><div class="line">        <span class="attr">"headers"</span>: &#123;</div><div class="line">            <span class="attr">"request"</span>: &#123;</div><div class="line">                <span class="attr">"host"</span>: <span class="string">"localhost"</span>,</div><div class="line">                <span class="attr">"connection"</span>: <span class="string">"keep-alive"</span>,</div><div class="line">                <span class="attr">"upgrade-insecure-requests"</span>: <span class="string">"1"</span>,</div><div class="line">                <span class="attr">"user-agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.10 Safari/537.36"</span>,</div><div class="line">                <span class="attr">"accept"</span>: <span class="string">"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8"</span>,</div><div class="line">                <span class="attr">"accept-encoding"</span>: <span class="string">"gzip, deflate, br"</span>,</div><div class="line">                <span class="attr">"accept-language"</span>: <span class="string">"zh-CN,zh;q=0.9,en;q=0.8"</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">"response"</span>: &#123;</div><div class="line">                <span class="attr">"X-Application-Context"</span>: <span class="string">"application:80"</span>,</div><div class="line">                <span class="attr">"Content-Type"</span>: <span class="string">"application/vnd.spring-boot.actuator.v1+json;charset=UTF-8"</span>,</div><div class="line">                <span class="attr">"Transfer-Encoding"</span>: <span class="string">"chunked"</span>,</div><div class="line">                <span class="attr">"Date"</span>: <span class="string">"Mon, 07 May 2018 01:44:55 GMT"</span>,</div><div class="line">                <span class="attr">"status"</span>: <span class="string">"200"</span></div><div class="line">            &#125;</div><div class="line">		&#125;,</div><div class="line">        <span class="attr">"timeTaken"</span>: <span class="string">"609"</span></div><div class="line">    &#125;</div><div class="line">&#125;, &#123;</div><div class="line">    <span class="attr">"timestamp"</span>: <span class="number">1525657402454</span>,</div><div class="line">    <span class="attr">"info"</span>: &#123;</div><div class="line">        <span class="attr">"method"</span>: <span class="string">"GET"</span>,</div><div class="line">        <span class="attr">"path"</span>: <span class="string">"/favicon.ico"</span>,</div><div class="line">        <span class="attr">"headers"</span>: &#123;</div><div class="line">            <span class="attr">"request"</span>: &#123;</div><div class="line">                <span class="attr">"host"</span>: <span class="string">"localhost"</span>,</div><div class="line">                <span class="attr">"connection"</span>: <span class="string">"keep-alive"</span>,</div><div class="line">                <span class="attr">"pragma"</span>: <span class="string">"no-cache"</span>,</div><div class="line">                <span class="attr">"cache-control"</span>: <span class="string">"no-cache"</span>,</div><div class="line">                <span class="attr">"user-agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.10 Safari/537.36"</span>,</div><div class="line">                <span class="attr">"accept"</span>: <span class="string">"image/webp,image/apng,image/*,*/*;q=0.8"</span>,</div><div class="line">                <span class="attr">"referer"</span>: <span class="string">"http://localhost/monitor/autoconfig"</span>,</div><div class="line">                <span class="attr">"accept-encoding"</span>: <span class="string">"gzip, deflate, br"</span>,</div><div class="line">                <span class="attr">"accept-language"</span>: <span class="string">"zh-CN,zh;q=0.9,en;q=0.8"</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">"response"</span>: &#123;</div><div class="line">                <span class="attr">"X-Application-Context"</span>: <span class="string">"application:80"</span>,</div><div class="line">                <span class="attr">"Last-Modified"</span>: <span class="string">"Wed, 29 Nov 2017 01:54:48 GMT"</span>,</div><div class="line">                <span class="attr">"Accept-Ranges"</span>: <span class="string">"bytes"</span>,</div><div class="line">                <span class="attr">"Content-Type"</span>: <span class="string">"application/octet-stream"</span>,</div><div class="line">                <span class="attr">"Content-Length"</span>: <span class="string">"946"</span>,</div><div class="line">                <span class="attr">"Date"</span>: <span class="string">"Mon, 07 May 2018 01:43:22 GMT"</span>,</div><div class="line">                <span class="attr">"status"</span>: <span class="string">"200"</span></div><div class="line">            &#125;</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">"timeTaken"</span>: <span class="string">"21"</span></div><div class="line">    &#125;</div><div class="line">&#125;, &#123;</div><div class="line">    <span class="attr">"timestamp"</span>: <span class="number">1525657402076</span>,</div><div class="line">    <span class="attr">"info"</span>: &#123;</div><div class="line">        <span class="attr">"method"</span>: <span class="string">"GET"</span>,</div><div class="line">        <span class="attr">"path"</span>: <span class="string">"/monitor/autoconfig"</span>,</div><div class="line">        <span class="attr">"headers"</span>: &#123;</div><div class="line">            <span class="attr">"request"</span>: &#123;</div><div class="line">                <span class="attr">"host"</span>: <span class="string">"localhost"</span>,</div><div class="line">                <span class="attr">"connection"</span>: <span class="string">"keep-alive"</span>,</div><div class="line">                <span class="attr">"cache-control"</span>: <span class="string">"max-age=0"</span>,</div><div class="line">                <span class="attr">"upgrade-insecure-requests"</span>: <span class="string">"1"</span>,</div><div class="line">                <span class="attr">"user-agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.10 Safari/537.36"</span>,</div><div class="line">                <span class="attr">"accept"</span>: <span class="string">"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8"</span>,</div><div class="line">                <span class="attr">"accept-encoding"</span>: <span class="string">"gzip, deflate, br"</span>,</div><div class="line">                <span class="attr">"accept-language"</span>: <span class="string">"zh-CN,zh;q=0.9,en;q=0.8"</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">"response"</span>: &#123;</div><div class="line">                <span class="attr">"X-Application-Context"</span>: <span class="string">"application:80"</span>,</div><div class="line">                <span class="attr">"Content-Type"</span>: <span class="string">"application/vnd.spring-boot.actuator.v1+json;charset=UTF-8"</span>,</div><div class="line">                <span class="attr">"Transfer-Encoding"</span>: <span class="string">"chunked"</span>,</div><div class="line">                <span class="attr">"Date"</span>: <span class="string">"Mon, 07 May 2018 01:43:22 GMT"</span>,</div><div class="line">                <span class="attr">"status"</span>: <span class="string">"200"</span></div><div class="line">            &#125;</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">"timeTaken"</span>: <span class="string">"300"</span></div><div class="line">    &#125;</div><div class="line">&#125;]</div></pre></td></tr></table></figure><p></p><h3 id="dump"><a href="#dump" class="headerlink" title="dump"></a>dump</h3><p>获取某一时刻虚拟机线程栈信息。线程栈表示某一时刻虚拟机正在做的事情，访问<a href="http://localhost/monitor/dump" target="_blank" rel="external">http://localhost/monitor/dump</a>，输出如下（截取部分）：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div></pre></td><td class="code"><pre><div class="line">[&#123;</div><div class="line">    <span class="attr">"threadName"</span>: <span class="string">"DestroyJavaVM"</span>,</div><div class="line">    <span class="attr">"threadId"</span>: <span class="number">32</span>,</div><div class="line">    <span class="attr">"blockedTime"</span>: <span class="number">-1</span>,</div><div class="line">    <span class="attr">"blockedCount"</span>: <span class="number">0</span>,</div><div class="line">    <span class="attr">"waitedTime"</span>: <span class="number">-1</span>,</div><div class="line">    <span class="attr">"waitedCount"</span>: <span class="number">0</span>,</div><div class="line">    <span class="attr">"lockName"</span>: <span class="literal">null</span>,</div><div class="line">    <span class="attr">"lockOwnerId"</span>: <span class="number">-1</span>,</div><div class="line">    <span class="attr">"lockOwnerName"</span>: <span class="literal">null</span>,</div><div class="line">    <span class="attr">"inNative"</span>: <span class="literal">false</span>,</div><div class="line">    <span class="attr">"suspended"</span>: <span class="literal">false</span>,</div><div class="line">    <span class="attr">"threadState"</span>: <span class="string">"RUNNABLE"</span>,</div><div class="line">    <span class="attr">"stackTrace"</span>: [],</div><div class="line">    <span class="attr">"lockedMonitors"</span>: [],</div><div class="line">    <span class="attr">"lockedSynchronizers"</span>: [],</div><div class="line">    <span class="attr">"lockInfo"</span>: <span class="literal">null</span></div><div class="line">&#125;, &#123;</div><div class="line">    <span class="attr">"threadName"</span>: <span class="string">"http-nio-80-AsyncTimeout"</span>,</div><div class="line">    <span class="attr">"threadId"</span>: <span class="number">30</span>,</div><div class="line">    <span class="attr">"blockedTime"</span>: <span class="number">-1</span>,</div><div class="line">    <span class="attr">"blockedCount"</span>: <span class="number">0</span>,</div><div class="line">    <span class="attr">"waitedTime"</span>: <span class="number">-1</span>,</div><div class="line">    <span class="attr">"waitedCount"</span>: <span class="number">14903</span>,</div><div class="line">    <span class="attr">"lockName"</span>: <span class="literal">null</span>,</div><div class="line">    <span class="attr">"lockOwnerId"</span>: <span class="number">-1</span>,</div><div class="line">    <span class="attr">"lockOwnerName"</span>: <span class="literal">null</span>,</div><div class="line">    <span class="attr">"inNative"</span>: <span class="literal">false</span>,</div><div class="line">    <span class="attr">"suspended"</span>: <span class="literal">false</span>,</div><div class="line">    <span class="attr">"threadState"</span>: <span class="string">"TIMED_WAITING"</span>,</div><div class="line">    <span class="attr">"stackTrace"</span>: [&#123;</div><div class="line">        <span class="attr">"methodName"</span>: <span class="string">"sleep"</span>,</div><div class="line">        <span class="attr">"fileName"</span>: <span class="string">"Thread.java"</span>,</div><div class="line">        <span class="attr">"lineNumber"</span>: <span class="number">-2</span>,</div><div class="line">        <span class="attr">"className"</span>: <span class="string">"java.lang.Thread"</span>,</div><div class="line">        <span class="attr">"nativeMethod"</span>: <span class="literal">true</span></div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"methodName"</span>: <span class="string">"run"</span>,</div><div class="line">        <span class="attr">"fileName"</span>: <span class="string">"AbstractProtocol.java"</span>,</div><div class="line">        <span class="attr">"lineNumber"</span>: <span class="number">1211</span>,</div><div class="line">        <span class="attr">"className"</span>: <span class="string">"org.apache.coyote.AbstractProtocol$AsyncTimeout"</span>,</div><div class="line">        <span class="attr">"nativeMethod"</span>: <span class="literal">false</span></div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"methodName"</span>: <span class="string">"run"</span>,</div><div class="line">        <span class="attr">"fileName"</span>: <span class="string">"Thread.java"</span>,</div><div class="line">        <span class="attr">"lineNumber"</span>: <span class="number">745</span>,</div><div class="line">        <span class="attr">"className"</span>: <span class="string">"java.lang.Thread"</span>,</div><div class="line">        <span class="attr">"nativeMethod"</span>: <span class="literal">false</span></div><div class="line">    &#125;],</div><div class="line">    <span class="attr">"lockedMonitors"</span>: [],</div><div class="line">    <span class="attr">"lockedSynchronizers"</span>: [],</div><div class="line">    <span class="attr">"lockInfo"</span>: <span class="literal">null</span></div><div class="line">&#125;, &#123;</div><div class="line">    <span class="attr">"threadName"</span>: <span class="string">"http-nio-80-Acceptor-0"</span>,</div><div class="line">    <span class="attr">"threadId"</span>: <span class="number">29</span>,</div><div class="line">    <span class="attr">"blockedTime"</span>: <span class="number">-1</span>,</div><div class="line">    <span class="attr">"blockedCount"</span>: <span class="number">0</span>,</div><div class="line">    <span class="attr">"waitedTime"</span>: <span class="number">-1</span>,</div><div class="line">    <span class="attr">"waitedCount"</span>: <span class="number">0</span>,</div><div class="line">    <span class="attr">"lockName"</span>: <span class="literal">null</span>,</div><div class="line">    <span class="attr">"lockOwnerId"</span>: <span class="number">-1</span>,</div><div class="line">    <span class="attr">"lockOwnerName"</span>: <span class="literal">null</span>,</div><div class="line">    <span class="attr">"inNative"</span>: <span class="literal">true</span>,</div><div class="line">    <span class="attr">"suspended"</span>: <span class="literal">false</span>,</div><div class="line">    <span class="attr">"threadState"</span>: <span class="string">"RUNNABLE"</span>,</div><div class="line">    <span class="attr">"stackTrace"</span>: [&#123;</div><div class="line">        <span class="attr">"methodName"</span>: <span class="string">"accept0"</span>,</div><div class="line">        <span class="attr">"fileName"</span>: <span class="string">"ServerSocketChannelImpl.java"</span>,</div><div class="line">        <span class="attr">"lineNumber"</span>: <span class="number">-2</span>,</div><div class="line">        <span class="attr">"className"</span>: <span class="string">"sun.nio.ch.ServerSocketChannelImpl"</span>,</div><div class="line">        <span class="attr">"nativeMethod"</span>: <span class="literal">true</span></div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"methodName"</span>: <span class="string">"accept"</span>,</div><div class="line">        <span class="attr">"fileName"</span>: <span class="string">"ServerSocketChannelImpl.java"</span>,</div><div class="line">        <span class="attr">"lineNumber"</span>: <span class="number">250</span>,</div><div class="line">        <span class="attr">"className"</span>: <span class="string">"sun.nio.ch.ServerSocketChannelImpl"</span>,</div><div class="line">        <span class="attr">"nativeMethod"</span>: <span class="literal">false</span></div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"methodName"</span>: <span class="string">"run"</span>,</div><div class="line">        <span class="attr">"fileName"</span>: <span class="string">"NioEndpoint.java"</span>,</div><div class="line">        <span class="attr">"lineNumber"</span>: <span class="number">455</span>,</div><div class="line">        <span class="attr">"className"</span>: <span class="string">"org.apache.tomcat.util.net.NioEndpoint$Acceptor"</span>,</div><div class="line">        <span class="attr">"nativeMethod"</span>: <span class="literal">false</span></div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"methodName"</span>: <span class="string">"run"</span>,</div><div class="line">        <span class="attr">"fileName"</span>: <span class="string">"Thread.java"</span>,</div><div class="line">        <span class="attr">"lineNumber"</span>: <span class="number">745</span>,</div><div class="line">        <span class="attr">"className"</span>: <span class="string">"java.lang.Thread"</span>,</div><div class="line">        <span class="attr">"nativeMethod"</span>: <span class="literal">false</span></div><div class="line">    &#125;],</div><div class="line">    <span class="attr">"lockedMonitors"</span>: [&#123;</div><div class="line">        <span class="attr">"className"</span>: <span class="string">"java.lang.Object"</span>,</div><div class="line">        <span class="attr">"identityHashCode"</span>: <span class="number">1985974129</span>,</div><div class="line">        <span class="attr">"lockedStackDepth"</span>: <span class="number">1</span>,</div><div class="line">        <span class="attr">"lockedStackFrame"</span>: &#123;</div><div class="line">            <span class="attr">"methodName"</span>: <span class="string">"accept"</span>,</div><div class="line">            <span class="attr">"fileName"</span>: <span class="string">"ServerSocketChannelImpl.java"</span>,</div><div class="line">            <span class="attr">"lineNumber"</span>: <span class="number">250</span>,</div><div class="line">            <span class="attr">"className"</span>: <span class="string">"sun.nio.ch.ServerSocketChannelImpl"</span>,</div><div class="line">            <span class="attr">"nativeMethod"</span>: <span class="literal">false</span></div><div class="line">        &#125;</div><div class="line">    &#125;],</div><div class="line">    <span class="attr">"lockedSynchronizers"</span>: [],</div><div class="line">    <span class="attr">"lockInfo"</span>: <span class="literal">null</span></div><div class="line">&#125;, &#123;</div><div class="line">    <span class="attr">"threadName"</span>: <span class="string">"http-nio-80-ClientPoller-1"</span>,</div><div class="line">    <span class="attr">"threadId"</span>: <span class="number">28</span>,</div><div class="line">    <span class="attr">"blockedTime"</span>: <span class="number">-1</span>,</div><div class="line">    <span class="attr">"blockedCount"</span>: <span class="number">6</span>,</div><div class="line">    <span class="attr">"waitedTime"</span>: <span class="number">-1</span>,</div><div class="line">    <span class="attr">"waitedCount"</span>: <span class="number">0</span>,</div><div class="line">    <span class="attr">"lockName"</span>: <span class="literal">null</span>,</div><div class="line">    <span class="attr">"lockOwnerId"</span>: <span class="number">-1</span>,</div><div class="line">    <span class="attr">"lockOwnerName"</span>: <span class="literal">null</span>,</div><div class="line">    <span class="attr">"inNative"</span>: <span class="literal">true</span>,</div><div class="line">    <span class="attr">"suspended"</span>: <span class="literal">false</span>,</div><div class="line">    <span class="attr">"threadState"</span>: <span class="string">"RUNNABLE"</span>,</div><div class="line">    <span class="attr">"stackTrace"</span>: [&#123;</div><div class="line">        <span class="attr">"methodName"</span>: <span class="string">"poll0"</span>,</div><div class="line">        <span class="attr">"fileName"</span>: <span class="string">"WindowsSelectorImpl.java"</span>,</div><div class="line">        <span class="attr">"lineNumber"</span>: <span class="number">-2</span>,</div><div class="line">        <span class="attr">"className"</span>: <span class="string">"sun.nio.ch.WindowsSelectorImpl$SubSelector"</span>,</div><div class="line">        <span class="attr">"nativeMethod"</span>: <span class="literal">true</span></div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"methodName"</span>: <span class="string">"poll"</span>,</div><div class="line">        <span class="attr">"fileName"</span>: <span class="string">"WindowsSelectorImpl.java"</span>,</div><div class="line">        <span class="attr">"lineNumber"</span>: <span class="number">296</span>,</div><div class="line">        <span class="attr">"className"</span>: <span class="string">"sun.nio.ch.WindowsSelectorImpl$SubSelector"</span>,</div><div class="line">        <span class="attr">"nativeMethod"</span>: <span class="literal">false</span></div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"methodName"</span>: <span class="string">"access$400"</span>,</div><div class="line">        <span class="attr">"fileName"</span>: <span class="string">"WindowsSelectorImpl.java"</span>,</div><div class="line">        <span class="attr">"lineNumber"</span>: <span class="number">278</span>,</div><div class="line">        <span class="attr">"className"</span>: <span class="string">"sun.nio.ch.WindowsSelectorImpl$SubSelector"</span>,</div><div class="line">        <span class="attr">"nativeMethod"</span>: <span class="literal">false</span></div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"methodName"</span>: <span class="string">"doSelect"</span>,</div><div class="line">        <span class="attr">"fileName"</span>: <span class="string">"WindowsSelectorImpl.java"</span>,</div><div class="line">        <span class="attr">"lineNumber"</span>: <span class="number">159</span>,</div><div class="line">        <span class="attr">"className"</span>: <span class="string">"sun.nio.ch.WindowsSelectorImpl"</span>,</div><div class="line">        <span class="attr">"nativeMethod"</span>: <span class="literal">false</span></div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"methodName"</span>: <span class="string">"lockAndDoSelect"</span>,</div><div class="line">        <span class="attr">"fileName"</span>: <span class="string">"SelectorImpl.java"</span>,</div><div class="line">        <span class="attr">"lineNumber"</span>: <span class="number">87</span>,</div><div class="line">        <span class="attr">"className"</span>: <span class="string">"sun.nio.ch.SelectorImpl"</span>,</div><div class="line">        <span class="attr">"nativeMethod"</span>: <span class="literal">false</span></div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"methodName"</span>: <span class="string">"select"</span>,</div><div class="line">        <span class="attr">"fileName"</span>: <span class="string">"SelectorImpl.java"</span>,</div><div class="line">        <span class="attr">"lineNumber"</span>: <span class="number">98</span>,</div><div class="line">        <span class="attr">"className"</span>: <span class="string">"sun.nio.ch.SelectorImpl"</span>,</div><div class="line">        <span class="attr">"nativeMethod"</span>: <span class="literal">false</span></div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"methodName"</span>: <span class="string">"run"</span>,</div><div class="line">        <span class="attr">"fileName"</span>: <span class="string">"NioEndpoint.java"</span>,</div><div class="line">        <span class="attr">"lineNumber"</span>: <span class="number">793</span>,</div><div class="line">        <span class="attr">"className"</span>: <span class="string">"org.apache.tomcat.util.net.NioEndpoint$Poller"</span>,</div><div class="line">        <span class="attr">"nativeMethod"</span>: <span class="literal">false</span></div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"methodName"</span>: <span class="string">"run"</span>,</div><div class="line">        <span class="attr">"fileName"</span>: <span class="string">"Thread.java"</span>,</div><div class="line">        <span class="attr">"lineNumber"</span>: <span class="number">745</span>,</div><div class="line">        <span class="attr">"className"</span>: <span class="string">"java.lang.Thread"</span>,</div><div class="line">        <span class="attr">"nativeMethod"</span>: <span class="literal">false</span></div><div class="line">    &#125;],</div><div class="line">    <span class="attr">"lockedMonitors"</span>: [&#123;</div><div class="line">        <span class="attr">"className"</span>: <span class="string">"sun.nio.ch.Util$2"</span>,</div><div class="line">        <span class="attr">"identityHashCode"</span>: <span class="number">511554453</span>,</div><div class="line">        <span class="attr">"lockedStackDepth"</span>: <span class="number">4</span>,</div><div class="line">        <span class="attr">"lockedStackFrame"</span>: &#123;</div><div class="line">            <span class="attr">"methodName"</span>: <span class="string">"lockAndDoSelect"</span>,</div><div class="line">            <span class="attr">"fileName"</span>: <span class="string">"SelectorImpl.java"</span>,</div><div class="line">            <span class="attr">"lineNumber"</span>: <span class="number">87</span>,</div><div class="line">            <span class="attr">"className"</span>: <span class="string">"sun.nio.ch.SelectorImpl"</span>,</div><div class="line">            <span class="attr">"nativeMethod"</span>: <span class="literal">false</span></div><div class="line">        &#125;</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"className"</span>: <span class="string">"java.util.Collections$UnmodifiableSet"</span>,</div><div class="line">        <span class="attr">"identityHashCode"</span>: <span class="number">563515370</span>,</div><div class="line">        <span class="attr">"lockedStackDepth"</span>: <span class="number">4</span>,</div><div class="line">        <span class="attr">"lockedStackFrame"</span>: &#123;</div><div class="line">            <span class="attr">"methodName"</span>: <span class="string">"lockAndDoSelect"</span>,</div><div class="line">            <span class="attr">"fileName"</span>: <span class="string">"SelectorImpl.java"</span>,</div><div class="line">            <span class="attr">"lineNumber"</span>: <span class="number">87</span>,</div><div class="line">            <span class="attr">"className"</span>: <span class="string">"sun.nio.ch.SelectorImpl"</span>,</div><div class="line">            <span class="attr">"nativeMethod"</span>: <span class="literal">false</span></div><div class="line">        &#125;</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"className"</span>: <span class="string">"sun.nio.ch.WindowsSelectorImpl"</span>,</div><div class="line">        <span class="attr">"identityHashCode"</span>: <span class="number">761235575</span>,</div><div class="line">        <span class="attr">"lockedStackDepth"</span>: <span class="number">4</span>,</div><div class="line">        <span class="attr">"lockedStackFrame"</span>: &#123;</div><div class="line">            <span class="attr">"methodName"</span>: <span class="string">"lockAndDoSelect"</span>,</div><div class="line">            <span class="attr">"fileName"</span>: <span class="string">"SelectorImpl.java"</span>,</div><div class="line">            <span class="attr">"lineNumber"</span>: <span class="number">87</span>,</div><div class="line">            <span class="attr">"className"</span>: <span class="string">"sun.nio.ch.SelectorImpl"</span>,</div><div class="line">            <span class="attr">"nativeMethod"</span>: <span class="literal">false</span></div><div class="line">        &#125;</div><div class="line">    &#125;],</div><div class="line">    <span class="attr">"lockedSynchronizers"</span>: [],</div><div class="line">    <span class="attr">"lockInfo"</span>: <span class="literal">null</span></div><div class="line">&#125;,</div><div class="line">......</div><div class="line"> &#123;</div><div class="line">    <span class="attr">"threadName"</span>: <span class="string">"Finalizer"</span>,</div><div class="line">    <span class="attr">"threadId"</span>: <span class="number">3</span>,</div><div class="line">    <span class="attr">"blockedTime"</span>: <span class="number">-1</span>,</div><div class="line">    <span class="attr">"blockedCount"</span>: <span class="number">202</span>,</div><div class="line">    <span class="attr">"waitedTime"</span>: <span class="number">-1</span>,</div><div class="line">    <span class="attr">"waitedCount"</span>: <span class="number">51</span>,</div><div class="line">    <span class="attr">"lockName"</span>: <span class="string">"java.lang.ref.ReferenceQueue$Lock@bd5f3f3"</span>,</div><div class="line">    <span class="attr">"lockOwnerId"</span>: <span class="number">-1</span>,</div><div class="line">    <span class="attr">"lockOwnerName"</span>: <span class="literal">null</span>,</div><div class="line">    <span class="attr">"inNative"</span>: <span class="literal">false</span>,</div><div class="line">    <span class="attr">"suspended"</span>: <span class="literal">false</span>,</div><div class="line">    <span class="attr">"threadState"</span>: <span class="string">"WAITING"</span>,</div><div class="line">    <span class="attr">"stackTrace"</span>: [&#123;</div><div class="line">        <span class="attr">"methodName"</span>: <span class="string">"wait"</span>,</div><div class="line">        <span class="attr">"fileName"</span>: <span class="string">"Object.java"</span>,</div><div class="line">        <span class="attr">"lineNumber"</span>: <span class="number">-2</span>,</div><div class="line">        <span class="attr">"className"</span>: <span class="string">"java.lang.Object"</span>,</div><div class="line">        <span class="attr">"nativeMethod"</span>: <span class="literal">true</span></div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"methodName"</span>: <span class="string">"remove"</span>,</div><div class="line">        <span class="attr">"fileName"</span>: <span class="string">"ReferenceQueue.java"</span>,</div><div class="line">        <span class="attr">"lineNumber"</span>: <span class="number">135</span>,</div><div class="line">        <span class="attr">"className"</span>: <span class="string">"java.lang.ref.ReferenceQueue"</span>,</div><div class="line">        <span class="attr">"nativeMethod"</span>: <span class="literal">false</span></div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"methodName"</span>: <span class="string">"remove"</span>,</div><div class="line">        <span class="attr">"fileName"</span>: <span class="string">"ReferenceQueue.java"</span>,</div><div class="line">        <span class="attr">"lineNumber"</span>: <span class="number">151</span>,</div><div class="line">        <span class="attr">"className"</span>: <span class="string">"java.lang.ref.ReferenceQueue"</span>,</div><div class="line">        <span class="attr">"nativeMethod"</span>: <span class="literal">false</span></div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"methodName"</span>: <span class="string">"run"</span>,</div><div class="line">        <span class="attr">"fileName"</span>: <span class="string">"Finalizer.java"</span>,</div><div class="line">        <span class="attr">"lineNumber"</span>: <span class="number">209</span>,</div><div class="line">        <span class="attr">"className"</span>: <span class="string">"java.lang.ref.Finalizer$FinalizerThread"</span>,</div><div class="line">        <span class="attr">"nativeMethod"</span>: <span class="literal">false</span></div><div class="line">    &#125;],</div><div class="line">    <span class="attr">"lockedMonitors"</span>: [],</div><div class="line">    <span class="attr">"lockedSynchronizers"</span>: [],</div><div class="line">    <span class="attr">"lockInfo"</span>: &#123;</div><div class="line">        <span class="attr">"className"</span>: <span class="string">"java.lang.ref.ReferenceQueue$Lock"</span>,</div><div class="line">        <span class="attr">"identityHashCode"</span>: <span class="number">198570995</span></div><div class="line">    &#125;</div><div class="line">&#125;]</div></pre></td></tr></table></figure><p></p><h3 id="env"><a href="#env" class="headerlink" title="env"></a>env</h3><p>显示Spring Boot环境变量，如使用的JDK版本、加载的jar包、配置文件信息、日志文件信息。访问<a href=""></a>，输出如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"profiles"</span>: [],</div><div class="line">    <span class="attr">"server.ports"</span>: &#123;</div><div class="line">        <span class="attr">"local.server.port"</span>: <span class="number">80</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"servletContextInitParams"</span>: &#123;&#125;,</div><div class="line">    <span class="attr">"systemProperties"</span>: &#123;</div><div class="line">        <span class="attr">"java.runtime.name"</span>: <span class="string">"Java(TM) SE Runtime Environment"</span>,</div><div class="line">        <span class="attr">"sun.boot.library.path"</span>: <span class="string">"C:\\Program Files\\Java\\jdk1.7.0_80\\jre\\bin"</span>,</div><div class="line">        <span class="attr">"java.vm.version"</span>: <span class="string">"24.80-b11"</span>,</div><div class="line">        <span class="attr">"java.vm.vendor"</span>: <span class="string">"Oracle Corporation"</span>,</div><div class="line">        <span class="attr">"java.vendor.url"</span>: <span class="string">"http://java.oracle.com/"</span>,</div><div class="line">        <span class="attr">"path.separator"</span>: <span class="string">";"</span>,</div><div class="line">        <span class="attr">"java.vm.name"</span>: <span class="string">"Java HotSpot(TM) 64-Bit Server VM"</span>,</div><div class="line">        <span class="attr">"file.encoding.pkg"</span>: <span class="string">"sun.io"</span>,</div><div class="line">        <span class="attr">"user.country"</span>: <span class="string">"CN"</span>,</div><div class="line">        <span class="attr">"user.script"</span>: <span class="string">""</span>,</div><div class="line">        <span class="attr">"sun.java.launcher"</span>: <span class="string">"SUN_STANDARD"</span>,</div><div class="line">        <span class="attr">"sun.os.patch.level"</span>: <span class="string">""</span>,</div><div class="line">        <span class="attr">"PID"</span>: <span class="string">"15184"</span>,</div><div class="line">        <span class="attr">"java.vm.specification.name"</span>: <span class="string">"Java Virtual Machine Specification"</span>,</div><div class="line">        <span class="attr">"user.dir"</span>: <span class="string">"C:\\Users\\Administrator\\Desktop\\01.Start-Spring-Boot"</span>,</div><div class="line">        <span class="attr">"java.runtime.version"</span>: <span class="string">"1.7.0_80-b15"</span>,</div><div class="line">        <span class="attr">"java.awt.graphicsenv"</span>: <span class="string">"sun.awt.Win32GraphicsEnvironment"</span>,</div><div class="line">        <span class="attr">"org.jboss.logging.provider"</span>: <span class="string">"slf4j"</span>,</div><div class="line">        <span class="attr">"java.endorsed.dirs"</span>: <span class="string">"C:\\Program Files\\Java\\jdk1.7.0_80\\jre\\lib\\endorsed"</span>,</div><div class="line">        <span class="attr">"os.arch"</span>: <span class="string">"amd64"</span>,</div><div class="line">        <span class="attr">"java.io.tmpdir"</span>: <span class="string">"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\"</span>,</div><div class="line">        <span class="attr">"line.separator"</span>: <span class="string">"\r\n"</span>,</div><div class="line">        <span class="attr">"java.vm.specification.vendor"</span>: <span class="string">"Oracle Corporation"</span>,</div><div class="line">        <span class="attr">"user.variant"</span>: <span class="string">""</span>,</div><div class="line">        <span class="attr">"os.name"</span>: <span class="string">"Windows 8.1"</span>,</div><div class="line">        <span class="attr">"sun.jnu.encoding"</span>: <span class="string">"GBK"</span>,</div><div class="line">        <span class="attr">"spring.beaninfo.ignore"</span>: <span class="string">"true"</span>,</div><div class="line">        <span class="attr">"java.library.path"</span>: <span class="string">"C:\\Program Files\\Java\\jdk1.7.0_80\\bin;C:\\Windows\\Sun\\Java\\bin;C:\\Windows\\system32;C:\\Windows;C:/Program Files/Java/jre1.8.0_31/bin/server;C:/Program Files/Java/jre1.8.0_31/bin;C:/Program Files/Java/jre1.8.0_31/lib/amd64;f:\\app\\Administrator\\product\\11.2.0\\client_1\\bin;f:\\app\\Administrator\\product\\11.2.0\\dbhome_1\\bin;C:\\ProgramData\\Oracle\\Java\\javapath;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\nodejs\\;C:\\Program Files\\Git\\cmd;\"%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin\";%M2_HOME%\\bin;C:\\Program Files\\TortoiseSVN\\bin;C:\\Program Files\\PuTTY\\;C:\\ProgramData\\chocolatey\\bin;C:\\Users\\Administrator\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Administrator\\AppData\\Roaming\\npm;\"C:\\Program Files\\Java\\jdk1.8.0_31\\bin;C:\\Program Files\\Java\\jdk1.8.0_31\\jre\\bin\";D:\\Program Files\\apache-maven-3.3.9-bin\\apache-maven-3.3.9\\bin;C:\\Program Files\\cmder;;D:\\Program Files\\Oxygen;;."</span>,</div><div class="line">        <span class="attr">"java.specification.name"</span>: <span class="string">"Java Platform API Specification"</span>,</div><div class="line">        <span class="attr">"java.class.version"</span>: <span class="string">"51.0"</span>,</div><div class="line">        <span class="attr">"sun.management.compiler"</span>: <span class="string">"HotSpot 64-Bit Tiered Compilers"</span>,</div><div class="line">        <span class="attr">"os.version"</span>: <span class="string">"6.3"</span>,</div><div class="line">        <span class="attr">"user.home"</span>: <span class="string">"C:\\Users\\Administrator"</span>,</div><div class="line">        <span class="attr">"catalina.useNaming"</span>: <span class="string">"false"</span>,</div><div class="line">        <span class="attr">"user.timezone"</span>: <span class="string">"Asia/Shanghai"</span>,</div><div class="line">        <span class="attr">"java.awt.printerjob"</span>: <span class="string">"sun.awt.windows.WPrinterJob"</span>,</div><div class="line">        <span class="attr">"file.encoding"</span>: <span class="string">"UTF-8"</span>,</div><div class="line">        <span class="attr">"java.specification.version"</span>: <span class="string">"1.7"</span>,</div><div class="line">        <span class="attr">"catalina.home"</span>: <span class="string">"C:\\Users\\Administrator\\AppData\\Local\\Temp\\tomcat.2042919348800278549.80"</span>,</div><div class="line">        <span class="attr">"java.class.path"</span>: <span class="string">"C:\\Program Files\\Java\\jdk1.7.0_80\\jre\\lib\\resources.jar;C:\\Program Files\\Java\\jdk1.7.0_80\\jre\\lib\\rt.jar;C:\\Program Files\\Java\\jdk1.7.0_80\\jre\\lib\\jsse.jar;C:\\Program Files\\Java\\jdk1.7.0_80\\jre\\lib\\jce.jar;C:\\Program Files\\Java\\jdk1.7.0_80\\jre\\lib\\charsets.jar;C:\\Program Files\\Java\\jdk1.7.0_80\\jre\\lib\\jfr.jar;C:\\Program Files\\Java\\jdk1.7.0_80\\jre\\lib\\ext\\access-bridge-64.jar;C:\\Program Files\\Java\\jdk1.7.0_80\\jre\\lib\\ext\\dnsns.jar;C:\\Program Files\\Java\\jdk1.7.0_80\\jre\\lib\\ext\\jaccess.jar;C:\\Program Files\\Java\\jdk1.7.0_80\\jre\\lib\\ext\\localedata.jar;C:\\Program Files\\Java\\jdk1.7.0_80\\jre\\lib\\ext\\sunec.jar;C:\\Program Files\\Java\\jdk1.7.0_80\\jre\\lib\\ext\\sunjce_provider.jar;C:\\Program Files\\Java\\jdk1.7.0_80\\jre\\lib\\ext\\sunmscapi.jar;C:\\Program Files\\Java\\jdk1.7.0_80\\jre\\lib\\ext\\zipfs.jar;C:\\Users\\Administrator\\Desktop\\01.Start-Spring-Boot\\target\\classes;D:\\m2\\repository\\org\\springframework\\boot\\spring-boot-starter-web\\1.5.9.RELEASE\\spring-boot-starter-web-1.5.9.RELEASE.jar;D:\\m2\\repository\\org\\springframework\\boot\\spring-boot-starter\\1.5.9.RELEASE\\spring-boot-starter-1.5.9.RELEASE.jar;D:\\m2\\repository\\org\\springframework\\boot\\spring-boot\\1.5.9.RELEASE\\spring-boot-1.5.9.RELEASE.jar;D:\\m2\\repository\\org\\springframework\\boot\\spring-boot-autoconfigure\\1.5.9.RELEASE\\spring-boot-autoconfigure-1.5.9.RELEASE.jar;D:\\m2\\repository\\org\\springframework\\boot\\spring-boot-starter-logging\\1.5.9.RELEASE\\spring-boot-starter-logging-1.5.9.RELEASE.jar;D:\\m2\\repository\\ch\\qos\\logback\\logback-classic\\1.1.11\\logback-classic-1.1.11.jar;D:\\m2\\repository\\ch\\qos\\logback\\logback-core\\1.1.11\\logback-core-1.1.11.jar;D:\\m2\\repository\\org\\slf4j\\jcl-over-slf4j\\1.7.25\\jcl-over-slf4j-1.7.25.jar;D:\\m2\\repository\\org\\slf4j\\jul-to-slf4j\\1.7.25\\jul-to-slf4j-1.7.25.jar;D:\\m2\\repository\\org\\slf4j\\log4j-over-slf4j\\1.7.25\\log4j-over-slf4j-1.7.25.jar;D:\\m2\\repository\\org\\yaml\\snakeyaml\\1.17\\snakeyaml-1.17.jar;D:\\m2\\repository\\org\\springframework\\boot\\spring-boot-starter-tomcat\\1.5.9.RELEASE\\spring-boot-starter-tomcat-1.5.9.RELEASE.jar;D:\\m2\\repository\\org\\apache\\tomcat\\embed\\tomcat-embed-core\\8.5.23\\tomcat-embed-core-8.5.23.jar;D:\\m2\\repository\\org\\apache\\tomcat\\tomcat-annotations-api\\8.5.23\\tomcat-annotations-api-8.5.23.jar;D:\\m2\\repository\\org\\apache\\tomcat\\embed\\tomcat-embed-el\\8.5.23\\tomcat-embed-el-8.5.23.jar;D:\\m2\\repository\\org\\apache\\tomcat\\embed\\tomcat-embed-websocket\\8.5.23\\tomcat-embed-websocket-8.5.23.jar;D:\\m2\\repository\\org\\hibernate\\hibernate-validator\\5.3.6.Final\\hibernate-validator-5.3.6.Final.jar;D:\\m2\\repository\\javax\\validation\\validation-api\\1.1.0.Final\\validation-api-1.1.0.Final.jar;D:\\m2\\repository\\org\\jboss\\logging\\jboss-logging\\3.3.1.Final\\jboss-logging-3.3.1.Final.jar;D:\\m2\\repository\\com\\fasterxml\\classmate\\1.3.4\\classmate-1.3.4.jar;D:\\m2\\repository\\com\\fasterxml\\jackson\\core\\jackson-databind\\2.8.10\\jackson-databind-2.8.10.jar;D:\\m2\\repository\\com\\fasterxml\\jackson\\core\\jackson-annotations\\2.8.0\\jackson-annotations-2.8.0.jar;D:\\m2\\repository\\com\\fasterxml\\jackson\\core\\jackson-core\\2.8.10\\jackson-core-2.8.10.jar;D:\\m2\\repository\\org\\springframework\\spring-web\\4.3.13.RELEASE\\spring-web-4.3.13.RELEASE.jar;D:\\m2\\repository\\org\\springframework\\spring-aop\\4.3.13.RELEASE\\spring-aop-4.3.13.RELEASE.jar;D:\\m2\\repository\\org\\springframework\\spring-beans\\4.3.13.RELEASE\\spring-beans-4.3.13.RELEASE.jar;D:\\m2\\repository\\org\\springframework\\spring-context\\4.3.13.RELEASE\\spring-context-4.3.13.RELEASE.jar;D:\\m2\\repository\\org\\springframework\\spring-webmvc\\4.3.13.RELEASE\\spring-webmvc-4.3.13.RELEASE.jar;D:\\m2\\repository\\org\\springframework\\spring-expression\\4.3.13.RELEASE\\spring-expression-4.3.13.RELEASE.jar;D:\\m2\\repository\\org\\slf4j\\slf4j-api\\1.7.25\\slf4j-api-1.7.25.jar;D:\\m2\\repository\\org\\springframework\\spring-core\\4.3.13.RELEASE\\spring-core-4.3.13.RELEASE.jar;D:\\m2\\repository\\org\\springframework\\boot\\spring-boot-starter-actuator\\1.5.9.RELEASE\\spring-boot-starter-actuator-1.5.9.RELEASE.jar;D:\\m2\\repository\\org\\springframework\\boot\\spring-boot-actuator\\1.5.9.RELEASE\\spring-boot-actuator-1.5.9.RELEASE.jar"</span>,</div><div class="line">        <span class="attr">"user.name"</span>: <span class="string">"Administrator"</span>,</div><div class="line">        <span class="attr">"java.vm.specification.version"</span>: <span class="string">"1.7"</span>,</div><div class="line">        <span class="attr">"sun.java.command"</span>: <span class="string">"com.springboot.demo.DemoApplication"</span>,</div><div class="line">        <span class="attr">"java.home"</span>: <span class="string">"C:\\Program Files\\Java\\jdk1.7.0_80\\jre"</span>,</div><div class="line">        <span class="attr">"sun.arch.data.model"</span>: <span class="string">"64"</span>,</div><div class="line">        <span class="attr">"user.language"</span>: <span class="string">"zh"</span>,</div><div class="line">        <span class="attr">"java.specification.vendor"</span>: <span class="string">"Oracle Corporation"</span>,</div><div class="line">        <span class="attr">"awt.toolkit"</span>: <span class="string">"sun.awt.windows.WToolkit"</span>,</div><div class="line">        <span class="attr">"java.vm.info"</span>: <span class="string">"mixed mode"</span>,</div><div class="line">        <span class="attr">"java.version"</span>: <span class="string">"1.7.0_80"</span>,</div><div class="line">        <span class="attr">"java.ext.dirs"</span>: <span class="string">"C:\\Program Files\\Java\\jdk1.7.0_80\\jre\\lib\\ext;C:\\Windows\\Sun\\Java\\lib\\ext"</span>,</div><div class="line">        <span class="attr">"sun.boot.class.path"</span>: <span class="string">"C:\\Program Files\\Java\\jdk1.7.0_80\\jre\\lib\\resources.jar;C:\\Program Files\\Java\\jdk1.7.0_80\\jre\\lib\\rt.jar;C:\\Program Files\\Java\\jdk1.7.0_80\\jre\\lib\\sunrsasign.jar;C:\\Program Files\\Java\\jdk1.7.0_80\\jre\\lib\\jsse.jar;C:\\Program Files\\Java\\jdk1.7.0_80\\jre\\lib\\jce.jar;C:\\Program Files\\Java\\jdk1.7.0_80\\jre\\lib\\charsets.jar;C:\\Program Files\\Java\\jdk1.7.0_80\\jre\\lib\\jfr.jar;C:\\Program Files\\Java\\jdk1.7.0_80\\jre\\classes"</span>,</div><div class="line">        <span class="attr">"java.awt.headless"</span>: <span class="string">"true"</span>,</div><div class="line">        <span class="attr">"java.vendor"</span>: <span class="string">"Oracle Corporation"</span>,</div><div class="line">        <span class="attr">"catalina.base"</span>: <span class="string">"C:\\Users\\Administrator\\AppData\\Local\\Temp\\tomcat.2042919348800278549.80"</span>,</div><div class="line">        <span class="attr">"file.separator"</span>: <span class="string">"\\"</span>,</div><div class="line">        <span class="attr">"java.vendor.url.bug"</span>: <span class="string">"http://bugreport.sun.com/bugreport/"</span>,</div><div class="line">        <span class="attr">"sun.io.unicode.encoding"</span>: <span class="string">"UnicodeLittle"</span>,</div><div class="line">        <span class="attr">"sun.cpu.endian"</span>: <span class="string">"little"</span>,</div><div class="line">        <span class="attr">"sun.desktop"</span>: <span class="string">"windows"</span>,</div><div class="line">        <span class="attr">"sun.cpu.isalist"</span>: <span class="string">"amd64"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"systemEnvironment"</span>: &#123;</div><div class="line">        <span class="attr">"USERPROFILE"</span>: <span class="string">"C:\\Users\\Administrator"</span>,</div><div class="line">        <span class="attr">"ProgramData"</span>: <span class="string">"C:\\ProgramData"</span>,</div><div class="line">        <span class="attr">"PATHEXT"</span>: <span class="string">".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC"</span>,</div><div class="line">        <span class="attr">"JAVA_HOME"</span>: <span class="string">"C:\\Program Files\\Java\\jdk1.8.0_31"</span>,</div><div class="line">        <span class="attr">"ProgramFiles(x86)"</span>: <span class="string">"C:\\Program Files (x86)"</span>,</div><div class="line">        <span class="attr">"ChocolateyLastPathUpdate"</span>: <span class="string">"周四 4月 26 09:03:47 2018"</span>,</div><div class="line">        <span class="attr">"TEMP"</span>: <span class="string">"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp"</span>,</div><div class="line">        <span class="attr">"SystemDrive"</span>: <span class="string">"C:"</span>,</div><div class="line">        <span class="attr">"ProgramFiles"</span>: <span class="string">"C:\\Program Files"</span>,</div><div class="line">        <span class="attr">"Path"</span>: <span class="string">"C:/Program Files/Java/jre1.8.0_31/bin/server;C:/Program Files/Java/jre1.8.0_31/bin;C:/Program Files/Java/jre1.8.0_31/lib/amd64;f:\\app\\Administrator\\product\\11.2.0\\client_1\\bin;f:\\app\\Administrator\\product\\11.2.0\\dbhome_1\\bin;C:\\ProgramData\\Oracle\\Java\\javapath;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\nodejs\\;C:\\Program Files\\Git\\cmd;\"%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin\";%M2_HOME%\\bin;C:\\Program Files\\TortoiseSVN\\bin;C:\\Program Files\\PuTTY\\;C:\\ProgramData\\chocolatey\\bin;C:\\Users\\Administrator\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Administrator\\AppData\\Roaming\\npm;\"C:\\Program Files\\Java\\jdk1.8.0_31\\bin;C:\\Program Files\\Java\\jdk1.8.0_31\\jre\\bin\";D:\\Program Files\\apache-maven-3.3.9-bin\\apache-maven-3.3.9\\bin;C:\\Program Files\\cmder;;D:\\Program Files\\Oxygen;"</span>,</div><div class="line">        <span class="attr">"HOMEDRIVE"</span>: <span class="string">"C:"</span>,</div><div class="line">        <span class="attr">"PROCESSOR_REVISION"</span>: <span class="string">"4e03"</span>,</div><div class="line">        <span class="attr">"=C:"</span>: <span class="string">"C:\\"</span>,</div><div class="line">        <span class="attr">"USERDOMAIN"</span>: <span class="string">"SC-201802012049"</span>,</div><div class="line">        <span class="attr">"ALLUSERSPROFILE"</span>: <span class="string">"C:\\ProgramData"</span>,</div><div class="line">        <span class="attr">"ProgramW6432"</span>: <span class="string">"C:\\Program Files"</span>,</div><div class="line">        <span class="attr">"PROCESSOR_IDENTIFIER"</span>: <span class="string">"Intel64 Family 6 Model 78 Stepping 3, GenuineIntel"</span>,</div><div class="line">        <span class="attr">"SESSIONNAME"</span>: <span class="string">"Console"</span>,</div><div class="line">        <span class="attr">"FPS_BROWSER_USER_PROFILE_STRING"</span>: <span class="string">"Default"</span>,</div><div class="line">        <span class="attr">"TMP"</span>: <span class="string">"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp"</span>,</div><div class="line">        <span class="attr">"PROCESSOR_ARCHITECTURE"</span>: <span class="string">"AMD64"</span>,</div><div class="line">        <span class="attr">"CommonProgramFiles"</span>: <span class="string">"C:\\Program Files\\Common Files"</span>,</div><div class="line">        <span class="attr">"CLASSPATH"</span>: <span class="string">".;C:\\Program Files\\Java\\jdk1.8.0_31\\lib;C:\\Program Files\\Java\\jdk1.8.0_31\\lib\\tools.jar"</span>,</div><div class="line">        <span class="attr">"=::"</span>: <span class="string">"::\\"</span>,</div><div class="line">        <span class="attr">"LOGONSERVER"</span>: <span class="string">"\\\\SC-201802012049"</span>,</div><div class="line">        <span class="attr">"M2_HOME"</span>: <span class="string">"D:\\Program Files\\apache-maven-3.3.9-bin\\apache-maven-3.3.9"</span>,</div><div class="line">        <span class="attr">"OS"</span>: <span class="string">"Windows_NT"</span>,</div><div class="line">        <span class="attr">"HOMEPATH"</span>: <span class="string">"\\Users\\Administrator"</span>,</div><div class="line">        <span class="attr">"PROCESSOR_LEVEL"</span>: <span class="string">"6"</span>,</div><div class="line">        <span class="attr">"FPS_BROWSER_APP_PROFILE_STRING"</span>: <span class="string">"Internet Explorer"</span>,</div><div class="line">        <span class="attr">"CommonProgramW6432"</span>: <span class="string">"C:\\Program Files\\Common Files"</span>,</div><div class="line">        <span class="attr">"USERDOMAIN_ROAMINGPROFILE"</span>: <span class="string">"SC-201802012049"</span>,</div><div class="line">        <span class="attr">"LOCALAPPDATA"</span>: <span class="string">"C:\\Users\\Administrator\\AppData\\Local"</span>,</div><div class="line">        <span class="attr">"COMPUTERNAME"</span>: <span class="string">"SC-201802012049"</span>,</div><div class="line">        <span class="attr">"windir"</span>: <span class="string">"C:\\Windows"</span>,</div><div class="line">        <span class="attr">"SystemRoot"</span>: <span class="string">"C:\\Windows"</span>,</div><div class="line">        <span class="attr">"asl.log"</span>: <span class="string">"Destination=file"</span>,</div><div class="line">        <span class="attr">"NUMBER_OF_PROCESSORS"</span>: <span class="string">"4"</span>,</div><div class="line">        <span class="attr">"USERNAME"</span>: <span class="string">"Administrator"</span>,</div><div class="line">        <span class="attr">"PUBLIC"</span>: <span class="string">"C:\\Users\\Public"</span>,</div><div class="line">        <span class="attr">"PSModulePath"</span>: <span class="string">"C:\\Program Files\\WindowsPowerShell\\Modules;C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules"</span>,</div><div class="line">        <span class="attr">"CommonProgramFiles(x86)"</span>: <span class="string">"C:\\Program Files (x86)\\Common Files"</span>,</div><div class="line">        <span class="attr">"ComSpec"</span>: <span class="string">"C:\\Windows\\system32\\cmd.exe"</span>,</div><div class="line">        <span class="attr">"ChocolateyInstall"</span>: <span class="string">"C:\\ProgramData\\chocolatey"</span>,</div><div class="line">        <span class="attr">"APPDATA"</span>: <span class="string">"C:\\Users\\Administrator\\AppData\\Roaming"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"applicationConfig: [classpath:/application.yml]"</span>: &#123;</div><div class="line">        <span class="attr">"server.port"</span>: <span class="number">80</span>,</div><div class="line">        <span class="attr">"management.security.enabled"</span>: <span class="literal">false</span>,</div><div class="line">        <span class="attr">"management.port"</span>: <span class="number">80</span>,</div><div class="line">        <span class="attr">"management.context-path"</span>: <span class="string">"/monitor"</span>,</div><div class="line">        <span class="attr">"endpoints.shutdown.enabled"</span>: <span class="literal">true</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><h3 id="health"><a href="#health" class="headerlink" title="health"></a>health</h3><p>查看所在应用的健康状态， 如磁盘、数据源、Redis 、Elasticsearch等。健康状态分为UP（正常）和DOWN（故障）状态。访问<a href="http://localhost/monitor/health" target="_blank" rel="external">http://localhost/monitor/health</a>，显示如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"status"</span>: <span class="string">"UP"</span>,</div><div class="line">    <span class="attr">"diskSpace"</span>: &#123;</div><div class="line">        <span class="attr">"status"</span>: <span class="string">"UP"</span>,</div><div class="line">        <span class="attr">"total"</span>: <span class="number">107380994048</span>,</div><div class="line">        <span class="attr">"free"</span>: <span class="number">63853707264</span>,</div><div class="line">        <span class="attr">"threshold"</span>: <span class="number">10485760</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><h3 id="mappings"><a href="#mappings" class="headerlink" title="mappings"></a>mappings</h3><p>输出所有通过注解<code>＠RequestMapping</code>设置的URL映射，可以通过此来查看URL对应的Controller。访问<a href="http://localhost/monitor/mappings" target="_blank" rel="external">http://localhost/monitor/mappings</a>，显示如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"/webjars/**"</span>: &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"resourceHandlerMapping"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"/**"</span>: &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"resourceHandlerMapping"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"/**/favicon.ico"</span>: &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"faviconHandlerMapping"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"&#123;[/]&#125;"</span>: &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"requestMappingHandlerMapping"</span>,</div><div class="line">        <span class="attr">"method"</span>: <span class="string">"java.lang.String com.springboot.demo.DemoApplication.index()"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"&#123;[/error]&#125;"</span>: &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"requestMappingHandlerMapping"</span>,</div><div class="line">        <span class="attr">"method"</span>: <span class="string">"public org.springframework.http.ResponseEntity&lt;java.util.Map&lt;java.lang.String, java.lang.Object&gt;&gt; org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"&#123;[/error],produces=[text/html]&#125;"</span>: &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"requestMappingHandlerMapping"</span>,</div><div class="line">        <span class="attr">"method"</span>: <span class="string">"public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"&#123;[/monitor/loggers/&#123;name:.*&#125;],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]&#125;"</span>: &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"endpointHandlerMapping"</span>,</div><div class="line">        <span class="attr">"method"</span>: <span class="string">"public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"&#123;[/monitor/loggers/&#123;name:.*&#125;],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]&#125;"</span>: &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"endpointHandlerMapping"</span>,</div><div class="line">        <span class="attr">"method"</span>: <span class="string">"public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map&lt;java.lang.String, java.lang.String&gt;)"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"&#123;[/monitor/loggers || /monitor/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]&#125;"</span>: &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"endpointHandlerMapping"</span>,</div><div class="line">        <span class="attr">"method"</span>: <span class="string">"public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"&#123;[/monitor/shutdown || /monitor/shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]&#125;"</span>: &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"endpointHandlerMapping"</span>,</div><div class="line">        <span class="attr">"method"</span>: <span class="string">"public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"&#123;[/monitor/trace || /monitor/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]&#125;"</span>: &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"endpointHandlerMapping"</span>,</div><div class="line">        <span class="attr">"method"</span>: <span class="string">"public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"&#123;[/monitor/heapdump || /monitor/heapdump.json],methods=[GET],produces=[application/octet-stream]&#125;"</span>: &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"endpointHandlerMapping"</span>,</div><div class="line">        <span class="attr">"method"</span>: <span class="string">"public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"&#123;[/monitor/autoconfig || /monitor/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]&#125;"</span>: &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"endpointHandlerMapping"</span>,</div><div class="line">        <span class="attr">"method"</span>: <span class="string">"public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"&#123;[/monitor/beans || /monitor/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]&#125;"</span>: &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"endpointHandlerMapping"</span>,</div><div class="line">        <span class="attr">"method"</span>: <span class="string">"public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"&#123;[/monitor/mappings || /monitor/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]&#125;"</span>: &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"endpointHandlerMapping"</span>,</div><div class="line">        <span class="attr">"method"</span>: <span class="string">"public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"&#123;[/monitor/health || /monitor/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]&#125;"</span>: &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"endpointHandlerMapping"</span>,</div><div class="line">        <span class="attr">"method"</span>: <span class="string">"public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"&#123;[/monitor/metrics/&#123;name:.*&#125;],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]&#125;"</span>: &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"endpointHandlerMapping"</span>,</div><div class="line">        <span class="attr">"method"</span>: <span class="string">"public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"&#123;[/monitor/metrics || /monitor/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]&#125;"</span>: &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"endpointHandlerMapping"</span>,</div><div class="line">        <span class="attr">"method"</span>: <span class="string">"public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"&#123;[/monitor/dump || /monitor/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]&#125;"</span>: &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"endpointHandlerMapping"</span>,</div><div class="line">        <span class="attr">"method"</span>: <span class="string">"public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"&#123;[/monitor/env/&#123;name:.*&#125;],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]&#125;"</span>: &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"endpointHandlerMapping"</span>,</div><div class="line">        <span class="attr">"method"</span>: <span class="string">"public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"&#123;[/monitor/env || /monitor/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]&#125;"</span>: &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"endpointHandlerMapping"</span>,</div><div class="line">        <span class="attr">"method"</span>: <span class="string">"public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"&#123;[/monitor/info || /monitor/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]&#125;"</span>: &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"endpointHandlerMapping"</span>,</div><div class="line">        <span class="attr">"method"</span>: <span class="string">"public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"&#123;[/monitor/configprops || /monitor/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]&#125;"</span>: &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"endpointHandlerMapping"</span>,</div><div class="line">        <span class="attr">"method"</span>: <span class="string">"public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"&#123;[/monitor/auditevents || /monitor/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]&#125;"</span>: &#123;</div><div class="line">        <span class="attr">"bean"</span>: <span class="string">"endpointHandlerMapping"</span>,</div><div class="line">        <span class="attr">"method"</span>: <span class="string">"public org.springframework.http.ResponseEntity&lt;?&gt; org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)"</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><h3 id="metrics"><a href="#metrics" class="headerlink" title="metrics"></a>metrics</h3><p>显示Spring Boot的性能指标，如己有内存、未占用内存、垃圾回收次数、类信息等。访问<a href="http://localhost/monitor/metrics" target="_blank" rel="external">http://localhost/monitor/metrics</a>，输出如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"mem"</span>: <span class="number">245361</span>,</div><div class="line">    <span class="attr">"mem.free"</span>: <span class="number">76255</span>,</div><div class="line">    <span class="attr">"processors"</span>: <span class="number">4</span>,</div><div class="line">    <span class="attr">"instance.uptime"</span>: <span class="number">15927377</span>,</div><div class="line">    <span class="attr">"uptime"</span>: <span class="number">15932920</span>,</div><div class="line">    <span class="attr">"systemload.average"</span>: <span class="number">-1.0</span>,</div><div class="line">    <span class="attr">"heap.committed"</span>: <span class="number">209408</span>,</div><div class="line">    <span class="attr">"heap.init"</span>: <span class="number">122659</span>,</div><div class="line">    <span class="attr">"heap.used"</span>: <span class="number">133152</span>,</div><div class="line">    <span class="attr">"heap"</span>: <span class="number">1745920</span>,</div><div class="line">    <span class="attr">"nonheap.committed"</span>: <span class="number">36480</span>,</div><div class="line">    <span class="attr">"nonheap.init"</span>: <span class="number">24000</span>,</div><div class="line">    <span class="attr">"nonheap.used"</span>: <span class="number">35953</span>,</div><div class="line">    <span class="attr">"nonheap"</span>: <span class="number">133120</span>,</div><div class="line">    <span class="attr">"threads.peak"</span>: <span class="number">24</span>,</div><div class="line">    <span class="attr">"threads.daemon"</span>: <span class="number">20</span>,</div><div class="line">    <span class="attr">"threads.totalStarted"</span>: <span class="number">27</span>,</div><div class="line">    <span class="attr">"threads"</span>: <span class="number">22</span>,</div><div class="line">    <span class="attr">"classes"</span>: <span class="number">6107</span>,</div><div class="line">    <span class="attr">"classes.loaded"</span>: <span class="number">6107</span>,</div><div class="line">    <span class="attr">"classes.unloaded"</span>: <span class="number">0</span>,</div><div class="line">    <span class="attr">"gc.ps_scavenge.count"</span>: <span class="number">5</span>,</div><div class="line">    <span class="attr">"gc.ps_scavenge.time"</span>: <span class="number">73</span>,</div><div class="line">    <span class="attr">"gc.ps_marksweep.count"</span>: <span class="number">0</span>,</div><div class="line">    <span class="attr">"gc.ps_marksweep.time"</span>: <span class="number">0</span>,</div><div class="line">    <span class="attr">"httpsessions.max"</span>: <span class="number">-1</span>,</div><div class="line">    <span class="attr">"httpsessions.active"</span>: <span class="number">0</span>,</div><div class="line">    <span class="attr">"counter.status.200.monitor.autoconfig"</span>: <span class="number">2</span>,</div><div class="line">    <span class="attr">"counter.status.200.monitor.beans"</span>: <span class="number">2</span>,</div><div class="line">    <span class="attr">"counter.status.200.monitor.configprops"</span>: <span class="number">1</span>,</div><div class="line">    <span class="attr">"counter.status.200.monitor.dump"</span>: <span class="number">4</span>,</div><div class="line">    <span class="attr">"counter.status.200.monitor.env"</span>: <span class="number">1</span>,</div><div class="line">    <span class="attr">"counter.status.200.monitor.health"</span>: <span class="number">1</span>,</div><div class="line">    <span class="attr">"counter.status.200.monitor.info"</span>: <span class="number">1</span>,</div><div class="line">    <span class="attr">"counter.status.200.monitor.loggers"</span>: <span class="number">1</span>,</div><div class="line">    <span class="attr">"counter.status.200.monitor.mappings"</span>: <span class="number">1</span>,</div><div class="line">    <span class="attr">"counter.status.200.monitor.trace"</span>: <span class="number">3</span>,</div><div class="line">    <span class="attr">"counter.status.200.star-star.favicon.ico"</span>: <span class="number">3</span>,</div><div class="line">    <span class="attr">"counter.status.404.star-star"</span>: <span class="number">2</span>,</div><div class="line">    <span class="attr">"gauge.response.monitor.autoconfig"</span>: <span class="number">14.0</span>,</div><div class="line">    <span class="attr">"gauge.response.monitor.beans"</span>: <span class="number">42.0</span>,</div><div class="line">    <span class="attr">"gauge.response.monitor.configprops"</span>: <span class="number">440.0</span>,</div><div class="line">    <span class="attr">"gauge.response.monitor.dump"</span>: <span class="number">62.0</span>,</div><div class="line">    <span class="attr">"gauge.response.monitor.env"</span>: <span class="number">14.0</span>,</div><div class="line">    <span class="attr">"gauge.response.monitor.health"</span>: <span class="number">22.0</span>,</div><div class="line">    <span class="attr">"gauge.response.monitor.info"</span>: <span class="number">26.0</span>,</div><div class="line">    <span class="attr">"gauge.response.monitor.loggers"</span>: <span class="number">237.0</span>,</div><div class="line">    <span class="attr">"gauge.response.monitor.mappings"</span>: <span class="number">7.0</span>,</div><div class="line">    <span class="attr">"gauge.response.monitor.trace"</span>: <span class="number">8.0</span>,</div><div class="line">    <span class="attr">"gauge.response.star-star"</span>: <span class="number">12.0</span>,</div><div class="line">    <span class="attr">"gauge.response.star-star.favicon.ico"</span>: <span class="number">6.0</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>对<code>/metrics</code>接口提供的信息进行简单分类如下表：</p><table><thead><tr><th>分类</th><th>前缀</th><th>报告内容</th></tr></thead><tbody><tr><td>垃圾收集器</td><td>gc.<em></em></td><td>已经发生过的垃圾收集次数，以及垃圾收集所耗费的时间，适用于标记-清理垃圾收集器和并行垃圾收集器(数据源自java.lang.management. GarbageCollectorMXBean)</td></tr><tr><td>内存</td><td>mem.</td><td>分配给应用程序的内存数量和空闲的内存数量(数据源自java.lang. Runtime)</td></tr><tr><td>堆</td><td>heap.<em></em></td><td>当前内存用量(数据源自java.lang.management.MemoryUsage)</td></tr><tr><td>类加载器</td><td>classes.</td><td>JVM类加载器加载与卸载的类的数量(数据源自java.lang. management.ClassLoadingMXBean)</td></tr><tr><td>系统</td><td>processors、instance.uptime、uptime、systemload.average</td><td>系统信息，例如处理器数量(数据源自java.lang.Runtime)、运行时间(数据源自java.lang.management.RuntimeMXBean)、平均负载(数据源自java.lang.management.OperatingSystemMXBean)</td></tr><tr><td>线程池</td><td>thread.<em></em></td><td>线程、守护线程的数量，以及JVM启动后的线程数量峰值(数据源自 java.lang .management.ThreadMXBean)</td></tr><tr><td>数据源</td><td>datasource.</td><td>数据源连接的数量(源自数据源的元数据，仅当Spring应用程序上下文里存在 DataSource Bean 的时候才会有这个信息)</td></tr><tr><td>Tomcat 会话</td><td>httpsessions.*</td><td>Tomcat的活跃会话数和最大会话数(数据源自嵌入式Tomcat的Bean，仅在使用嵌入式Tomcat服务器运行应用程序时才有这个信息)</td></tr><tr><td>HTTP</td><td>counter.status.<em>、gauge.response.</em></td><td>多种应用程序服务HTTP请求的度量值与计数器</td></tr></tbody></table><p>HTTP的计数器和度量值需要做一点说明。<code>counter.status</code>后的值是HTTP状态码，随后是所请求的路径。举个例子，<code>counter.status.200.metrics</code> 表明<code>/metrics</code>端点返回 200(OK) 状态码的次数。</p><p>HTTP的度量信息在结构上也差不多，却在报告另一类信息。它们全部以<code>gauge.response</code>开头，表明这是HTTP响应的度量信息。前缀后是对应的路径。度量值是以毫秒为单位的时间，反映了最近处理该路径请求的耗时。</p><p>这里还有几个特殊的值需要注意。root路径指向的是根路径或<code>/</code>。<code>star-star</code>代表了那些Spring认为是静态资源的路径，包括图片、JavaScript和样式表，其中还包含了那些找不到的资源。这就是为什么你经常会看到<code>counter.status.404.star-star</code>，这是返回了<code>HTTP 404 (NOT FOUND)</code>状态的请求数。</p><p><code>/metrics</code>接口会返回所有的可用度量值，但你也可能只对某个值感兴趣。要获取单个值，请求时可以在URL后加上对应的键名。例如，要查看空闲内存大小,可以向<code>/metrics/mem.free</code>发一个GET请求。</p><h2 id="定制Actuator"><a href="#定制Actuator" class="headerlink" title="定制Actuator"></a>定制Actuator</h2><h3 id="修改接口ID"><a href="#修改接口ID" class="headerlink" title="修改接口ID"></a>修改接口ID</h3><p>每个Actuator接口都有一个ID用来决定接口的路径，比方说，<code>/beans</code>接口的默认ID就是beans。比如要修改<code>/beans</code>为 <code>/instances</code>，则设置如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attr">endpoints:</span></div><div class="line"><span class="attr">  beans:</span></div><div class="line"><span class="attr">    id:</span> <span class="string">instances</span></div></pre></td></tr></table></figure><p></p><h3 id="启用和禁用接口"><a href="#启用和禁用接口" class="headerlink" title="启用和禁用接口"></a>启用和禁用接口</h3><p>虽然Actuator的接口都很有用，但你不一定需要全部这些接口。默认情况下，所有接口（除了<code>/shutdown</code>）都启用。比如要禁用 <code>/metrics</code> 接口，则可以设置如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attr">endpoints:</span></div><div class="line"><span class="attr">  metrics:</span></div><div class="line"><span class="attr">    enabled:</span> <span class="literal">false</span></div></pre></td></tr></table></figure><p></p><p>如果你只想打开一两个接口，那就先禁用全部接口，然后启用那几个你要的，这样更方便。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">endpoints:</span></div><div class="line"><span class="attr">  enabled:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  metrics:</span></div><div class="line"><span class="attr">    enabled:</span> <span class="literal">true</span></div></pre></td></tr></table></figure><p></p><p>参考文章：<a href="https://www.jianshu.com/p/af9738634a21" target="_blank" rel="external">https://www.jianshu.com/p/af9738634a21</a>。</p><p>源码链接：<a href="https://github.com/wuyouzhuguli/Spring-Boot-Demos/tree/master/21.Spring-Boot-Actuator" target="_blank" rel="external">https://github.com/wuyouzhuguli/Spring-Boot-Demos/tree/master/21.Spring-Boot-Actuator</a>。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Jun 06 2018 16:37:34 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;我们都知道Spring Boot是一个用于快速开发Java Web的框架，不需要太多的配置即可使用Spring的大量功能。Spring Boot遵循着“约定大于配置”的原则，许多功能使用默认的配置即可。这样的做法好处在于我们不需要像使用Spring那样编写一大堆的XML配置代码，但过于简单的配置过程会让我们在了解各种依赖，配置之间的关系过程上带来一些困难。不过没关系，在Spring Boot中，我们可以使用Actuator来监控应用，Actuator提供了一系列的RESTful API让我们可以更为细致的了解各种信息。
    
    </summary>
    
    
      <category term="Spring Boot" scheme="http://mrbird.cc/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot整合Swagger2构建RESTful API</title>
    <link href="http://mrbird.cc/Spring-Boot-Swagger2-RESTful-API.html"/>
    <id>http://mrbird.cc/Spring-Boot-Swagger2-RESTful-API.html</id>
    <published>2018-03-14T01:51:07.000Z</published>
    <updated>2018-05-04T00:43:43.577Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Jun 06 2018 16:37:33 GMT+0800 (中国标准时间) --><p>Swagger是一款可以快速生成符合RESTful风格API并进行在线调试的插件。本文将介绍如何在Spring Boot中整合Swagger。</p><p>在此之前，我们先聊聊什么是<strong>REST</strong>。REST实际上为<strong>Re</strong>presentational <strong>S</strong>tate <strong>T</strong>ransfer的缩写，翻译为“表现层状态转化” 。如果一个架构符合REST 原则，就称它为<strong>RESTful</strong>架构。</p><p>实际上，“表现层状态转化”省略了主语，完整的说应该是“资源表现层状态转化”。什么是资源（Resource）？资源指的是网络中信息的表现形式，比如一段文本，一首歌，一个视频文件等等；什么是表现层（Reresentational）？表现层即资源的展现在你面前的形式，比如文本可以是JSON格式的，也可以是XML形式的，甚至为二进制形式的。图片可以是gif，也可以是PNG；什么是状态转换（State Transfer）？用户可使用URL通过HTTP协议来获取各种资源，HTTP协议包含了一些操作资源的方法，比如：GET 用来获取资源， POST 用来新建资源 , PUT 用来更新资源， DELETE 用来删除资源， PATCH 用来更新资源的部分属性。通过这些HTTP协议的方法来操作资源的过程即为状态转换。<a id="more"></a></p><h2 id="引入Swagger依赖"><a href="#引入Swagger依赖" class="headerlink" title="引入Swagger依赖"></a>引入Swagger依赖</h2><p>本文使用的Swagger版本为2.6.1：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure><p></p><h2 id="配置SwaggerConfig"><a href="#配置SwaggerConfig" class="headerlink" title="配置SwaggerConfig"></a>配置SwaggerConfig</h2><p>使用JavaConfig的形式配置Swagger：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</div><div class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</div><div class="line"></div><div class="line"><span class="keyword">import</span> springfox.documentation.builders.ApiInfoBuilder;</div><div class="line"><span class="keyword">import</span> springfox.documentation.builders.PathSelectors;</div><div class="line"><span class="keyword">import</span> springfox.documentation.builders.RequestHandlerSelectors;</div><div class="line"><span class="keyword">import</span> springfox.documentation.service.ApiInfo;</div><div class="line"><span class="keyword">import</span> springfox.documentation.service.Contact;</div><div class="line"><span class="keyword">import</span> springfox.documentation.spi.DocumentationType;</div><div class="line"><span class="keyword">import</span> springfox.documentation.spring.web.plugins.Docket;</div><div class="line"><span class="keyword">import</span> springfox.documentation.swagger2.annotations.EnableSwagger2;</div><div class="line"></div><div class="line"><span class="meta">@Configuration</span></div><div class="line"><span class="meta">@EnableSwagger</span>2</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwaggerConfig</span> </span>&#123;</div><div class="line">    <span class="meta">@Bean</span></div><div class="line">    <span class="function"><span class="keyword">public</span> Docket <span class="title">buildDocket</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2)</div><div class="line">            .apiInfo(buildApiInf())</div><div class="line">            .select()</div><div class="line">            .apis(RequestHandlerSelectors.basePackage(<span class="string">"com.example.demo.controller"</span>))</div><div class="line">            .paths(PathSelectors.any())</div><div class="line">            .build();</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">private</span> ApiInfo <span class="title">buildApiInf</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ApiInfoBuilder()</div><div class="line">            .title(<span class="string">"系统RESTful API文档"</span>)</div><div class="line">            .contact(<span class="keyword">new</span> Contact(<span class="string">"mrbird"</span>, <span class="string">"https://mrbird.cc"</span>, <span class="string">"852252810@qq.com"</span>))</div><div class="line">            .version(<span class="string">"1.0"</span>)</div><div class="line">            .build();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>在配置类中添加<code>@EnableSwagger2</code>注解来启用Swagger2，<code>apis()</code>定义了扫描的包路径。配置较为简单，其他不做过多说明。</p><h2 id="Swagger常用注解"><a href="#Swagger常用注解" class="headerlink" title="Swagger常用注解"></a>Swagger常用注解</h2><ul><li><p><code>@Api</code>：修饰整个类，描述Controller的作用；</p></li><li><p><code>@ApiOperation</code>：描述一个类的一个方法，或者说一个接口；</p></li><li><p><code>@ApiParam</code>：单个参数描述；</p></li><li><p><code>@ApiModel</code>：用对象来接收参数；</p></li><li><p><code>@ApiProperty</code>：用对象接收参数时，描述对象的一个字段；</p></li><li><p><code>@ApiResponse</code>：HTTP响应其中1个描述；</p></li><li><p><code>@ApiResponses</code>：HTTP响应整体描述；</p></li><li><p><code>@ApiIgnore</code>：使用该注解忽略这个API；</p></li><li><p><code>@ApiError</code> ：发生错误返回的信息；</p></li><li><p><code>@ApiImplicitParam</code>：一个请求参数；</p></li><li><p><code>@ApiImplicitParams</code>：多个请求参数。</p></li></ul><h2 id="编写RESTful-API接口"><a href="#编写RESTful-API接口" class="headerlink" title="编写RESTful API接口"></a>编写RESTful API接口</h2><p>Spring Boot中包含了一些注解，对应于HTTP协议中的方法：</p><ul><li><p><code>@GetMapping</code>对应HTTP中的<strong>GET</strong>方法；</p></li><li><p><code>@PostMapping</code>对应HTTP中的<strong>POST</strong>方法；</p></li><li><p><code>@PutMapping</code>对应HTTP中的<strong>PUT</strong>方法；</p></li><li><p><code>@DeleteMapping</code>对应HTTP中的<strong>DELETE</strong>方法；</p></li><li><p><code>@PatchMapping</code>对应HTTP中的<strong>PATCH</strong>方法。</p></li></ul><p>我们使用这些注解来编写一个RESTful测试Controller：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.util.ArrayList;</div><div class="line"><span class="keyword">import</span> java.util.HashMap;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"><span class="keyword">import</span> java.util.Map;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.DeleteMapping;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PutMapping;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.example.demo.domain.User;</div><div class="line"></div><div class="line"><span class="keyword">import</span> io.swagger.annotations.Api;</div><div class="line"><span class="keyword">import</span> io.swagger.annotations.ApiImplicitParam;</div><div class="line"><span class="keyword">import</span> io.swagger.annotations.ApiImplicitParams;</div><div class="line"><span class="keyword">import</span> io.swagger.annotations.ApiOperation;</div><div class="line"><span class="keyword">import</span> springfox.documentation.annotations.ApiIgnore;</div><div class="line"></div><div class="line"><span class="meta">@Api</span>(value = <span class="string">"用户Controller"</span>)</div><div class="line"><span class="meta">@Controller</span></div><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"user"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@ApiIgnore</span></div><div class="line">    <span class="meta">@GetMapping</span>(<span class="string">"hello"</span>)</div><div class="line">    <span class="keyword">public</span> <span class="meta">@ResponseBody</span> <span class="function">String <span class="title">hello</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">"hello"</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@ApiOperation</span>(value = <span class="string">"获取用户信息"</span>, notes = <span class="string">"根据用户id获取用户信息"</span>)</div><div class="line">    <span class="meta">@ApiImplicitParam</span>(name = <span class="string">"id"</span>, value = <span class="string">"用户id"</span>, required = <span class="keyword">true</span>, dataType = <span class="string">"Long"</span>, paramType = <span class="string">"path"</span>)</div><div class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/&#123;id&#125;"</span>)</div><div class="line">    <span class="keyword">public</span> <span class="meta">@ResponseBody</span> <span class="function">User <span class="title">getUserById</span><span class="params">(@PathVariable(value = <span class="string">"id"</span>)</span> Long id) </span>&#123;</div><div class="line">        User user = <span class="keyword">new</span> User();</div><div class="line">        user.setId(id);</div><div class="line">        user.setName(<span class="string">"mrbird"</span>);</div><div class="line">        user.setAge(<span class="number">25</span>);</div><div class="line">        <span class="keyword">return</span> user;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@ApiOperation</span>(value = <span class="string">"获取用户列表"</span>, notes = <span class="string">"获取用户列表"</span>)</div><div class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/list"</span>)</div><div class="line">    <span class="keyword">public</span> <span class="meta">@ResponseBody</span> <span class="function">List&lt;User&gt; <span class="title">getUserList</span><span class="params">()</span> </span>&#123;</div><div class="line">        List&lt;User&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">        User user1 = <span class="keyword">new</span> User();</div><div class="line">        user1.setId(<span class="number">1l</span>);</div><div class="line">        user1.setName(<span class="string">"mrbird"</span>);</div><div class="line">        user1.setAge(<span class="number">25</span>);</div><div class="line">        list.add(user1);</div><div class="line">        User user2 = <span class="keyword">new</span> User();</div><div class="line">        user2.setId(<span class="number">2l</span>);</div><div class="line">        user2.setName(<span class="string">"scott"</span>);</div><div class="line">        user2.setAge(<span class="number">29</span>);</div><div class="line">        list.add(user2);</div><div class="line">        <span class="keyword">return</span> list;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@ApiOperation</span>(value = <span class="string">"新增用户"</span>, notes = <span class="string">"根据用户实体创建用户"</span>)</div><div class="line">    <span class="meta">@ApiImplicitParam</span>(name = <span class="string">"user"</span>, value = <span class="string">"用户实体"</span>, required = <span class="keyword">true</span>, dataType = <span class="string">"User"</span>)</div><div class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/add"</span>)</div><div class="line">    <span class="keyword">public</span> <span class="meta">@ResponseBody</span> <span class="function">Map&lt;String, Object&gt; <span class="title">addUser</span><span class="params">(@RequestBody User user)</span> </span>&#123;</div><div class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</div><div class="line">        map.put(<span class="string">"result"</span>, <span class="string">"success"</span>);</div><div class="line">        <span class="keyword">return</span> map;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@ApiOperation</span>(value = <span class="string">"删除用户"</span>, notes = <span class="string">"根据用户id删除用户"</span>)</div><div class="line">    <span class="meta">@ApiImplicitParam</span>(name = <span class="string">"id"</span>, value = <span class="string">"用户id"</span>, required = <span class="keyword">true</span>, dataType = <span class="string">"Long"</span>, paramType = <span class="string">"path"</span>)</div><div class="line">    <span class="meta">@DeleteMapping</span>(<span class="string">"/&#123;id&#125;"</span>)</div><div class="line">    <span class="keyword">public</span> <span class="meta">@ResponseBody</span> <span class="function">Map&lt;String, Object&gt; <span class="title">deleteUser</span><span class="params">(@PathVariable(value = <span class="string">"id"</span>)</span> Long id) </span>&#123;</div><div class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</div><div class="line">        map.put(<span class="string">"result"</span>, <span class="string">"success"</span>);</div><div class="line">        <span class="keyword">return</span> map;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@ApiOperation</span>(value = <span class="string">"更新用户"</span>, notes = <span class="string">"根据用户id更新用户"</span>)</div><div class="line">    <span class="meta">@ApiImplicitParams</span>(&#123;</div><div class="line">        <span class="meta">@ApiImplicitParam</span>(name = <span class="string">"id"</span>, value = <span class="string">"用户id"</span>, required = <span class="keyword">true</span>, dataType = <span class="string">"Long"</span>, paramType = <span class="string">"path"</span>),</div><div class="line">        <span class="meta">@ApiImplicitParam</span>(name = <span class="string">"user"</span>, value = <span class="string">"用户实体"</span>, required = <span class="keyword">true</span>, dataType = <span class="string">"User"</span>) &#125;)</div><div class="line">    <span class="meta">@PutMapping</span>(<span class="string">"/&#123;id&#125;"</span>)</div><div class="line">    <span class="keyword">public</span> <span class="meta">@ResponseBody</span> <span class="function">Map&lt;String, Object&gt; <span class="title">updateUser</span><span class="params">(@PathVariable(value = <span class="string">"id"</span>)</span> Long id, @RequestBody User user) </span>&#123;</div><div class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</div><div class="line">        map.put(<span class="string">"result"</span>, <span class="string">"success"</span>);</div><div class="line">        <span class="keyword">return</span> map;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>对于不需要生成API的方法或者类，只需要在上面添加<code>@ApiIgnore</code>注解即可。</p><h2 id="启动-amp-测试"><a href="#启动-amp-测试" class="headerlink" title="启动&amp;测试"></a>启动&amp;测试</h2><p>启动项目，访问<a href="http://localhost:8080/swagger-ui.html" target="_blank" rel="external">http://localhost:8080/swagger-ui.html</a>即可看到Swagger给我们生成的API页面：</p><p><img src="img/QQ截图20180503181941.png" alt="QQ截图20180503181941.png"></p><p>点击接口下的“Try it out”Swagger会用<code>curl</code>命令发送请求，并且返回响应信息，如下所示:</p><p><img src="img/QQ截图20180503182415.png" alt="QQ截图20180503182415.png"></p><p>源码链接：<a href="https://github.com/wuyouzhuguli/Spring-Boot-Demos/tree/master/20.Spring-Boot-Swagger2" target="_blank" rel="external">https://github.com/wuyouzhuguli/Spring-Boot-Demos/tree/master/20.Spring-Boot-Swagger2</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Jun 06 2018 16:37:33 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;Swagger是一款可以快速生成符合RESTful风格API并进行在线调试的插件。本文将介绍如何在Spring Boot中整合Swagger。&lt;/p&gt;&lt;p&gt;在此之前，我们先聊聊什么是&lt;strong&gt;REST&lt;/strong&gt;。REST实际上为&lt;strong&gt;Re&lt;/strong&gt;presentational &lt;strong&gt;S&lt;/strong&gt;tate &lt;strong&gt;T&lt;/strong&gt;ransfer的缩写，翻译为“表现层状态转化” 。如果一个架构符合REST 原则，就称它为&lt;strong&gt;RESTful&lt;/strong&gt;架构。&lt;/p&gt;&lt;p&gt;实际上，“表现层状态转化”省略了主语，完整的说应该是“资源表现层状态转化”。什么是资源（Resource）？资源指的是网络中信息的表现形式，比如一段文本，一首歌，一个视频文件等等；什么是表现层（Reresentational）？表现层即资源的展现在你面前的形式，比如文本可以是JSON格式的，也可以是XML形式的，甚至为二进制形式的。图片可以是gif，也可以是PNG；什么是状态转换（State Transfer）？用户可使用URL通过HTTP协议来获取各种资源，HTTP协议包含了一些操作资源的方法，比如：GET 用来获取资源， POST 用来新建资源 , PUT 用来更新资源， DELETE 用来删除资源， PATCH 用来更新资源的部分属性。通过这些HTTP协议的方法来操作资源的过程即为状态转换。
    
    </summary>
    
    
      <category term="Spring Boot" scheme="http://mrbird.cc/tags/Spring-Boot/"/>
    
      <category term="Swagger" scheme="http://mrbird.cc/tags/Swagger/"/>
    
      <category term="RESTful" scheme="http://mrbird.cc/tags/RESTful/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot中编写单元测试</title>
    <link href="http://mrbird.cc/Spring-Boot%20TESTing.html"/>
    <id>http://mrbird.cc/Spring-Boot TESTing.html</id>
    <published>2018-03-10T07:11:57.000Z</published>
    <updated>2018-05-03T00:55:22.983Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Jun 06 2018 16:37:32 GMT+0800 (中国标准时间) --><p>编写单元测试可以帮助开发人员编写高质量的代码，提升代码质量，减少Bug，便于重构。Spring Boot提供了一些实用程序和注解，用来帮助我们测试应用程序，在Spring Boot中开启单元测试只需引入<code>spring-boot-starter-test</code>即可，其包含了一些主流的测试库。本文主要介绍基于 Service和Controller的单元测试。<a id="more"></a></p><p>引入<code>spring-boot-starter-test</code>：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>运行Maven命令<code>dependency:tree</code>可看到其包含了以下依赖：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">[INFO] +- org.springframework.boot:spring-boot-starter-test:jar:1.5.9.RELEASE:test</div><div class="line">[INFO] |  +- org.springframework.boot:spring-boot-test:jar:1.5.9.RELEASE:test</div><div class="line">[INFO] |  +- org.springframework.boot:spring-boot-test-autoconfigure:jar:1.5.9.RELEASE:test</div><div class="line">[INFO] |  +- com.jayway.jsonpath:json-path:jar:2.2.0:test</div><div class="line">[INFO] |  |  +- net.minidev:json-smart:jar:2.2.1:test</div><div class="line">[INFO] |  |  |  \- net.minidev:accessors-smart:jar:1.1:test</div><div class="line">[INFO] |  |  |     \- org.ow2.asm:asm:jar:5.0.3:test</div><div class="line">[INFO] |  |  \- org.slf4j:slf4j-api:jar:1.7.25:compile</div><div class="line">[INFO] |  +- junit:junit:jar:4.12:test</div><div class="line">[INFO] |  +- org.assertj:assertj-core:jar:2.6.0:test</div><div class="line">[INFO] |  +- org.mockito:mockito-core:jar:1.10.19:test</div><div class="line">[INFO] |  |  \- org.objenesis:objenesis:jar:2.1:test</div><div class="line">[INFO] |  +- org.hamcrest:hamcrest-core:jar:1.3:test</div><div class="line">[INFO] |  +- org.hamcrest:hamcrest-library:jar:1.3:test</div><div class="line">[INFO] |  +- org.skyscreamer:jsonassert:jar:1.4.0:test</div><div class="line">[INFO] |  |  \- com.vaadin.external.google:android-json:jar:0.0.20131108.vaadin1:test</div><div class="line">[INFO] |  +- org.springframework:spring-core:jar:4.3.13.RELEASE:compile</div><div class="line">[INFO] |  \- org.springframework:spring-test:jar:4.3.13.RELEASE:test</div></pre></td></tr></table></figure><p></p><ul><li><p>JUnit，标准的单元测试Java应用程序；</p></li><li><p>Spring Test &amp; Spring Boot Test，对Spring Boot应用程序的单元测试提供支持；</p></li><li><p>Mockito, Java mocking框架，用于模拟任何Spring管理的Bean，比如在单元测试中模拟一个第三方系统Service接口返回的数据，而不会去真正调用第三方系统；</p></li><li><p>AssertJ，一个流畅的assertion库，同时也提供了更多的期望值与测试返回值的比较方式；</p></li><li><p>Hamcrest，库的匹配对象（也称为约束或谓词）；</p></li><li><p>JsonPath，提供类似XPath那样的符号来获取JSON数据片段；</p></li><li><p>JSONassert，对JSON对象或者JSON字符串断言的库。</p></li></ul><p>一个标准的Spring Boot测试单元应有如下的代码结构：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</div><div class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</div><div class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</div><div class="line"></div><div class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</div><div class="line"><span class="meta">@SpringBootTest</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApplicationTest</span> </span>&#123;</div><div class="line">	</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><h2 id="知识准备"><a href="#知识准备" class="headerlink" title="知识准备"></a>知识准备</h2><h3 id="JUnit4注解"><a href="#JUnit4注解" class="headerlink" title="JUnit4注解"></a>JUnit4注解</h3><p>JUnit4中包含了几个比较重要的注解：<code>@BeforeClass</code>、<code>@AfterClass</code>、<code>@Before</code>、<code>@After</code>和<code>@Test</code>。其中， <code>@BeforeClass</code>和<code>@AfterClass</code>在每个类加载的开始和结束时运行，必须为静态方法；而<code>@Before</code>和<code>@After</code>则在每个测试方法开始之前和结束之后运行。见如下例子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</div><div class="line"><span class="meta">@SpringBootTest</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestApplicationTests</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@BeforeClass</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">beforeClassTest</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"before class test"</span>);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Before</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">beforeTest</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"before test"</span>);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Test</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Test1</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"test 1+1=2"</span>);</div><div class="line">        Assert.assertEquals(<span class="number">2</span>, <span class="number">1</span> + <span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Test</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Test2</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"test 2+2=4"</span>);</div><div class="line">        Assert.assertEquals(<span class="number">4</span>, <span class="number">2</span> + <span class="number">2</span>);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@After</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterTest</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"after test"</span>);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@AfterClass</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">afterClassTest</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"after class test"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>运行输出如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line">before class test</div><div class="line">before test</div><div class="line">test 1+1=2</div><div class="line">after test</div><div class="line">before test</div><div class="line">test 2+2=4</div><div class="line">after test</div><div class="line">after class test</div><div class="line">...</div></pre></td></tr></table></figure><p></p><p>从上面的输出可以看出各个注解的运行时机。</p><h3 id="Assert"><a href="#Assert" class="headerlink" title="Assert"></a>Assert</h3><p>上面代码中，我们使用了Assert类提供的assert口方法，下面列出了一些常用的assert方法：</p><ul><li><p><code>assertEquals(&quot;message&quot;,A,B)</code>，判断A对象和B对象是否相等，这个判断在比较两个对象时调用了<code>equals()</code>方法。</p></li><li><p><code>assertSame(&quot;message&quot;,A,B)</code>，判断A对象与B对象是否相同，使用的是<code>==</code>操作符。</p></li><li><p><code>assertTrue(&quot;message&quot;,A)</code>，判断A条件是否为真。</p></li><li><p><code>assertFalse(&quot;message&quot;,A)</code>，判断A条件是否不为真。</p></li><li><p><code>assertNotNull(&quot;message&quot;,A)</code>，判断A对象是否不为<code>null</code>。</p></li><li><p><code>assertArrayEquals(&quot;message&quot;,A,B)</code>，判断A数组与B数组是否相等。</p></li></ul><h3 id="MockMvc"><a href="#MockMvc" class="headerlink" title="MockMvc"></a>MockMvc</h3><p>下文中，对Controller的测试需要用到MockMvc技术。MockMvc，从字面上来看指的是模拟的MVC，即其可以模拟一个MVC环境，向Controller发送请求然后得到响应。</p><p>在单元测试中，使用MockMvc前需要进行初始化，如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> MockMvc mockMvc;</div><div class="line"></div><div class="line"><span class="meta">@Autowired</span></div><div class="line"><span class="keyword">private</span> WebApplicationContext wac;</div><div class="line"></div><div class="line"><span class="meta">@Before</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setupMockMvc</span><span class="params">()</span></span>&#123;</div><div class="line">    mockMvc = MockMvcBuilders.webAppContextSetup(wac).build();</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p><strong>MockMvc模拟MVC请求</strong></p><p>模拟一个get请求：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mockMvc.perform(MockMvcRequestBuilders.get(<span class="string">"/hello?name=&#123;name&#125;"</span>,<span class="string">"mrbird"</span>));</div></pre></td></tr></table></figure><p></p><p>模拟一个post请求：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mockMvc.perform(MockMvcRequestBuilders.post(<span class="string">"/user/&#123;id&#125;"</span>, <span class="number">1</span>));</div></pre></td></tr></table></figure><p></p><p>模拟文件上传：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mockMvc.perform(MockMvcRequestBuilders.fileUpload(<span class="string">"/fileupload"</span>).file(<span class="string">"file"</span>, <span class="string">"文件内容"</span>.getBytes(<span class="string">"utf-8"</span>)));</div></pre></td></tr></table></figure><p></p><p>模拟请求参数：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 模拟发送一个message参数，值为hello</span></div><div class="line">mockMvc.perform(MockMvcRequestBuilders.get(<span class="string">"/hello"</span>).param(<span class="string">"message"</span>, <span class="string">"hello"</span>));</div><div class="line"><span class="comment">// 模拟提交一个checkbox值，name为hobby，值为sleep和eat</span></div><div class="line">mockMvc.perform(MockMvcRequestBuilders.get(<span class="string">"/saveHobby"</span>).param(<span class="string">"hobby"</span>, <span class="string">"sleep"</span>, <span class="string">"eat"</span>));</div></pre></td></tr></table></figure><p></p><p>也可以直接使用<code>MultiValueMap</code>构建参数：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">MultiValueMap&lt;String, String&gt; params = <span class="keyword">new</span> LinkedMultiValueMap&lt;String, String&gt;();</div><div class="line">params.add(<span class="string">"name"</span>, <span class="string">"mrbird"</span>);</div><div class="line">params.add(<span class="string">"hobby"</span>, <span class="string">"sleep"</span>);</div><div class="line">params.add(<span class="string">"hobby"</span>, <span class="string">"eat"</span>);</div><div class="line">mockMvc.perform(MockMvcRequestBuilders.get(<span class="string">"/hobby/save"</span>).params(params));</div></pre></td></tr></table></figure><p></p><p>模拟发送JSON参数：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">String jsonStr = <span class="string">"&#123;\"username\":\"Dopa\",\"passwd\":\"ac3af72d9f95161a502fd326865c2f15\",\"status\":\"1\"&#125;"</span>;</div><div class="line">mockMvc.perform(MockMvcRequestBuilders.post(<span class="string">"/user/save"</span>).content(jsonStr.getBytes()));</div></pre></td></tr></table></figure><p></p><p>实际测试中，要手动编写这么长的JSON格式字符串很繁琐也很容易出错，可以借助Spring Boot自带的Jackson技术来序列化一个Java对象（可参考<a href="/Spring-Boot中的JSON技术.html">Spring Boot中的JSON技术</a>），如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">User user = <span class="keyword">new</span> User();</div><div class="line">user.setUsername(<span class="string">"Dopa"</span>);</div><div class="line">user.setPasswd(<span class="string">"ac3af72d9f95161a502fd326865c2f15"</span>);</div><div class="line">user.setStatus(<span class="string">"1"</span>);</div><div class="line"></div><div class="line">String userJson = mapper.writeValueAsString(user);</div><div class="line">mockMvc.perform(MockMvcRequestBuilders.post(<span class="string">"/user/save"</span>).content(userJson.getBytes()));</div></pre></td></tr></table></figure><p></p><p>其中，mapper为<code>com.fasterxml.jackson.databind.ObjectMapper</code>对象。</p><p>模拟Session和Cookie：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mockMvc.perform(MockMvcRequestBuilders.get(<span class="string">"/index"</span>).sessionAttr(name, value));</div><div class="line">mockMvc.perform(MockMvcRequestBuilders.get(<span class="string">"/index"</span>).cookie(<span class="keyword">new</span> Cookie(name, value)));</div></pre></td></tr></table></figure><p></p><p>设置请求的Content-Type：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mockMvc.perform(MockMvcRequestBuilders.get(<span class="string">"/index"</span>).contentType(MediaType.APPLICATION_JSON_UTF8));</div></pre></td></tr></table></figure><p></p><p>设置返回格式为JSON：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mockMvc.perform(MockMvcRequestBuilders.get(<span class="string">"/user/&#123;id&#125;"</span>, <span class="number">1</span>).accept(MediaType.APPLICATION_JSON));</div></pre></td></tr></table></figure><p></p><p>模拟HTTP请求头：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mockMvc.perform(MockMvcRequestBuilders.get(<span class="string">"/user/&#123;id&#125;"</span>, <span class="number">1</span>).header(name, values));</div></pre></td></tr></table></figure><p></p><p><strong>MockMvc处理返回结果</strong></p><p>期望成功调用，即HTTP Status为200：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mockMvc.perform(MockMvcRequestBuilders.get(<span class="string">"/user/&#123;id&#125;"</span>, <span class="number">1</span>))</div><div class="line">    .andExpect(MockMvcResultMatchers.status().isOk());</div></pre></td></tr></table></figure><p></p><p>期望返回内容是<code>application/json</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mockMvc.perform(MockMvcRequestBuilders.get(<span class="string">"/user/&#123;id&#125;"</span>, <span class="number">1</span>))</div><div class="line">    .andExpect(MockMvcResultMatchers.content().contentType(MediaType.APPLICATION_JSON));</div></pre></td></tr></table></figure><p></p><p>检查返回JSON数据中某个值的内容：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mockMvc.perform(MockMvcRequestBuilders.get(<span class="string">"/user/&#123;id&#125;"</span>, <span class="number">1</span>))</div><div class="line">    .andExpect(MockMvcResultMatchers.jsonPath(<span class="string">"$.username"</span>).value(<span class="string">"mrbird"</span>));</div></pre></td></tr></table></figure><p></p><p>这里使用到了<code>jsonPath</code>，<code>$</code>代表了JSON的根节点。更多关于<code>jsonPath</code>的介绍可参考 <a href="https://github.com/json-path/JsonPath" target="_blank" rel="external">https://github.com/json-path/JsonPath</a>。</p><p>判断Controller方法是否返回某视图：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mockMvc.perform(MockMvcRequestBuilders.post(<span class="string">"/index"</span>))</div><div class="line">    .andExpect(MockMvcResultMatchers.view().name(<span class="string">"index.html"</span>));</div></pre></td></tr></table></figure><p></p><p>比较Model：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">mockMvc.perform(MockMvcRequestBuilders.get(<span class="string">"/user/&#123;id&#125;"</span>, <span class="number">1</span>))</div><div class="line">    .andExpect(MockMvcResultMatchers.model().size(<span class="number">1</span>))</div><div class="line">    .andExpect(MockMvcResultMatchers.model().attributeExists(<span class="string">"password"</span>))</div><div class="line">    .andExpect(MockMvcResultMatchers.model().attribute(<span class="string">"username"</span>, <span class="string">"mrbird"</span>));</div></pre></td></tr></table></figure><p></p><p>比较forward或者redirect：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">mockMvc.perform(MockMvcRequestBuilders.get(<span class="string">"/index"</span>))</div><div class="line">    .andExpect(MockMvcResultMatchers.forwardedUrl(<span class="string">"index.html"</span>));</div><div class="line"><span class="comment">// 或者</span></div><div class="line">mockMvc.perform(MockMvcRequestBuilders.get(<span class="string">"/index"</span>))</div><div class="line">    .andExpect(MockMvcResultMatchers.redirectedUrl(<span class="string">"index.html"</span>));</div></pre></td></tr></table></figure><p></p><p>比较返回内容，使用<code>content()</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 返回内容为hello</span></div><div class="line">mockMvc.perform(MockMvcRequestBuilders.get(<span class="string">"/index"</span>))</div><div class="line">    .andExpect(MockMvcResultMatchers.content().string(<span class="string">"hello"</span>));</div><div class="line"></div><div class="line"><span class="comment">// 返回内容是XML，并且与xmlCotent一样</span></div><div class="line">mockMvc.perform(MockMvcRequestBuilders.get(<span class="string">"/index"</span>))</div><div class="line">    .andExpect(MockMvcResultMatchers.content().xml(xmlContent));</div><div class="line"></div><div class="line"><span class="comment">// 返回内容是JSON ，并且与jsonContent一样</span></div><div class="line">mockMvc.perform(MockMvcRequestBuilders.get(<span class="string">"/index"</span>))</div><div class="line">    .andExpect(MockMvcResultMatchers.content().json(jsonContent));</div></pre></td></tr></table></figure><p></p><p>输出响应结果：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mockMvc.perform(MockMvcRequestBuilders.get(<span class="string">"/index"</span>))</div><div class="line">    .andDo(MockMvcResultHandlers.print());</div></pre></td></tr></table></figure><p></p><h2 id="测试Service"><a href="#测试Service" class="headerlink" title="测试Service"></a>测试Service</h2><p>现有如下Service：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Repository</span>(<span class="string">"userService"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">extends</span> <span class="title">BaseService</span>&lt;<span class="title">User</span>&gt; <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findByName</span><span class="params">(String userName)</span> </span>&#123;</div><div class="line">        Example example = <span class="keyword">new</span> Example(User.class);</div><div class="line">        example.createCriteria().andCondition(<span class="string">"username="</span>, userName);</div><div class="line">        List&lt;User&gt; userList = <span class="keyword">this</span>.selectByExample(example);</div><div class="line">        <span class="keyword">if</span> (userList.size() != <span class="number">0</span>)</div><div class="line">            <span class="keyword">return</span> userList.get(<span class="number">0</span>);</div><div class="line">        <span class="keyword">else</span></div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>编写一个该Service的单元测试，测试<code>findByName</code>方法是否有效：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</div><div class="line"><span class="meta">@SpringBootTest</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceTest</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    UserService userService;</div><div class="line"></div><div class="line">    <span class="meta">@Test</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</div><div class="line">        User user = <span class="keyword">this</span>.userService.findByName(<span class="string">"scott"</span>);</div><div class="line">        Assert.assertEquals(<span class="string">"用户名为scott"</span>, <span class="string">"scott"</span>, user.getUsername());</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>运行后，JUnit没有报错说明测试通过，即<code>UserService</code>的<code>findByName</code>方法可行。 <img src="img/QQ截图20180403172817.png" alt="QQ截图20180403172817.png"></p><p>此外，和在Controller中引用Service相比，在测试单元中对Service测试完毕后，数据能自动回滚，只需要在测试方法上加上<code>@Transactional</code>注解，比如:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="meta">@Transactional</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</div><div class="line">    User user = <span class="keyword">new</span> User();</div><div class="line">    user.setId(<span class="keyword">this</span>.userService.getSequence(<span class="string">"seq_user"</span>));</div><div class="line">    user.setUsername(<span class="string">"JUnit"</span>);</div><div class="line">    user.setPasswd(<span class="string">"123456"</span>);</div><div class="line">    user.setStatus(<span class="string">"1"</span>);</div><div class="line">    user.setCreateTime(<span class="keyword">new</span> Date());</div><div class="line">    <span class="keyword">this</span>.userService.save(user);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>运行，测试通过，查看数据库发现数据并没有被插入，这样很好的避免了不必要的数据污染。</p><h2 id="测试Controller"><a href="#测试Controller" class="headerlink" title="测试Controller"></a>测试Controller</h2><p>现有如下Controller：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RestController</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    UserService userService;</div><div class="line"></div><div class="line">    <span class="meta">@GetMapping</span>(<span class="string">"user/&#123;userName&#125;"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUserByName</span><span class="params">(@PathVariable(value = <span class="string">"userName"</span>)</span> String userName) </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.userService.findByName(userName);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@PostMapping</span>(<span class="string">"user/save"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveUser</span><span class="params">(@RequestBody User user)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.userService.saveUser(user);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>现在编写一个针对于该Controller<code>getUserByName(@PathVariable(value = &quot;userName&quot;) String userName)</code>方法的测试类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</div><div class="line"><span class="meta">@SpringBootTest</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserControllerTest</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> MockMvc mockMvc;</div><div class="line">    </div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> WebApplicationContext wac;</div><div class="line">    </div><div class="line">    <span class="meta">@Before</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setupMockMvc</span><span class="params">()</span></span>&#123;</div><div class="line">        mockMvc = MockMvcBuilders.webAppContextSetup(wac).build();</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Test</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        mockMvc.perform(</div><div class="line">            MockMvcRequestBuilders.get(<span class="string">"/user/&#123;userName&#125;"</span>, <span class="string">"scott"</span>)</div><div class="line">            .contentType(MediaType.APPLICATION_JSON_UTF8))</div><div class="line">        .andExpect(MockMvcResultMatchers.status().isOk())</div><div class="line">        .andExpect(MockMvcResultMatchers.jsonPath(<span class="string">"$.username"</span>).value(<span class="string">"scott"</span>))</div><div class="line">        .andDo(MockMvcResultHandlers.print());</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>运行后，JUnit通过，控制台输出过程如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">MockHttpServletRequest:</div><div class="line">      HTTP Method = GET</div><div class="line">      Request URI = /user/scott</div><div class="line">       Parameters = &#123;&#125;</div><div class="line">          Headers = &#123;Content-Type=[application/json;charset=UTF-8]&#125;</div><div class="line"></div><div class="line">Handler:</div><div class="line">             Type = demo.springboot.test.controller.UserController</div><div class="line">           Method = public demo.springboot.test.domain.User demo.springboot.test.controller.UserController.getUserByName(java.lang.String)</div><div class="line"></div><div class="line">Async:</div><div class="line">    Async started = false</div><div class="line">     Async result = null</div><div class="line"></div><div class="line">Resolved Exception:</div><div class="line">             Type = null</div><div class="line"></div><div class="line">ModelAndView:</div><div class="line">        View name = null</div><div class="line">             View = null</div><div class="line">            Model = null</div><div class="line"></div><div class="line">FlashMap:</div><div class="line">       Attributes = null</div><div class="line"></div><div class="line">MockHttpServletResponse:</div><div class="line">           Status = 200</div><div class="line">    Error message = null</div><div class="line">          Headers = &#123;Content-Type=[application/json;charset=UTF-8]&#125;</div><div class="line">     Content type = application/json;charset=UTF-8</div><div class="line">             Body = &#123;&quot;id&quot;:23,&quot;username&quot;:&quot;scott&quot;,&quot;passwd&quot;:&quot;ac3af72d9f95161a502fd326865c2f15&quot;,&quot;createTime&quot;:1514535399000,&quot;status&quot;:&quot;1&quot;&#125;</div><div class="line">    Forwarded URL = null</div><div class="line">   Redirected URL = null</div><div class="line">          Cookies = []</div></pre></td></tr></table></figure><p></p><p>继续编写一个针对于该Controller<code>saveUser(@RequestBody User user)</code>方法的测试类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</div><div class="line"><span class="meta">@SpringBootTest</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserControllerTest</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> MockMvc mockMvc;</div><div class="line">    </div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> WebApplicationContext wac;</div><div class="line">    </div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    ObjectMapper mapper;</div><div class="line">    </div><div class="line">    </div><div class="line">    <span class="meta">@Before</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setupMockMvc</span><span class="params">()</span></span>&#123;</div><div class="line">        mockMvc = MockMvcBuilders.webAppContextSetup(wac).build();</div><div class="line">    &#125;</div><div class="line">	</div><div class="line">    <span class="meta">@Test</span></div><div class="line">    <span class="meta">@Transactional</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        User user = <span class="keyword">new</span> User();</div><div class="line">        user.setUsername(<span class="string">"Dopa"</span>);</div><div class="line">        user.setPasswd(<span class="string">"ac3af72d9f95161a502fd326865c2f15"</span>);</div><div class="line">        user.setStatus(<span class="string">"1"</span>);</div><div class="line">        </div><div class="line">        String userJson = mapper.writeValueAsString(user);</div><div class="line">        mockMvc.perform(</div><div class="line">            MockMvcRequestBuilders.post(<span class="string">"/user/save"</span>)</div><div class="line">            .contentType(MediaType.APPLICATION_JSON_UTF8)</div><div class="line">            .content(userJson.getBytes()))</div><div class="line">        .andExpect(MockMvcResultMatchers.status().isOk())</div><div class="line">        .andDo(MockMvcResultHandlers.print());</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>运行过程如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">MockHttpServletRequest:</div><div class="line">      HTTP Method = POST</div><div class="line">      Request URI = /user/save</div><div class="line">       Parameters = &#123;&#125;</div><div class="line">          Headers = &#123;Content-Type=[application/json;charset=UTF-8]&#125;</div><div class="line"></div><div class="line">Handler:</div><div class="line">             Type = demo.springboot.test.controller.UserController</div><div class="line">           Method = public void demo.springboot.test.controller.UserController.saveUser(demo.springboot.test.domain.User)</div><div class="line"></div><div class="line">Async:</div><div class="line">    Async started = false</div><div class="line">     Async result = null</div><div class="line"></div><div class="line">Resolved Exception:</div><div class="line">             Type = null</div><div class="line"></div><div class="line">ModelAndView:</div><div class="line">        View name = null</div><div class="line">             View = null</div><div class="line">            Model = null</div><div class="line"></div><div class="line">FlashMap:</div><div class="line">       Attributes = null</div><div class="line"></div><div class="line">MockHttpServletResponse:</div><div class="line">           Status = 200</div><div class="line">    Error message = null</div><div class="line">          Headers = &#123;&#125;</div><div class="line">     Content type = null</div><div class="line">             Body = </div><div class="line">    Forwarded URL = null</div><div class="line">   Redirected URL = null</div><div class="line">          Cookies = []</div></pre></td></tr></table></figure><p></p><p>值得注意的是，在一个完整的系统中编写测试单元时，可能需要模拟一个登录用户信息Session，MockMvc也提供了解决方案，可在初始化的时候模拟一个HttpSession：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> MockMvc mockMvc;</div><div class="line"><span class="keyword">private</span> MockHttpSession session;</div><div class="line"></div><div class="line"><span class="meta">@Autowired</span></div><div class="line"><span class="keyword">private</span> WebApplicationContext wac;</div><div class="line"></div><div class="line"><span class="meta">@Before</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setupMockMvc</span><span class="params">()</span></span>&#123;</div><div class="line">    mockMvc = MockMvcBuilders.webAppContextSetup(wac).build();</div><div class="line">    session = <span class="keyword">new</span> MockHttpSession();</div><div class="line">    User user =<span class="keyword">new</span> User();</div><div class="line">    user.setUsername(<span class="string">"Dopa"</span>);</div><div class="line">    user.setPasswd(<span class="string">"ac3af72d9f95161a502fd326865c2f15"</span>);</div><div class="line">    session.setAttribute(<span class="string">"user"</span>, user); </div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>源码链接：<a href="https://github.com/wuyouzhuguli/Spring-Boot-Demos/tree/master/19.Spring-Boot-Testing" target="_blank" rel="external">https://github.com/wuyouzhuguli/Spring-Boot-Demos/tree/master/19.Spring-Boot-Testing</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Jun 06 2018 16:37:32 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;编写单元测试可以帮助开发人员编写高质量的代码，提升代码质量，减少Bug，便于重构。Spring Boot提供了一些实用程序和注解，用来帮助我们测试应用程序，在Spring Boot中开启单元测试只需引入&lt;code&gt;spring-boot-starter-test&lt;/code&gt;即可，其包含了一些主流的测试库。本文主要介绍基于 Service和Controller的单元测试。
    
    </summary>
    
    
      <category term="Spring Boot" scheme="http://mrbird.cc/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot中的JSON技术</title>
    <link href="http://mrbird.cc/Spring-Boot%20JSON.html"/>
    <id>http://mrbird.cc/Spring-Boot JSON.html</id>
    <published>2018-03-05T01:43:56.000Z</published>
    <updated>2018-05-03T00:55:00.653Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Jun 06 2018 16:37:32 GMT+0800 (中国标准时间) --><p>平日里在项目中处理JSON一般用的都是阿里巴巴的Fastjson，后来发现使用Spring Boot内置的Jackson来完成JSON的序列化和反序列化操作也挺方便。Jackson不但可以完成简单的序列化和反序列化操作，也能实现复杂的个性化的序列化和反序列化操作。<a id="more"></a></p><h2 id="自定义ObjectMapper"><a href="#自定义ObjectMapper" class="headerlink" title="自定义ObjectMapper"></a>自定义ObjectMapper</h2><p>我们都知道，在Spring中使用<code>@ResponseBody</code>注解可以将方法返回的对象序列化成JSON，比如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"getuser"</span>)</div><div class="line"><span class="meta">@ResponseBody</span></div><div class="line"><span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">()</span> </span>&#123;</div><div class="line">    User user = <span class="keyword">new</span> User();</div><div class="line">    user.setUserName(<span class="string">"mrbird"</span>);</div><div class="line">    user.setBirthday(<span class="keyword">new</span> Date());</div><div class="line">    <span class="keyword">return</span> user;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>User类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">6222176558369919436L</span>;</div><div class="line">    </div><div class="line">    <span class="keyword">private</span> String userName;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</div><div class="line">    <span class="keyword">private</span> String password;</div><div class="line">    <span class="keyword">private</span> Date birthday;</div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>访问<code>getuser</code>页面输出：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;<span class="attr">"userName"</span>:<span class="string">"mrbird"</span>,<span class="attr">"age"</span>:<span class="number">0</span>,<span class="attr">"password"</span>:<span class="literal">null</span>,<span class="attr">"birthday"</span>:<span class="number">1522634892365</span>&#125;</div></pre></td></tr></table></figure><p></p><p>可看到时间默认以时间戳的形式输出，如果想要改变这个默认行为，我们可以自定义一个ObjectMapper来替代：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</div><div class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</div><div class="line"></div><div class="line"><span class="meta">@Configuration</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JacksonConfig</span> </span>&#123;</div><div class="line">    <span class="meta">@Bean</span></div><div class="line">    <span class="function"><span class="keyword">public</span> ObjectMapper <span class="title">getObjectMapper</span><span class="params">()</span></span>&#123;</div><div class="line">        ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</div><div class="line">        mapper.setDateFormat(<span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>));</div><div class="line">        <span class="keyword">return</span> mapper;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>上面配置获取了ObjectMapper对象，并且设置了时间格式。再次访问<code>getuser</code>，页面输出：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;<span class="attr">"userName"</span>:<span class="string">"mrbird"</span>,<span class="attr">"age"</span>:<span class="number">0</span>,<span class="attr">"password"</span>:<span class="literal">null</span>,<span class="attr">"birthday"</span>:<span class="string">"2018-04-02 10:14:24"</span>&#125;</div></pre></td></tr></table></figure><p></p><h2 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h2><p>Jackson通过使用mapper的<code>writeValueAsString</code>方法将Java对象序列化为JSON格式字符串：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Autowired</span></div><div class="line">ObjectMapper mapper;</div><div class="line"></div><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"serialization"</span>)</div><div class="line"><span class="meta">@ResponseBody</span></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">serialization</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        User user = <span class="keyword">new</span> User();</div><div class="line">        user.setUserName(<span class="string">"mrbird"</span>);</div><div class="line">        user.setBirthday(<span class="keyword">new</span> Date());</div><div class="line">        String str = mapper.writeValueAsString(user);</div><div class="line">        <span class="keyword">return</span> str;</div><div class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">        e.printStackTrace();</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><h2 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h2><p>使用<code>@ResponseBody</code>注解可以使对象序列化为JSON格式字符串，除此之外，Jackson也提供了反序列化方法。</p><h3 id="树遍历"><a href="#树遍历" class="headerlink" title="树遍历"></a>树遍历</h3><p>当采用树遍历的方式时，JSON被读入到JsonNode对象中，可以像操作XML DOM那样读取JSON。比如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Autowired</span></div><div class="line">ObjectMapper mapper;</div><div class="line"></div><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"readjsonstring"</span>)</div><div class="line"><span class="meta">@ResponseBody</span></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">readJsonString</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        String json = <span class="string">"&#123;\"name\":\"mrbird\",\"age\":26&#125;"</span>;</div><div class="line">        JsonNode node = <span class="keyword">this</span>.mapper.readTree(json);</div><div class="line">        String name = node.get(<span class="string">"name"</span>).asText();</div><div class="line">        <span class="keyword">int</span> age = node.get(<span class="string">"age"</span>).asInt();</div><div class="line">        <span class="keyword">return</span> name + <span class="string">" "</span> + age;</div><div class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">        e.printStackTrace();</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p><code>readTree</code>方法可以接受一个字符串或者字节数组、文件、InputStream等， 返回JsonNode作为根节点，你可以像操作XML DOM那样操作遍历JsonNode以获取数据。</p><p>解析多级JSON例子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">String json = <span class="string">"&#123;\"name\":\"mrbird\",\"hobby\":&#123;\"first\":\"sleep\",\"second\":\"eat\"&#125;&#125;"</span>;;</div><div class="line">JsonNode node = <span class="keyword">this</span>.mapper.readTree(json);</div><div class="line">JsonNode hobby = node.get(<span class="string">"hobby"</span>);</div><div class="line">String first = hobby.get(<span class="string">"first"</span>).asText();</div></pre></td></tr></table></figure><p></p><h3 id="绑定对象"><a href="#绑定对象" class="headerlink" title="绑定对象"></a>绑定对象</h3><p>我们也可以将Java对象和JSON数据进行绑定，如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Autowired</span></div><div class="line">ObjectMapper mapper;</div><div class="line"></div><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"readjsonasobject"</span>)</div><div class="line"><span class="meta">@ResponseBody</span></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">readJsonAsObject</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        String json = <span class="string">"&#123;\"name\":\"mrbird\",\"age\":26&#125;"</span>;</div><div class="line">        User user = mapper.readValue(json, User.class);</div><div class="line">        String name = user.getUserName();</div><div class="line">        <span class="keyword">int</span> age = user.getAge();</div><div class="line">        <span class="keyword">return</span> name + <span class="string">" "</span> + age;</div><div class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">        e.printStackTrace();</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><h2 id="Jackson注解"><a href="#Jackson注解" class="headerlink" title="Jackson注解"></a>Jackson注解</h2><p>Jackson包含了一些实用的注解：</p><h3 id="JsonProperty"><a href="#JsonProperty" class="headerlink" title="@JsonProperty"></a>@JsonProperty</h3><p><code>@JsonProperty</code>，作用在属性上，用来为JSON Key指定一个别名。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@JsonProperty</span>(<span class="string">"bth"</span>)</div><div class="line"><span class="keyword">private</span> Date birthday;</div></pre></td></tr></table></figure><p></p><p>再次访问<code>getuser</code>页面输出：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;<span class="attr">"userName"</span>:<span class="string">"mrbird"</span>,<span class="attr">"age"</span>:<span class="number">0</span>,<span class="attr">"password"</span>:<span class="literal">null</span>,<span class="attr">"bth"</span>:<span class="string">"2018-04-02 10:38:37"</span>&#125;</div></pre></td></tr></table></figure><p></p><p>key birthday已经被替换为了bth。</p><h3 id="Jsonlgnore"><a href="#Jsonlgnore" class="headerlink" title="@Jsonlgnore"></a>@Jsonlgnore</h3><p><code>@Jsonlgnore</code>，作用在属性上，用来忽略此属性。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@JsonIgnore</span></div><div class="line"><span class="keyword">private</span> String password;</div></pre></td></tr></table></figure><p></p><p>再次访问<code>getuser</code>页面输出：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;<span class="string">"userName"</span>:<span class="string">"mrbird"</span>,<span class="string">"age"</span>:<span class="number">0</span>,<span class="string">"bth"</span>:<span class="string">"2018-04-02 10:40:45"</span>&#125;</div></pre></td></tr></table></figure><p></p><p>password属性已被忽略。</p><h3 id="JsonIgnoreProperties"><a href="#JsonIgnoreProperties" class="headerlink" title="@JsonIgnoreProperties"></a>@JsonIgnoreProperties</h3><p><code>@JsonIgnoreProperties</code>，忽略一组属性，作用于类上，比如<code>JsonIgnoreProperties({ &quot;password&quot;, &quot;age&quot; })</code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@JsonIgnoreProperties</span>(&#123; <span class="string">"password"</span>, <span class="string">"age"</span> &#125;)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>再次访问<code>getuser</code>页面输出：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;<span class="attr">"userName"</span>:<span class="string">"mrbird"</span>,<span class="attr">"bth"</span>:<span class="string">"2018-04-02 10:45:34"</span>&#125;</div></pre></td></tr></table></figure><p></p><h3 id="JsonFormat"><a href="#JsonFormat" class="headerlink" title="@JsonFormat"></a>@JsonFormat</h3><p><code>@JsonFormat</code>，用于日期格式化，如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@JsonFormat</span>(pattern = <span class="string">"yyyy-MM-dd HH:mm:ss"</span>)</div><div class="line"><span class="keyword">private</span> Date birthday;</div></pre></td></tr></table></figure><p></p><h3 id="JsonNaming"><a href="#JsonNaming" class="headerlink" title="@JsonNaming"></a>@JsonNaming</h3><p><code>@JsonNaming</code>，用于指定一个命名策略，作用于类或者属性上。Jackson自带了多种命名策略，你可以实现自己的命名策略，比如输出的key 由Java命名方式转为下面线命名方法 —— userName转化为user-name。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@JsonNaming</span>(PropertyNamingStrategy.LowerCaseWithUnderscoresStrategy.class)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>再次访问<code>getuser</code>页面输出：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;<span class="attr">"user_name"</span>:<span class="string">"mrbird"</span>,<span class="attr">"bth"</span>:<span class="string">"2018-04-02 10:52:12"</span>&#125;</div></pre></td></tr></table></figure><p></p><h3 id="JsonSerialize"><a href="#JsonSerialize" class="headerlink" title="@JsonSerialize"></a>@JsonSerialize</h3><p><code>@JsonSerialize</code>，指定一个实现类来自定义序列化。类必须实现<code>JsonSerializer</code>接口，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.example.pojo.User;</div><div class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonGenerator;</div><div class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</div><div class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.JsonSerializer;</div><div class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.SerializerProvider;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserSerializer</span> <span class="keyword">extends</span> <span class="title">JsonSerializer</span>&lt;<span class="title">User</span>&gt; </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">serialize</span><span class="params">(User user, JsonGenerator generator, SerializerProvider provider)</span></span></div><div class="line">            <span class="keyword">throws</span> IOException, JsonProcessingException &#123;</div><div class="line">        generator.writeStartObject();</div><div class="line">        generator.writeStringField(<span class="string">"user-name"</span>, user.getUserName());</div><div class="line">        generator.writeEndObject();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>上面的代码中我们仅仅序列化userName属性，且输出的key是<code>user-name</code>。 使用注解<code>@JsonSerialize</code>来指定User对象的序列化方式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@JsonSerialize</span>(using = UserSerializer.class)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>再次访问<code>getuser</code>页面输出：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;<span class="attr">"user-name"</span>:<span class="string">"mrbird"</span>&#125;</div></pre></td></tr></table></figure><p></p><h3 id="JsonDeserialize"><a href="#JsonDeserialize" class="headerlink" title="@JsonDeserialize"></a>@JsonDeserialize</h3><p><code>@JsonDeserialize</code>，用户自定义反序列化，同<code>@JsonSerialize</code> ，类需要实现<code>JsonDeserializer</code>接口。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.example.pojo.User;</div><div class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonParser;</div><div class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</div><div class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.DeserializationContext;</div><div class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.JsonDeserializer;</div><div class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.JsonNode;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDeserializer</span> <span class="keyword">extends</span> <span class="title">JsonDeserializer</span>&lt;<span class="title">User</span>&gt; </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">deserialize</span><span class="params">(JsonParser parser, DeserializationContext context)</span></span></div><div class="line">            <span class="keyword">throws</span> IOException, JsonProcessingException &#123;</div><div class="line">        JsonNode node = parser.getCodec().readTree(parser);</div><div class="line">        String userName = node.get(<span class="string">"user-name"</span>).asText();</div><div class="line">        User user = <span class="keyword">new</span> User();</div><div class="line">        user.setUserName(userName);</div><div class="line">        <span class="keyword">return</span> user;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>使用注解<code>@JsonDeserialize</code>来指定User对象的序列化方式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@JsonDeserialize</span> (using = UserDeserializer.class)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>测试：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Autowired</span></div><div class="line">ObjectMapper mapper;</div><div class="line"></div><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"readjsonasobject"</span>)</div><div class="line"><span class="meta">@ResponseBody</span></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">readJsonAsObject</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        String json = <span class="string">"&#123;\"user-name\":\"mrbird\"&#125;"</span>;</div><div class="line">        User user = mapper.readValue(json, User.class);</div><div class="line">        String name = user.getUserName();</div><div class="line">        <span class="keyword">return</span> name;</div><div class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">        e.printStackTrace();</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>访问<code>readjsonasobject</code>，页面输出：</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mrbird</div></pre></td></tr></table></figure><p></p><h3 id="JsonView"><a href="#JsonView" class="headerlink" title="@JsonView"></a>@JsonView</h3><p><code>@JsonView</code>，作用在类或者属性上，用来定义一个序列化组。 比如对于User对象，某些情况下只返回userName属性就行，而某些情况下需要返回全部属性。 因此User对象可以定义成如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">6222176558369919436L</span>;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserNameView</span> </span>&#123;&#125;;</div><div class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AllUserFieldView</span> <span class="keyword">extends</span> <span class="title">UserNameView</span> </span>&#123;&#125;;</div><div class="line">    </div><div class="line">    <span class="meta">@JsonView</span>(UserNameView.class)</div><div class="line">    <span class="keyword">private</span> String userName;</div><div class="line">    </div><div class="line">    <span class="meta">@JsonView</span>(AllUserFieldView.class)</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</div><div class="line">    </div><div class="line">    <span class="meta">@JsonView</span>(AllUserFieldView.class)</div><div class="line">    <span class="keyword">private</span> String password;</div><div class="line">    </div><div class="line">    <span class="meta">@JsonView</span>(AllUserFieldView.class)</div><div class="line">    <span class="keyword">private</span> Date birthday;</div><div class="line">    ...	</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>User定义了两个接口类，一个为<code>userNameView</code>，另外一个为<code>AllUserFieldView</code>继承了<code>userNameView</code>接口。这两个接口代表了两个序列化组的名称。属性userName使用了<code>@JsonView(UserNameView.class)</code>，而剩下属性使用了<code>@JsonView(AllUserFieldView.class)</code>。</p><p>Spring中Controller方法允许使用<code>@JsonView</code>指定一个组名，被序列化的对象只有在这个组的属性才会被序列化，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@JsonView</span>(User.UserNameView.class)</div><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"getuser"</span>)</div><div class="line"><span class="meta">@ResponseBody</span></div><div class="line"><span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">()</span> </span>&#123;</div><div class="line">    User user = <span class="keyword">new</span> User();</div><div class="line">    user.setUserName(<span class="string">"mrbird"</span>);</div><div class="line">    user.setAge(<span class="number">26</span>);</div><div class="line">    user.setPassword(<span class="string">"123456"</span>);</div><div class="line">    user.setBirthday(<span class="keyword">new</span> Date());</div><div class="line">    <span class="keyword">return</span> user;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>访问<code>getuser</code>页面输出：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;<span class="attr">"userName"</span>:<span class="string">"mrbird"</span>&#125;</div></pre></td></tr></table></figure><p></p><p>如果将<code>@JsonView(User.UserNameView.class)</code>替换为<code>@JsonView(User.AllUserFieldView.class)</code>，输出：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;<span class="attr">"userName"</span>:<span class="string">"mrbird"</span>,<span class="attr">"age"</span>:<span class="number">26</span>,<span class="attr">"password"</span>:<span class="string">"123456"</span>,<span class="attr">"birthday"</span>:<span class="string">"2018-04-02 11:24:00"</span>&#125;</div></pre></td></tr></table></figure><p></p><p>因为接口<code>AllUserFieldView</code>继承了接口<code>UserNameView</code>所以userName也会被输出。</p><h2 id="集合的反序列化"><a href="#集合的反序列化" class="headerlink" title="集合的反序列化"></a>集合的反序列化</h2><p>在Controller方法中，可以使用<code>＠RequestBody</code>将提交的JSON自动映射到方法参数上，比如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"updateuser"</span>)</div><div class="line"><span class="meta">@ResponseBody</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">updateUser</span><span class="params">(@RequestBody List&lt;User&gt; list)</span></span>&#123;</div><div class="line">    <span class="keyword">return</span> list.size();</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>上面方法可以接受如下一个JSON请求，并自动映射到User对象上：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[&#123;<span class="attr">"userName"</span>:<span class="string">"mrbird"</span>,<span class="attr">"age"</span>:<span class="number">26</span>&#125;,&#123;<span class="attr">"userName"</span>:<span class="string">"scott"</span>,<span class="attr">"age"</span>:<span class="number">27</span>&#125;]</div></pre></td></tr></table></figure><p></p><p>Spring Boot 能自动识别出List对象包含的是User类，因为在方法中定义的泛型的类型会被保留在字节码中，所以Spring Boot能识别List包含的泛型类型从而能正确反序列化。</p><p>有些情况下，集合对象并没有包含泛型定义，如下代码所示，反序列化并不能得到期望的结果。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Autowired</span></div><div class="line">ObjectMapper mapper;</div><div class="line"></div><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"customize"</span>)</div><div class="line"><span class="meta">@ResponseBody</span></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">customize</span><span class="params">()</span> <span class="keyword">throws</span> JsonParseException, JsonMappingException, IOException </span>&#123;</div><div class="line">    String jsonStr = <span class="string">"[&#123;\"userName\":\"mrbird\",\"age\":26&#125;,&#123;\"userName\":\"scott\",\"age\":27&#125;]"</span>;</div><div class="line">    List&lt;User&gt; list = mapper.readValue(jsonStr, List.class);</div><div class="line">    String msg = <span class="string">""</span>;</div><div class="line">    <span class="keyword">for</span> (User user : list) &#123;</div><div class="line">        msg += user.getUserName();</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> msg;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>访问<code>customize</code>，控制台抛出异常：</p><div class="note danger"><p><code>java.lang.ClassCastException: java.util.LinkedHashMap cannot be cast to com.example.pojo.User</code></p></div><p></p><p>这是因为在运行时刻，泛型己经被擦除了（不同于方法参数定义的泛型，不会被擦除）。为了提供泛型信息，Jackson提供了JavaType ，用来指明集合类型，将上述方法改为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Autowired</span></div><div class="line">ObjectMapper mapper;</div><div class="line"></div><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"customize"</span>)</div><div class="line"><span class="meta">@ResponseBody</span></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">customize</span><span class="params">()</span> <span class="keyword">throws</span> JsonParseException, JsonMappingException, IOException </span>&#123;</div><div class="line">    String jsonStr = <span class="string">"[&#123;\"userName\":\"mrbird\",\"age\":26&#125;,&#123;\"userName\":\"scott\",\"age\":27&#125;]"</span>;</div><div class="line">    JavaType type = mapper.getTypeFactory().constructParametricType(List.class, User.class);</div><div class="line">    List&lt;User&gt; list = mapper.readValue(jsonStr, type);</div><div class="line">    String msg = <span class="string">""</span>;</div><div class="line">    <span class="keyword">for</span> (User user : list) &#123;</div><div class="line">        msg += user.getUserName();</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> msg;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>访问<code>customize</code>，页面输出：<code>mrbirdscott</code>。</p><p>源码连接<a href="https://github.com/wuyouzhuguli/Spring-Boot-Demos/tree/master/18.Spring-Boot-Jackson" target="_blank" rel="external">https://github.com/wuyouzhuguli/Spring-Boot-Demos/tree/master/18.Spring-Boot-Jackson</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Jun 06 2018 16:37:32 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;平日里在项目中处理JSON一般用的都是阿里巴巴的Fastjson，后来发现使用Spring Boot内置的Jackson来完成JSON的序列化和反序列化操作也挺方便。Jackson不但可以完成简单的序列化和反序列化操作，也能实现复杂的个性化的序列化和反序列化操作。
    
    </summary>
    
    
      <category term="JSON" scheme="http://mrbird.cc/tags/JSON/"/>
    
      <category term="Spring Boot" scheme="http://mrbird.cc/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>使用Jsoup防御XSS攻击</title>
    <link href="http://mrbird.cc/Jsoup%20XSS.html"/>
    <id>http://mrbird.cc/Jsoup XSS.html</id>
    <published>2018-03-03T02:11:43.000Z</published>
    <updated>2018-04-11T01:35:40.494Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Jun 06 2018 16:37:31 GMT+0800 (中国标准时间) --><p>跨站脚本攻击(Cross Site Scripting)，为了不和层叠样式表(Cascading Style Sheets, CSS)的缩写混淆，故将跨站脚本攻击缩写为XSS。恶意攻击者往Web页面里插入恶意Script代码，当用户浏览该页之时，嵌入其中Web里面的Script代码会被执行，从而达到恶意攻击用户的目的。</p><p>使用<a href="https://jsoup.org/" target="_blank" rel="external">Jsoup</a>可以有效的过滤不安全的代码。Jsoup使用白名单的机制来预防XSS攻击，比如白名单中规定只允许<code>&lt;span&gt;</code>标签的存在，那么其他标签都会被过滤掉。</p><a id="more"></a><h2 id="常见的XSS攻击"><a href="#常见的XSS攻击" class="headerlink" title="常见的XSS攻击"></a>常见的XSS攻击</h2><p>比如页面的某个表单允许用户输入任意内容，当某个调皮的用户输入如下内容： <img src="img/QQ截图20180329102901.png" alt="QQ截图20180329102901.png"></p><p>保存后，你会发现页面文字都变成了红色！</p><p><img src="img/QQ截图20180329102936.png" alt="QQ截图20180329102936.png"></p><p>或者输入<code>&lt;script&gt;for(var i=0;i&lt;10;i++){alert(&quot;fuck you&quot;);}&lt;/script&gt;</code>，保存后页面将弹窗10次！</p><h2 id="引入Jsoup"><a href="#引入Jsoup" class="headerlink" title="引入Jsoup"></a>引入Jsoup</h2><p>使用Maven构建一个简单的Spring Boot项目，在pom中引入：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jsoup<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsoup<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure><p></p><h2 id="JsoupUtil"><a href="#JsoupUtil" class="headerlink" title="JsoupUtil"></a>JsoupUtil</h2><p>创建一个JsoupUtil工具类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.jsoup.Jsoup;</div><div class="line"><span class="keyword">import</span> org.jsoup.nodes.Document;</div><div class="line"><span class="keyword">import</span> org.jsoup.safety.Whitelist;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Xss过滤工具</div><div class="line"> *</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JsoupUtil</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Whitelist whitelist = Whitelist.basicWithImages();</div><div class="line">    <span class="comment">/*</span></div><div class="line">    * 配置过滤化参数,不对代码进行格式化</div><div class="line">    */</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Document.OutputSettings outputSettings = <span class="keyword">new</span> Document.OutputSettings().prettyPrint(<span class="keyword">false</span>);</div><div class="line">    <span class="keyword">static</span> &#123;</div><div class="line">        <span class="comment">/*</span></div><div class="line">         * 富文本编辑时一些样式是使用style来进行实现的 比如红色字体 style="color:red;" 所以需要给所有标签添加style属性</div><div class="line">         */</div><div class="line">        whitelist.addAttributes(<span class="string">":all"</span>, <span class="string">"style"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">clean</span><span class="params">(String content)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> Jsoup.clean(content, <span class="string">""</span>, whitelist, outputSettings);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>这里采用的白名单为<code>basicWithImages</code>，Jsoup内置了几种常见的白名单供我们选择，如下表所示：</p><table><thead><tr><th>白名单对象</th><th>标签</th><th>说明</th></tr></thead><tbody><tr><td>none</td><td>无</td><td>只保留标签内文本内容</td></tr><tr><td>simpleText</td><td>b,em,i,strong,u</td><td>简单的文本标签</td></tr><tr><td>basic</td><td>a,b,blockquote,br,cite,code,dd,<br>dl,dt,em,i,li,ol,p,pre,q,small,span,<br>strike,strong,sub,sup,u,ul</td><td>基本使用的标签</td></tr><tr><td>basicWithImages</td><td>basic 的基础上添加了 img 标签<br>及 img 标签的 src,align,alt,height,width,title 属性</td><td>基本使用的加上 img 标签</td></tr><tr><td>relaxed</td><td>a,b,blockquote,br,caption,cite,<br>code,col,colgroup,dd,div,dl,dt,<br>em,h1,h2,h3,h4,h5,h6,i,img,li,<br>ol,p,pre,q,small,span,strike,strong,<br>sub,sup,table,tbody,td,tfoot,th,thead,tr,u,ul</td><td>在 basicWithImages 的基础上又增加了一部分部分标签</td></tr></tbody></table><h2 id="XssHttpServletRequestWrapper"><a href="#XssHttpServletRequestWrapper" class="headerlink" title="XssHttpServletRequestWrapper"></a>XssHttpServletRequestWrapper</h2><p>创建一个XssHttpServletRequestWrapper，同过重写<code>getParameter()</code>，<code>getParameterValues()</code>和<code>getHeader()</code>方法来过滤HTTP请求中参数包含的恶意字符：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</div><div class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequestWrapper;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.apache.commons.lang.StringUtils;</div><div class="line"></div><div class="line"><span class="keyword">import</span> cc.mrbird.common.util.JsoupUtil;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Jsoup过滤http请求，防止Xss攻击</div><div class="line"> *</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">XssHttpServletRequestWrapper</span> <span class="keyword">extends</span> <span class="title">HttpServletRequestWrapper</span> </span>&#123;</div><div class="line"></div><div class="line">    HttpServletRequest orgRequest = <span class="keyword">null</span>;</div><div class="line">    </div><div class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> isIncludeRichText = <span class="keyword">false</span>;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">XssHttpServletRequestWrapper</span><span class="params">(HttpServletRequest request, <span class="keyword">boolean</span> isIncludeRichText)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(request);</div><div class="line">        orgRequest = request;</div><div class="line">        <span class="keyword">this</span>.isIncludeRichText = isIncludeRichText;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">    * 覆盖getParameter方法，将参数名和参数值都做xss过滤如果需要获得原始的值，则通过super.getParameterValues(name)来获取</div><div class="line">    * getParameterNames,getParameterValues和getParameterMap也可能需要覆盖</div><div class="line">    */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getParameter</span><span class="params">(String name)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> ((<span class="string">"content"</span>.equals(name) || name.endsWith(<span class="string">"WithHtml"</span>)) &amp;&amp; !isIncludeRichText) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">super</span>.getParameter(name);</div><div class="line">        &#125;</div><div class="line">        name = JsoupUtil.clean(name);</div><div class="line">        String value = <span class="keyword">super</span>.getParameter(name);</div><div class="line">        <span class="keyword">if</span> (StringUtils.isNotBlank(value)) &#123;</div><div class="line">            value = JsoupUtil.clean(value);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> value;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> String[] getParameterValues(String name) &#123;</div><div class="line">        String[] arr = <span class="keyword">super</span>.getParameterValues(name);</div><div class="line">        <span class="keyword">if</span> (arr != <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</div><div class="line">                arr[i] = JsoupUtil.clean(arr[i]);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> arr;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">    * 覆盖getHeader方法，将参数名和参数值都做xss过滤如果需要获得原始的值，则通过super.getHeaders(name)来获取</div><div class="line">    * getHeaderNames 也可能需要覆盖</div><div class="line">    */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getHeader</span><span class="params">(String name)</span> </span>&#123;</div><div class="line">        name = JsoupUtil.clean(name);</div><div class="line">        String value = <span class="keyword">super</span>.getHeader(name);</div><div class="line">        <span class="keyword">if</span> (StringUtils.isNotBlank(value)) &#123;</div><div class="line">            value = JsoupUtil.clean(value);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> value;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">    * 获取原始的request</div><div class="line">    */</div><div class="line">    <span class="function"><span class="keyword">public</span> HttpServletRequest <span class="title">getOrgRequest</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> orgRequest;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">    * 获取原始的request的静态方法</div><div class="line">    */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> HttpServletRequest <span class="title">getOrgRequest</span><span class="params">(HttpServletRequest req)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (req <span class="keyword">instanceof</span> XssHttpServletRequestWrapper) &#123;</div><div class="line">            <span class="keyword">return</span> ((XssHttpServletRequestWrapper) req).getOrgRequest();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> req;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><h2 id="XssFilter"><a href="#XssFilter" class="headerlink" title="XssFilter"></a>XssFilter</h2><p>创建XssFilter，同过使用上面定义的XssHttpServletRequestWrapper类中的<code>getParameter()</code>等方法来保证参数得到了过滤：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.util.ArrayList;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"><span class="keyword">import</span> java.util.regex.Matcher;</div><div class="line"><span class="keyword">import</span> java.util.regex.Pattern;</div><div class="line"></div><div class="line"><span class="keyword">import</span> javax.servlet.Filter;</div><div class="line"><span class="keyword">import</span> javax.servlet.FilterChain;</div><div class="line"><span class="keyword">import</span> javax.servlet.FilterConfig;</div><div class="line"><span class="keyword">import</span> javax.servlet.ServletException;</div><div class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</div><div class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</div><div class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</div><div class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.apache.commons.lang.BooleanUtils;</div><div class="line"><span class="keyword">import</span> org.apache.commons.lang.StringUtils;</div><div class="line"><span class="keyword">import</span> org.slf4j.Logger;</div><div class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Xss攻击拦截器</div><div class="line"> *</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">XssFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Logger logger = LoggerFactory.getLogger(XssFilter.class);</div><div class="line">    <span class="comment">// 是否过滤富文本内容</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> IS_INCLUDE_RICH_TEXT = <span class="keyword">false</span>;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> List&lt;String&gt; excludes = <span class="keyword">new</span> ArrayList&lt;String&gt;();</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</div><div class="line">        logger.info(<span class="string">"------------ xss filter init ------------"</span>);</div><div class="line">        String isIncludeRichText = filterConfig.getInitParameter(<span class="string">"isIncludeRichText"</span>);</div><div class="line">        <span class="keyword">if</span> (StringUtils.isNotBlank(isIncludeRichText)) &#123;</div><div class="line">            IS_INCLUDE_RICH_TEXT = BooleanUtils.toBoolean(isIncludeRichText);</div><div class="line">        &#125;</div><div class="line">        String temp = filterConfig.getInitParameter(<span class="string">"excludes"</span>);</div><div class="line">        <span class="keyword">if</span> (temp != <span class="keyword">null</span>) &#123;</div><div class="line">            String[] url = temp.split(<span class="string">","</span>);</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; url != <span class="keyword">null</span> &amp;&amp; i &lt; url.length; i++) &#123;</div><div class="line">                excludes.add(url[i]);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span></span></div><div class="line">            <span class="keyword">throws</span> IOException, ServletException &#123;</div><div class="line">        HttpServletRequest req = (HttpServletRequest) request;</div><div class="line">        HttpServletResponse resp = (HttpServletResponse) response;</div><div class="line">        <span class="keyword">if</span> (handleExcludeURL(req, resp)) &#123;</div><div class="line">            chain.doFilter(request, response);</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        XssHttpServletRequestWrapper xssRequest = <span class="keyword">new</span> XssHttpServletRequestWrapper((HttpServletRequest) request,</div><div class="line">        	IS_INCLUDE_RICH_TEXT);</div><div class="line">        chain.doFilter(xssRequest, response);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</div><div class="line">    </div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">handleExcludeURL</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (excludes == <span class="keyword">null</span> || excludes.isEmpty()) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">        &#125;</div><div class="line">        String url = request.getServletPath();</div><div class="line">        <span class="keyword">for</span> (String pattern : excludes) &#123;</div><div class="line">            Pattern p = Pattern.compile(<span class="string">"^"</span> + pattern);</div><div class="line">            Matcher m = p.matcher(url);</div><div class="line">            <span class="keyword">if</span> (m.find())</div><div class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><h2 id="Spring-Boot中配置XssFilter"><a href="#Spring-Boot中配置XssFilter" class="headerlink" title="Spring Boot中配置XssFilter"></a>Spring Boot中配置XssFilter</h2><p>使用JavaConfig的形式配置：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Bean</span></div><div class="line"><span class="function"><span class="keyword">public</span> FilterRegistrationBean <span class="title">xssFilterRegistrationBean</span><span class="params">()</span> </span>&#123;</div><div class="line">    FilterRegistrationBean filterRegistrationBean = <span class="keyword">new</span> FilterRegistrationBean();</div><div class="line">    filterRegistrationBean.setFilter(<span class="keyword">new</span> XssFilter());</div><div class="line">    filterRegistrationBean.setOrder(<span class="number">1</span>);</div><div class="line">    filterRegistrationBean.setEnabled(<span class="keyword">true</span>);</div><div class="line">    filterRegistrationBean.addUrlPatterns(<span class="string">"/*"</span>);</div><div class="line">    Map&lt;String, String&gt; initParameters = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</div><div class="line">    initParameters.put(<span class="string">"excludes"</span>, <span class="string">"/favicon.ico,/img/*,/js/*,/css/*"</span>);</div><div class="line">    initParameters.put(<span class="string">"isIncludeRichText"</span>, <span class="string">"true"</span>);</div><div class="line">    filterRegistrationBean.setInitParameters(initParameters);</div><div class="line">    <span class="keyword">return</span> filterRegistrationBean;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>参考文章：</p><ol><li><p><a href="https://blog.csdn.net/u014411966/article/details/78164752" target="_blank" rel="external">https://blog.csdn.net/u014411966/article/details/78164752</a></p></li><li><p><a href="https://www.jianshu.com/p/32abc12a175a?nomobile=yes" target="_blank" rel="external">https://www.jianshu.com/p/32abc12a175a?nomobile=yes</a></p></li></ol><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Jun 06 2018 16:37:31 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;跨站脚本攻击(Cross Site Scripting)，为了不和层叠样式表(Cascading Style Sheets, CSS)的缩写混淆，故将跨站脚本攻击缩写为XSS。恶意攻击者往Web页面里插入恶意Script代码，当用户浏览该页之时，嵌入其中Web里面的Script代码会被执行，从而达到恶意攻击用户的目的。&lt;/p&gt;&lt;p&gt;使用&lt;a href=&quot;https://jsoup.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Jsoup&lt;/a&gt;可以有效的过滤不安全的代码。Jsoup使用白名单的机制来预防XSS攻击，比如白名单中规定只允许&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;标签的存在，那么其他标签都会被过滤掉。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Jsoup" scheme="http://mrbird.cc/tags/Jsoup/"/>
    
      <category term="Security" scheme="http://mrbird.cc/tags/Security/"/>
    
      <category term="Spring Boot" scheme="http://mrbird.cc/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>腾讯云部署Java Web项目小记</title>
    <link href="http://mrbird.cc/tecent%20cloud%20Java-Web.html"/>
    <id>http://mrbird.cc/tecent cloud Java-Web.html</id>
    <published>2018-03-01T01:29:49.000Z</published>
    <updated>2018-04-11T01:35:40.496Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Jun 06 2018 16:37:33 GMT+0800 (中国标准时间) --><p>近期<a href="https://cloud.tencent.com/act/campus/" target="_blank" rel="external">腾讯云</a>推出云服务器团购优惠，刚好打算搭建个<a href="http://111.230.157.133/febs" target="_blank" rel="external">FEBS</a>的演示环境，于是买了台120/年的云服务器，配置为1核2G、1M带宽，加赠50GB对象存储空间，系统为Ubuntu 16.04。部署过程中遇到一些新的问题，在这记录一下。<a id="more"></a></p><h2 id="工具准备"><a href="#工具准备" class="headerlink" title="工具准备"></a>工具准备</h2><p>搭建前先准备好远程登录软件，这类软件很多，这里推荐的是<a href="https://mobaxterm.mobatek.net/" target="_blank" rel="external">MobaXterm</a>；文件的上传下载推荐使用<a href="https://filezilla-project.org/" target="_blank" rel="external">FileZilla</a>；数据库连接推荐使用Navicat Premium。</p><h2 id="Java环境搭建"><a href="#Java环境搭建" class="headerlink" title="Java环境搭建"></a>Java环境搭建</h2><p>Java环境的搭建可参考（包括安装JDK，MySQL）：<a href="/ubuntu16-04搭建Java开发环境.html">ubuntu16-04搭建Java开发环境</a>。Tomcat下载后解压即可。</p><h2 id="远程连接MySQL"><a href="#远程连接MySQL" class="headerlink" title="远程连接MySQL"></a>远程连接MySQL</h2><p>开启MySQL远程连接的前提是在安装MySQL初始化的时候允许远程连接，然后输入以下命令：</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt; GRANT ALL PRIVILEGES ON *.* TO 'root'@'%'IDENTIFIED BY '123456' WITH GRANT OPTION;</div></pre></td></tr></table></figure><p></p><p>这段话的意思是允许任何IP以root账户远程访问，密码为123456。这里的密码设定只是为了演示，实际必须满足在初始化MySQL时密码强度的设定，即<code>validate_password_policy</code>：</p><table><thead><tr><th scope="col">Policy</th><th scope="col">Tests Performed</th></tr></thead><tbody><tr><td scope="row"><code bigint(20)="">0</code>&nbsp;or&nbsp;<code bigint(20)="">LOW</code></td><td>Length</td></tr><tr><td scope="row"><code bigint(20)="">1</code>&nbsp;or&nbsp;<code bigint(20)="">MEDIUM</code></td><td>Length; numeric, lowercase/uppercase, and special characters</td></tr><tr><td scope="row"><code bigint(20)="">2</code>&nbsp;or&nbsp;<code bigint(20)="">STRONG</code></td><td>Length; numeric, lowercase/uppercase, and special characters; dictionary file</td></tr></tbody></table><p>当密码强度和设定的不一致时，MySQL提示<span style="color:red"> Your password does not satisfy the current policy requirements</span>错误。</p><p>然后执行一下语句，使得设定生效：</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt; FLUSH PRIVILEGES;</div></pre></td></tr></table></figure><p></p><p>接下来使用Navicat远程连接MySQL，打开Navicat，新建MySQL连接：</p><p><img src="img/QQ截图20180322105626.png" alt="QQ截图20180322105626.png"></p><p>IP填云服务器的公网IP地址，用户名和密码为上面设定的root和123456。除此之外，还得填写SSH连接信息：</p><p><img src="img/QQ截图20180322105848.png" alt="QQ截图20180322105848.png"></p><p>IP填云服务器的公网IP地址，用户名和密码为云服务器的用户名和密码。</p><p>点击连接测试后发现Navicat报错：</p><div class="note danger"><p><code>Lost connection to MySQL server at &#39;reading initial communication packet&#39;, system error: 0</code></p></div><p>打开MySQL配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /etc/mysql/mysql.conf.d/mysqld.cnf</div></pre></td></tr></table></figure><p></p><p>找到<code>[mysqld]</code>，添加<code>skip-name-resolve</code>，并将<code>bind-address= 127.0.0.1</code>配置注释掉即可，如下所示：</p><p><img src="img/QQ截图20180322110744.png" alt="QQ截图20180322110744.png"></p><p>然后再次点击Navicat连接测试即可成功。</p><h2 id="项目部署"><a href="#项目部署" class="headerlink" title="项目部署"></a>项目部署</h2><p>在本地将项目打包后，使用FileZilla将项目上传到Tomcat的webapp目录下，运行bin目录下的startup.sh脚本即可。</p><h2 id="域名绑定"><a href="#域名绑定" class="headerlink" title="域名绑定"></a>域名绑定</h2><p>如下新增域名解析：</p><p><img src="img/QQ截图20180322111531.png" alt="QQ截图20180322111531.png"></p><p>记录值为云服务器的公网IP地址。配置解析后，就可使用 <code>域名:端口号/项目名</code> 的形式访问了。比如<code>http://demo.mrbird.cc:80/febs/login</code>，端口号默认就是80，所以可以简写为<a href="http://demo.mrbird.cc/febs/login" target="_blank" rel="external">http://demo.mrbird.cc/febs/login</a>。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Jun 06 2018 16:37:33 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;近期&lt;a href=&quot;https://cloud.tencent.com/act/campus/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;腾讯云&lt;/a&gt;推出云服务器团购优惠，刚好打算搭建个&lt;a href=&quot;http://111.230.157.133/febs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;FEBS&lt;/a&gt;的演示环境，于是买了台120/年的云服务器，配置为1核2G、1M带宽，加赠50GB对象存储空间，系统为Ubuntu 16.04。部署过程中遇到一些新的问题，在这记录一下。
    
    </summary>
    
    
      <category term="Linux" scheme="http://mrbird.cc/tags/Linux/"/>
    
      <category term="云服务器" scheme="http://mrbird.cc/tags/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>基于Spring Boot和Shiro的后台管理系统FEBS</title>
    <link href="http://mrbird.cc/Spring-Boot%20Shiro%20FEBS.html"/>
    <id>http://mrbird.cc/Spring-Boot Shiro FEBS.html</id>
    <published>2018-02-08T03:03:37.000Z</published>
    <updated>2018-05-17T01:00:16.261Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Jun 06 2018 16:37:32 GMT+0800 (中国标准时间) --><p><a href="http://111.230.157.133/febs" target="_blank" rel="external">FEBS</a>是一个简单高效的后台权限管理系统。项目基础框架采用全新的Java Web开发框架 —— Spring Boot，消除了繁杂的XML配置，使得二次开发更为简单；数据访问层采用Mybatis，同时引入了通用Mapper和PageHelper插件，可快速高效的对单表进行增删改查操作，消除了大量传统XML配置SQL的代码；安全框架采用时下流行的Apache Shiro，可实现对按钮级别的权限控制；前端页面使用Bootstrap构建，主题风格为Google最新设计语言Material Design，并提供多套配色以供选择。FEBS意指：Fast，Easy use，Beautiful和Safe🙄。<a id="more"></a></p><h2 id="功能模块"><a href="#功能模块" class="headerlink" title="功能模块"></a>功能模块</h2><p>系统功能模块组成如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">├─系统管理</div><div class="line">│  ├─字典管理</div><div class="line">│  ├─用户管理</div><div class="line">│  ├─菜单管理</div><div class="line">│  ├─角色管理</div><div class="line">│  └─部门管理</div><div class="line">├─系统监控</div><div class="line">│  ├─在线用户</div><div class="line">│  └─系统日志</div><div class="line">├─任务调度</div><div class="line">│  ├─定时任务</div><div class="line">│  └─调度日志</div><div class="line">└─网络资源</div><div class="line">    ├─One一个</div><div class="line">    │  ├─散文</div><div class="line">    │  ├─绘画</div><div class="line">    │  └─语文</div><div class="line">    ├─天气查询</div><div class="line">    ├─影视资讯</div><div class="line">    │  ├─即将上映</div><div class="line">    │  └─正在热映</div><div class="line">    └─每日一文</div></pre></td></tr></table></figure><p></p><h2 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h2><h3 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h3><ul><li><p>基础框架：Spring Boot</p></li><li><p>持久层框架：MyBatis</p></li><li><p>安全框架：Apache Shiro</p></li><li><p>摸板引擎：Thymeleaf</p></li><li><p>数据库连接池：阿里巴巴Druid</p></li><li><p>缓存框架：Ehcache</p></li><li><p>日志打印：logback</p></li><li><p>其他：fastjson，poi，javacsv，quartz等。</p></li></ul><h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><ul><li><p>基础框架：Bootstrap4</p></li><li><p>JavaScirpy框架：jQuery</p></li><li><p>消息组件：Bootstrap notify</p></li><li><p>提示框插件：SweetAlert2</p></li><li><p>树形插件：jsTree</p></li><li><p>树形表格插件：jqTreeGrid</p></li><li><p>表格插件：BootstrapTable</p></li><li><p>表单校验插件：jQuery-validate</p></li><li><p>多选下拉框插件：multiple-select</p></li><li><p>图表插件：Highcharts</p></li></ul><h3 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h3><ul><li><p>语言：Java</p></li><li><p>IDE：Eclipse Oxygen</p></li><li><p>依赖管理：Maven</p></li><li><p>数据库：Oracle 11g &amp; MySQL 5.7</p></li><li><p>版本管理：SVN，git</p></li></ul><h2 id="系统预览"><a href="#系统预览" class="headerlink" title="系统预览"></a>系统预览</h2><p><img src="img/screenshots/64420208.jpg" alt="f47c1606680527619bc462afea4d068f.png"></p><p><img src="img/screenshots/57316459.jpg" alt="e3d9fc443686ec84003496d742c783ad.png"></p><p><img src="img/screenshots/50183418.jpg" alt="2911d8fa7bbe2b6674854a5c7f59de7a.png"></p><p><img src="img/screenshots/31072514.jpg" alt="48a18207aa79b0e75cfd7258d61dab1e.png"></p><p><img src="img/screenshots/38600911.jpg" alt="155af0ed234a7fe040666b1b7818d42e.png"></p><p><img src="img/screenshots/5832650.jpg" alt="57a6c25f7b616fcf4e452da673154960.png"></p><p><img src="img/screenshots/99045302.jpg" alt="d4973ba38ff475543eab95839b5314dc.png"></p><h2 id="主题预览"><a href="#主题预览" class="headerlink" title="主题预览"></a>主题预览</h2><p><img src="img/screenshots/81830531.jpg" alt="2bbae66a0cc36ea96ca1ffe66951921d.png"></p><p><img src="img/screenshots/86512301.jpg" alt="a9f57431583b8ed9a5d18b7cf37bd053.png"></p><p><img src="img/screenshots/6580523.jpg" alt="d8cb6313fd2ee8eb793d443b83a78ce4.png"></p><p><img src="img/screenshots/21305793.jpg" alt="2bd554ce2511cd1e7e3e7b3b56216ed6.png"></p><p><img src="img/screenshots/22217970.jpg" alt="5e6d35e4390cf7f0752d7864ad701e2b.png"></p><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><p>码云：<a href="https://gitee.com/github-16661027/project" target="_blank" rel="external">https://gitee.com/github-16661027/project</a></p><p>GitHub：<a href="https://github.com/wuyouzhuguli/FEBS" target="_blank" rel="external">https://github.com/wuyouzhuguli/FEBS</a></p><p>下载后以maven项目导入。</p><p>开发时直接使用Spring Boot的入口类启动即可，访问地址<a href="localhost">localhost</a>。部署时建议打包成war包，访问地址<a href="localhost:端口号/febs" target="_blank" rel="external">localhost:端口号/febs</a>。账号mrbird，密码123456。</p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="如何下载代码"><a href="#如何下载代码" class="headerlink" title="如何下载代码"></a>如何下载代码</h3><p><strong>手动下载</strong></p><p>下载Oracle版本：</p><p>分支选择master，然后点击 download zip即可，如下图所示：</p><p><img src="img/QQ截图20180328094628.png" alt="QQ截图20180328094628.png"></p><p>下载MySQL版本：</p><p>分支选择mysql，然后点击 download zip即可，如下图所示：</p><p><img src="img/QQ截图20180328094917.png" alt="QQ截图20180328094917.png"></p><p><strong>Git命令</strong></p><p>下载oracle版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> https://github.com/wuyouzhuguli/FEBS.git</div></pre></td></tr></table></figure><p></p><p>下载mysql版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> -b mysql https://github.com/wuyouzhuguli/FEBS.git</div></pre></td></tr></table></figure><p></p><h3 id="Servlet依赖问题"><a href="#Servlet依赖问题" class="headerlink" title="Servlet依赖问题"></a>Servlet依赖问题</h3><p>启动项目后报Servlet依赖未找到，比如：</p><div class="note danger"><p>Post-processing of merged bean definition failed; nested exception is java.lang.NoClassDefFoundError: javax/servlet/ServletRequest</p></div>出现这个问题一般是使用IDEA的同学，解决办法：打开pom文件，然后下图中的<code>&lt;scope&gt;provided&lt;/scope&gt;</code>去掉：<p></p><p><img src="img/QQ截图20180328100233.png" alt="QQ截图20180328100233.png"></p><h3 id="表不存在"><a href="#表不存在" class="headerlink" title="表不存在"></a>表不存在</h3><p>这个问题一般出现在Linux环境下的MySQL数据库中，Linux下的MySQL数据库默认开启了大小写敏感，即<code>t_user</code>和<code>T_USER</code>是两个完全不同的表。解决办法：</p><ol><li><p>将代码中的表名大小写改为和数据库一致（不推荐！繁琐又容易出错）；</p></li><li><p>关闭MySQL大小写敏感，可参考：<a href="https://blog.csdn.net/fdipzone/article/details/73692929" target="_blank" rel="external">https://blog.csdn.net/fdipzone/article/details/73692929</a>。</p></li></ol><h3 id="Oracle驱动依赖问题"><a href="#Oracle驱动依赖问题" class="headerlink" title="Oracle驱动依赖问题"></a>Oracle驱动依赖问题</h3><p>以ojdbc6为例，由于版权的原因，我们需要将ojdbc6.jar依赖安装到本地的maven仓库，然后才可以在pom中进行配置。</p><p>下载ojdbc6.jar文件后，将其放到比较好找的目录下，比如D盘根目录。然后运行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">C:\Users\Administrator&gt;mvn install:install-file -Dfile=D:/ojdbc6.jar -DgroupId=com.oracle -DartifactId=ojdbc6 -Dversion=6.0 -</div><div class="line">Dpackaging=jar -DgeneratePom=<span class="literal">true</span></div><div class="line">...</div><div class="line">[INFO] --- maven-install-plugin:2.4:install-file (default-cli) @ standalone-pom ---</div><div class="line">[INFO] Installing D:\ojdbc6.jar to D:\m2\repository\com\oracle\ojdbc6\6.0\ojdbc6-6.0.jar</div><div class="line">[INFO] Installing C:\Users\ADMINI~1\AppData\Local\Temp\mvninstall9103688544010617483.pom to D:\m2\repository\com\oracle\ojdbc</div><div class="line">6\6.0\ojdbc6-6.0.pom</div><div class="line">[INFO] ------------------------------------------------------------------------</div><div class="line">[INFO] BUILD SUCCESS</div><div class="line">[INFO] ------------------------------------------------------------------------</div><div class="line">[INFO] Total time: 0.940 s</div><div class="line">[INFO] Finished at: 2017-08-13T15:06:38+08:00</div><div class="line">[INFO] Final Memory: 6M/145M</div><div class="line">[INFO] ------------------------------------------------------------------------</div></pre></td></tr></table></figure><p></p><p>接着在pom中引入：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.oracle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ojdbc6<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>这里的groupid就是你之前安装时指定的-Dgroupid的值，artifactid就是你安装时指定的-Dartifactid的值，version也一样。</p><h3 id="war包部署"><a href="#war包部署" class="headerlink" title="war包部署"></a>war包部署</h3><p>项目默认打包为war，以eclipse为例，右键项目选择Run As → Maven build…： <img src="img/QQ图片20180328102425.png" alt="QQ图片20180328102425.png"></p><p>输入命令<code>clean package</code>后点击Run按钮即可： <img src="img/QQ截图20180328102554.png" alt="QQ截图20180328102554.png"></p><p>当控制台提示成功后，刷新项目便可在target目录下找到打包好的war包：</p><p><img src="img/QQ截图20180328103002.png" alt="QQ截图20180328103002.png"></p><p>war包的名称是由pom中的<code>&lt;finalName&gt;febs&lt;/finalName&gt;</code>配置决定的。</p><h3 id="jar包部署"><a href="#jar包部署" class="headerlink" title="jar包部署"></a>jar包部署</h3><p>将pom中的打包方式改为jar：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cc.mrbird<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>project<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-snapshot<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>如果改完项目出了红叉，可以运行<code>maven update</code>；</p><p><img src="img/QQ截图20180328104654.png" alt="QQ截图20180328104654.png"></p><p>然后将下图中的Tomcat依赖去掉，因为Spring Boot内置了Tomcat依赖：</p><p><img src="img/QQ截图20180328103153.png" alt="QQ截图20180328103153.png"></p><p>最后找到<code>ServletInitializer</code>将其注释掉即可。</p><p>同样的运行<code>clean package</code>命令后刷新项目便可在target目录下找到打包好的jar包：</p><p><img src="img/QQ截图20180328103944.png" alt="QQ截图20180328103944.png"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Jun 06 2018 16:37:32 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;&lt;a href=&quot;http://111.230.157.133/febs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;FEBS&lt;/a&gt;是一个简单高效的后台权限管理系统。项目基础框架采用全新的Java Web开发框架 —— Spring Boot，消除了繁杂的XML配置，使得二次开发更为简单；数据访问层采用Mybatis，同时引入了通用Mapper和PageHelper插件，可快速高效的对单表进行增删改查操作，消除了大量传统XML配置SQL的代码；安全框架采用时下流行的Apache Shiro，可实现对按钮级别的权限控制；前端页面使用Bootstrap构建，主题风格为Google最新设计语言Material Design，并提供多套配色以供选择。FEBS意指：Fast，Easy use，Beautiful和Safe🙄。
    
    </summary>
    
    
      <category term="Shiro" scheme="http://mrbird.cc/tags/Shiro/"/>
    
      <category term="Java" scheme="http://mrbird.cc/tags/Java/"/>
    
      <category term="Spring Boot" scheme="http://mrbird.cc/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>树形插件jsTree</title>
    <link href="http://mrbird.cc/%E6%A0%91%E5%BD%A2%E6%8F%92%E4%BB%B6jsTree.html"/>
    <id>http://mrbird.cc/树形插件jsTree.html</id>
    <published>2018-02-01T01:49:17.000Z</published>
    <updated>2018-05-22T06:36:47.839Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Jun 06 2018 16:37:34 GMT+0800 (中国标准时间) --><p>jsTree是一款基于jQuery的树形控件，具有扩展性强，可编辑和可配置的特性，支持HTML，JSON和Ajax数据加载。jsTree官网地址：<a href="https://www.jstree.com/" target="_blank" rel="external">https://www.jstree.com/</a>。这里主要介绍的是基于Ajax从数据库获取数据，然后生成树形菜单的用法。jsTree的皮肤可以自由定制，本文使用的是一款第三方jsTree皮肤。<a id="more"></a></p><h2 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h2><p>因为其基于jQuery，所以引入jsTree依赖前得先引入jQuery：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- jQuery --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/2.2.0/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- jsTree --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jstree/3.3.5/jstree.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>由于第三方皮肤没有CDN地址，所以我们下载到本地后手动引入（可在文末得源码中获取）：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">data-th-href</span>=<span class="string">"@&#123;css/jsTree/style.min.css&#125;"</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>皮肤预览： <img src="jsTree/32px.png" alt="32px.png"></p><h2 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h2><p>本文用到的数据表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="comment">-- Table structure for T_DEPT</span></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="string">"MRBIRD"</span>.<span class="string">"T_DEPT"</span>;</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">"MRBIRD"</span>.<span class="string">"T_DEPT"</span> (</div><div class="line"><span class="string">"DEPT_ID"</span> <span class="built_in">NUMBER</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> ,</div><div class="line"><span class="string">"PARENT_ID"</span> <span class="built_in">NUMBER</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> ,</div><div class="line"><span class="string">"DEPT_NAME"</span> VARCHAR2(<span class="number">100</span> <span class="keyword">BYTE</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> ,</div><div class="line"><span class="string">"ORDER_NUM"</span> <span class="built_in">NUMBER</span> <span class="literal">NULL</span> ,</div><div class="line"><span class="string">"CREATE_TIME"</span> <span class="built_in">DATE</span> <span class="literal">NULL</span> </div><div class="line">);</div><div class="line"></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="comment">-- Records of T_DEPT</span></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"MRBIRD"</span>.<span class="string">"T_DEPT"</span> <span class="keyword">VALUES</span> (<span class="string">'1'</span>, <span class="string">'0'</span>, <span class="string">'开发部'</span>, <span class="literal">null</span>, <span class="keyword">TO_DATE</span>(<span class="string">'2018-01-04 15:42:26'</span>, <span class="string">'YYYY-MM-DD HH24:MI:SS'</span>));</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"MRBIRD"</span>.<span class="string">"T_DEPT"</span> <span class="keyword">VALUES</span> (<span class="string">'3'</span>, <span class="string">'1'</span>, <span class="string">'开发二部'</span>, <span class="literal">null</span>, <span class="keyword">TO_DATE</span>(<span class="string">'2018-01-04 15:42:29'</span>, <span class="string">'YYYY-MM-DD HH24:MI:SS'</span>));</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"MRBIRD"</span>.<span class="string">"T_DEPT"</span> <span class="keyword">VALUES</span> (<span class="string">'5'</span>, <span class="string">'0'</span>, <span class="string">'人事部'</span>, <span class="literal">null</span>, <span class="keyword">TO_DATE</span>(<span class="string">'2018-01-04 15:42:32'</span>, <span class="string">'YYYY-MM-DD HH24:MI:SS'</span>));</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"MRBIRD"</span>.<span class="string">"T_DEPT"</span> <span class="keyword">VALUES</span> (<span class="string">'2'</span>, <span class="string">'1'</span>, <span class="string">'开发一部'</span>, <span class="literal">null</span>, <span class="keyword">TO_DATE</span>(<span class="string">'2018-01-04 15:42:34'</span>, <span class="string">'YYYY-MM-DD HH24:MI:SS'</span>));</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"MRBIRD"</span>.<span class="string">"T_DEPT"</span> <span class="keyword">VALUES</span> (<span class="string">'4'</span>, <span class="string">'0'</span>, <span class="string">'市场部'</span>, <span class="literal">null</span>, <span class="keyword">TO_DATE</span>(<span class="string">'2018-01-04 15:42:36'</span>, <span class="string">'YYYY-MM-DD HH24:MI:SS'</span>));</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"MRBIRD"</span>.<span class="string">"T_DEPT"</span> <span class="keyword">VALUES</span> (<span class="string">'6'</span>, <span class="string">'0'</span>, <span class="string">'测试部'</span>, <span class="literal">null</span>, <span class="keyword">TO_DATE</span>(<span class="string">'2018-01-04 15:42:38'</span>, <span class="string">'YYYY-MM-DD HH24:MI:SS'</span>));</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"MRBIRD"</span>.<span class="string">"T_DEPT"</span> <span class="keyword">VALUES</span> (<span class="string">'7'</span>, <span class="string">'2'</span>, <span class="string">'一部分部'</span>, <span class="literal">null</span>, <span class="keyword">TO_DATE</span>(<span class="string">'2018-03-16 10:46:31'</span>, <span class="string">'YYYY-MM-DD HH24:MI:SS'</span>));</div></pre></td></tr></table></figure><p></p><p>后端框架为Spring Boot + Mybatis（通用mapper），由于本文的重点是jsTree的使用，所以获取数据的细节和数据格式的处理这里不做阐述，具体可参考文末的源码。最终通过Ajax获取到的JSON数据如下所示：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"code"</span>: <span class="number">0</span>,</div><div class="line">    <span class="attr">"msg"</span>: &#123;</div><div class="line">        <span class="attr">"id"</span>: <span class="string">"0"</span>,</div><div class="line">        <span class="attr">"icon"</span>: <span class="literal">null</span>,</div><div class="line">        <span class="attr">"url"</span>: <span class="literal">null</span>,</div><div class="line">        <span class="attr">"text"</span>: <span class="string">"根节点"</span>,</div><div class="line">        <span class="attr">"state"</span>: &#123;</div><div class="line">            <span class="attr">"opened"</span>: <span class="literal">true</span></div><div class="line">        &#125;,</div><div class="line">        <span class="attr">"checked"</span>: <span class="literal">true</span>,</div><div class="line">        <span class="attr">"attributes"</span>: <span class="literal">null</span>,</div><div class="line">        <span class="attr">"children"</span>: [&#123;</div><div class="line">            <span class="attr">"id"</span>: <span class="string">"1"</span>,</div><div class="line">            <span class="attr">"icon"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"url"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"text"</span>: <span class="string">"开发部"</span>,</div><div class="line">            <span class="attr">"state"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"checked"</span>: <span class="literal">false</span>,</div><div class="line">            <span class="attr">"attributes"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"children"</span>: [&#123;</div><div class="line">                <span class="attr">"id"</span>: <span class="string">"3"</span>,</div><div class="line">                <span class="attr">"icon"</span>: <span class="literal">null</span>,</div><div class="line">                <span class="attr">"url"</span>: <span class="literal">null</span>,</div><div class="line">                <span class="attr">"text"</span>: <span class="string">"开发二部"</span>,</div><div class="line">                <span class="attr">"state"</span>: <span class="literal">null</span>,</div><div class="line">                <span class="attr">"checked"</span>: <span class="literal">false</span>,</div><div class="line">                <span class="attr">"attributes"</span>: <span class="literal">null</span>,</div><div class="line">                <span class="attr">"children"</span>: [],</div><div class="line">                <span class="attr">"parentId"</span>: <span class="string">"1"</span>,</div><div class="line">                <span class="attr">"hasParent"</span>: <span class="literal">true</span>,</div><div class="line">                <span class="attr">"hasChildren"</span>: <span class="literal">false</span></div><div class="line">            &#125;, &#123;</div><div class="line">                <span class="attr">"id"</span>: <span class="string">"2"</span>,</div><div class="line">                <span class="attr">"icon"</span>: <span class="literal">null</span>,</div><div class="line">                <span class="attr">"url"</span>: <span class="literal">null</span>,</div><div class="line">                <span class="attr">"text"</span>: <span class="string">"开发一部"</span>,</div><div class="line">                <span class="attr">"state"</span>: <span class="literal">null</span>,</div><div class="line">                <span class="attr">"checked"</span>: <span class="literal">false</span>,</div><div class="line">                <span class="attr">"attributes"</span>: <span class="literal">null</span>,</div><div class="line">                <span class="attr">"children"</span>: [&#123;</div><div class="line">                    <span class="attr">"id"</span>: <span class="string">"7"</span>,</div><div class="line">                    <span class="attr">"icon"</span>: <span class="literal">null</span>,</div><div class="line">                    <span class="attr">"url"</span>: <span class="literal">null</span>,</div><div class="line">                    <span class="attr">"text"</span>: <span class="string">"一部分部"</span>,</div><div class="line">                    <span class="attr">"state"</span>: <span class="literal">null</span>,</div><div class="line">                    <span class="attr">"checked"</span>: <span class="literal">false</span>,</div><div class="line">                    <span class="attr">"attributes"</span>: <span class="literal">null</span>,</div><div class="line">                    <span class="attr">"children"</span>: [],</div><div class="line">                    <span class="attr">"parentId"</span>: <span class="string">"2"</span>,</div><div class="line">                    <span class="attr">"hasParent"</span>: <span class="literal">true</span>,</div><div class="line">                    <span class="attr">"hasChildren"</span>: <span class="literal">false</span></div><div class="line">                &#125;],</div><div class="line">                <span class="attr">"parentId"</span>: <span class="string">"1"</span>,</div><div class="line">                <span class="attr">"hasParent"</span>: <span class="literal">true</span>,</div><div class="line">                <span class="attr">"hasChildren"</span>: <span class="literal">true</span></div><div class="line">            &#125;],</div><div class="line">            <span class="attr">"parentId"</span>: <span class="string">"0"</span>,</div><div class="line">            <span class="attr">"hasParent"</span>: <span class="literal">false</span>,</div><div class="line">            <span class="attr">"hasChildren"</span>: <span class="literal">true</span></div><div class="line">        &#125;, &#123;</div><div class="line">            <span class="attr">"id"</span>: <span class="string">"5"</span>,</div><div class="line">            <span class="attr">"icon"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"url"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"text"</span>: <span class="string">"人事部"</span>,</div><div class="line">            <span class="attr">"state"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"checked"</span>: <span class="literal">false</span>,</div><div class="line">            <span class="attr">"attributes"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"children"</span>: [],</div><div class="line">            <span class="attr">"parentId"</span>: <span class="string">"0"</span>,</div><div class="line">            <span class="attr">"hasParent"</span>: <span class="literal">false</span>,</div><div class="line">            <span class="attr">"hasChildren"</span>: <span class="literal">false</span></div><div class="line">        &#125;, &#123;</div><div class="line">            <span class="attr">"id"</span>: <span class="string">"4"</span>,</div><div class="line">            <span class="attr">"icon"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"url"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"text"</span>: <span class="string">"市场部"</span>,</div><div class="line">            <span class="attr">"state"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"checked"</span>: <span class="literal">false</span>,</div><div class="line">            <span class="attr">"attributes"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"children"</span>: [],</div><div class="line">            <span class="attr">"parentId"</span>: <span class="string">"0"</span>,</div><div class="line">            <span class="attr">"hasParent"</span>: <span class="literal">false</span>,</div><div class="line">            <span class="attr">"hasChildren"</span>: <span class="literal">false</span></div><div class="line">        &#125;, &#123;</div><div class="line">            <span class="attr">"id"</span>: <span class="string">"6"</span>,</div><div class="line">            <span class="attr">"icon"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"url"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"text"</span>: <span class="string">"测试部"</span>,</div><div class="line">            <span class="attr">"state"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"checked"</span>: <span class="literal">false</span>,</div><div class="line">            <span class="attr">"attributes"</span>: <span class="literal">null</span>,</div><div class="line">            <span class="attr">"children"</span>: [],</div><div class="line">            <span class="attr">"parentId"</span>: <span class="string">"0"</span>,</div><div class="line">            <span class="attr">"hasParent"</span>: <span class="literal">false</span>,</div><div class="line">            <span class="attr">"hasChildren"</span>: <span class="literal">false</span></div><div class="line">        &#125;],</div><div class="line">        <span class="attr">"parentId"</span>: <span class="string">""</span>,</div><div class="line">        <span class="attr">"hasParent"</span>: <span class="literal">false</span>,</div><div class="line">        <span class="attr">"hasChildren"</span>: <span class="literal">true</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><h2 id="基本使用方法"><a href="#基本使用方法" class="headerlink" title="基本使用方法"></a>基本使用方法</h2><p>使用Ajax从后台获取到如上所示格式的JSON数据（也就是<code>r.msg</code>）,然后使用jsTree生成树形控件：</p><p>HTML:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"deptTree"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>JavaScript:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&lt;script data-th-inline=<span class="string">"javascript"</span>&gt;</div><div class="line"><span class="keyword">var</span> ctx = [[@&#123;/&#125;]];</div><div class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    createDeptTree();</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">createDeptTree</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    $.post(ctx + <span class="string">"dept/tree"</span>, &#123;&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">r</span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> data = r.msg;</div><div class="line">        $(<span class="string">'#deptTree'</span>).jstree(&#123;</div><div class="line">            <span class="string">"core"</span>: &#123;</div><div class="line">                <span class="string">'data'</span>: data.children</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;)</div><div class="line">&#125;</div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure><p></p><p>效果如下所示：</p><p><link href="../jsTree/style.min.css" rel="stylesheet" type="text/css"></p><p></p><style>div.deptTree{padding:1rem;width:25%;border:1px solid #efefef}</style><p></p><p></p><div id="deptTree1" class="deptTree"></div><p></p><script src="https://cdn.bootcss.com/jquery/2.2.0/jquery.min.js"></script><script src="https://cdn.bootcss.com/jstree/3.3.5/jstree.min.js"></script><script>$("#deptTree1").jstree({core:{data:[{id:"1",icon:null,url:null,text:"开发部",state:null,checked:!1,attributes:null,children:[{id:"3",icon:null,url:null,text:"开发二部",state:null,checked:!1,attributes:null,children:[],parentId:"1",hasParent:!0,hasChildren:!1},{id:"2",icon:null,url:null,text:"开发一部",state:null,checked:!1,attributes:null,children:[{id:"7",icon:null,url:null,text:"一部分部",state:null,checked:!1,attributes:null,children:[],parentId:"2",hasParent:!0,hasChildren:!1}],parentId:"1",hasParent:!0,hasChildren:!0}],parentId:"0",hasParent:!1,hasChildren:!0},{id:"5",icon:null,url:null,text:"人事部",state:null,checked:!1,attributes:null,children:[],parentId:"0",hasParent:!1,hasChildren:!1},{id:"4",icon:null,url:null,text:"市场部",state:null,checked:!1,attributes:null,children:[],parentId:"0",hasParent:!1,hasChildren:!1},{id:"6",icon:null,url:null,text:"测试部",state:null,checked:!1,attributes:null,children:[],parentId:"0",hasParent:!1,hasChildren:!1}]}})</script><h2 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h2><p>上面介绍了最基本的jsTree使用方法，下面开始介绍一些常用的jsTree操作。</p><h3 id="显示Checkbox"><a href="#显示Checkbox" class="headerlink" title="显示Checkbox"></a>显示Checkbox</h3><p>JavaScript代码如下所示：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#deptTree'</span>).jstree(&#123;</div><div class="line">    <span class="string">"core"</span>: &#123;</div><div class="line">        <span class="string">'data'</span>: data.children</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"plugins"</span> : [ <span class="string">"checkbox"</span> ]</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p></p><p>显示效果如下：</p><p></p><div id="deptTree2" class="deptTree"></div><p></p><script>$("#deptTree2").jstree({core:{data:[{id:"1",icon:null,url:null,text:"开发部",state:null,checked:!1,attributes:null,children:[{id:"3",icon:null,url:null,text:"开发二部",state:null,checked:!1,attributes:null,children:[],parentId:"1",hasParent:!0,hasChildren:!1},{id:"2",icon:null,url:null,text:"开发一部",state:null,checked:!1,attributes:null,children:[{id:"7",icon:null,url:null,text:"一部分部",state:null,checked:!1,attributes:null,children:[],parentId:"2",hasParent:!0,hasChildren:!1}],parentId:"1",hasParent:!0,hasChildren:!0}],parentId:"0",hasParent:!1,hasChildren:!0},{id:"5",icon:null,url:null,text:"人事部",state:null,checked:!1,attributes:null,children:[],parentId:"0",hasParent:!1,hasChildren:!1},{id:"4",icon:null,url:null,text:"市场部",state:null,checked:!1,attributes:null,children:[],parentId:"0",hasParent:!1,hasChildren:!1},{id:"6",icon:null,url:null,text:"测试部",state:null,checked:!1,attributes:null,children:[],parentId:"0",hasParent:!1,hasChildren:!1}]},plugins:["checkbox"]})</script>此时，被选中的选项默认会有浅蓝色的背景，如果想要去除，只需将js代码改为：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#deptTree'</span>).jstree(&#123;</div><div class="line">    <span class="string">"core"</span>: &#123;</div><div class="line">        <span class="string">'data'</span>: data.children</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"plugins"</span> : [ <span class="string">"checkbox"</span> ],</div><div class="line">    <span class="string">"checkbox"</span> : &#123;</div><div class="line">      <span class="string">"keep_selected_style"</span> : <span class="literal">false</span></div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>效果如下所示：<div id="deptTree3" class="deptTree"></div><script>$("#deptTree3").jstree({core:{data:[{id:"1",icon:null,url:null,text:"开发部",state:null,checked:!1,attributes:null,children:[{id:"3",icon:null,url:null,text:"开发二部",state:null,checked:!1,attributes:null,children:[],parentId:"1",hasParent:!0,hasChildren:!1},{id:"2",icon:null,url:null,text:"开发一部",state:null,checked:!1,attributes:null,children:[{id:"7",icon:null,url:null,text:"一部分部",state:null,checked:!1,attributes:null,children:[],parentId:"2",hasParent:!0,hasChildren:!1}],parentId:"1",hasParent:!0,hasChildren:!0}],parentId:"0",hasParent:!1,hasChildren:!0},{id:"5",icon:null,url:null,text:"人事部",state:null,checked:!1,attributes:null,children:[],parentId:"0",hasParent:!1,hasChildren:!1},{id:"4",icon:null,url:null,text:"市场部",state:null,checked:!1,attributes:null,children:[],parentId:"0",hasParent:!1,hasChildren:!1},{id:"6",icon:null,url:null,text:"测试部",state:null,checked:!1,attributes:null,children:[],parentId:"0",hasParent:!1,hasChildren:!1}]},plugins:["checkbox"],checkbox:{keep_selected_style:!1}})</script><h3 id="Wholerow插件"><a href="#Wholerow插件" class="headerlink" title="Wholerow插件"></a>Wholerow插件</h3><p>该插件可以给选中的项目或者hover的项目添加一个行级别的背景色，js代码如下所示：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#deptTree'</span>).jstree(&#123;</div><div class="line">    <span class="string">"core"</span>: &#123;</div><div class="line">        <span class="string">'data'</span>: data.children</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"plugins"</span> : [ <span class="string">"checkbox"</span>, <span class="string">"wholerow"</span> ]</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p></p><p>效果如下所示：</p><p></p><div id="deptTree4" class="deptTree"></div><p></p><script>$("#deptTree4").jstree({core:{data:[{id:"1",icon:null,url:null,text:"开发部",state:null,checked:!1,attributes:null,children:[{id:"3",icon:null,url:null,text:"开发二部",state:null,checked:!1,attributes:null,children:[],parentId:"1",hasParent:!0,hasChildren:!1},{id:"2",icon:null,url:null,text:"开发一部",state:null,checked:!1,attributes:null,children:[{id:"7",icon:null,url:null,text:"一部分部",state:null,checked:!1,attributes:null,children:[],parentId:"2",hasParent:!0,hasChildren:!1}],parentId:"1",hasParent:!0,hasChildren:!0}],parentId:"0",hasParent:!1,hasChildren:!0},{id:"5",icon:null,url:null,text:"人事部",state:null,checked:!1,attributes:null,children:[],parentId:"0",hasParent:!1,hasChildren:!1},{id:"4",icon:null,url:null,text:"市场部",state:null,checked:!1,attributes:null,children:[],parentId:"0",hasParent:!1,hasChildren:!1},{id:"6",icon:null,url:null,text:"测试部",state:null,checked:!1,attributes:null,children:[],parentId:"0",hasParent:!1,hasChildren:!1}]},plugins:["checkbox","wholerow"]})</script><p>添加该插件后，控件前的虚线没了，具体原因未知=。=</p><h3 id="取消父子关联"><a href="#取消父子关联" class="headerlink" title="取消父子关联"></a>取消父子关联</h3><p>默认情况下，选中父节点后，其下的所有子节点也会跟着被选中，取消父子节点关联只需添加<code>&quot;checkbox&quot;: {&quot;three_state&quot;: false}</code>即可：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#deptTree'</span>).jstree(&#123;</div><div class="line">    <span class="string">"core"</span>: &#123;</div><div class="line">        <span class="string">'data'</span>: data.children</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"plugins"</span> : [ <span class="string">"checkbox"</span> ],</div><div class="line">    <span class="string">"checkbox"</span>: &#123;</div><div class="line">        <span class="string">"three_state"</span>: <span class="literal">false</span> <span class="comment">// 取消选择父节点后选中所有子节点</span></div><div class="line">    &#125;,</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p></p><p>效果如下所示：</p><p></p><div id="deptTree5" class="deptTree"></div><p></p><script>$("#deptTree5").jstree({core:{data:[{id:"1",icon:null,url:null,text:"开发部",state:null,checked:!1,attributes:null,children:[{id:"3",icon:null,url:null,text:"开发二部",state:null,checked:!1,attributes:null,children:[],parentId:"1",hasParent:!0,hasChildren:!1},{id:"2",icon:null,url:null,text:"开发一部",state:null,checked:!1,attributes:null,children:[{id:"7",icon:null,url:null,text:"一部分部",state:null,checked:!1,attributes:null,children:[],parentId:"2",hasParent:!0,hasChildren:!1}],parentId:"1",hasParent:!0,hasChildren:!0}],parentId:"0",hasParent:!1,hasChildren:!0},{id:"5",icon:null,url:null,text:"人事部",state:null,checked:!1,attributes:null,children:[],parentId:"0",hasParent:!1,hasChildren:!1},{id:"4",icon:null,url:null,text:"市场部",state:null,checked:!1,attributes:null,children:[],parentId:"0",hasParent:!1,hasChildren:!1},{id:"6",icon:null,url:null,text:"测试部",state:null,checked:!1,attributes:null,children:[],parentId:"0",hasParent:!1,hasChildren:!1}]},plugins:["checkbox"],checkbox:{three_state:!1}})</script><h3 id="设置单选"><a href="#设置单选" class="headerlink" title="设置单选"></a>设置单选</h3><p>设置单选的前提是必须先取消父子关联，然后在<code>core</code>里添加：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#deptTree'</span>).jstree(&#123;</div><div class="line">    <span class="string">"core"</span>: &#123;</div><div class="line">        <span class="string">'data'</span>: data.children,</div><div class="line">        <span class="string">'multiple'</span>: <span class="literal">false</span> <span class="comment">// 取消多选</span></div><div class="line">    &#125;,</div><div class="line">    <span class="string">"plugins"</span> : [ <span class="string">"checkbox"</span> ],</div><div class="line">    <span class="string">"checkbox"</span>: &#123;</div><div class="line">        <span class="string">"three_state"</span>: <span class="literal">false</span> <span class="comment">// 取消选择父节点后选中所有子节点</span></div><div class="line">    &#125;,</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p></p><p>效果如下所示：</p><p></p><div id="deptTree6" class="deptTree"></div><p></p><script>$("#deptTree6").jstree({core:{data:[{id:"1",icon:null,url:null,text:"开发部",state:null,checked:!1,attributes:null,children:[{id:"3",icon:null,url:null,text:"开发二部",state:null,checked:!1,attributes:null,children:[],parentId:"1",hasParent:!0,hasChildren:!1},{id:"2",icon:null,url:null,text:"开发一部",state:null,checked:!1,attributes:null,children:[{id:"7",icon:null,url:null,text:"一部分部",state:null,checked:!1,attributes:null,children:[],parentId:"2",hasParent:!0,hasChildren:!1}],parentId:"1",hasParent:!0,hasChildren:!0}],parentId:"0",hasParent:!1,hasChildren:!0},{id:"5",icon:null,url:null,text:"人事部",state:null,checked:!1,attributes:null,children:[],parentId:"0",hasParent:!1,hasChildren:!1},{id:"4",icon:null,url:null,text:"市场部",state:null,checked:!1,attributes:null,children:[],parentId:"0",hasParent:!1,hasChildren:!1},{id:"6",icon:null,url:null,text:"测试部",state:null,checked:!1,attributes:null,children:[],parentId:"0",hasParent:!1,hasChildren:!1}],multiple:!1},plugins:["checkbox"],checkbox:{three_state:!1}})</script><h3 id="全部展开"><a href="#全部展开" class="headerlink" title="全部展开"></a>全部展开</h3><p>如果需要初始化控件的时候展开树，可调用jsTree的<code>open_all()</code>方法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#deptTree'</span>).jstree(&#123;</div><div class="line">    <span class="string">"core"</span>: &#123;</div><div class="line">        <span class="string">'data'</span>: data.children</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"plugins"</span> : [ <span class="string">"checkbox"</span> ]</div><div class="line">&#125;).on(<span class="string">"loaded.jstree"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">event, data</span>) </span>&#123;</div><div class="line">    $(<span class="string">'#deptTree'</span>).jstree().open_all();</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p></p><p>或者设置<code>state</code>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#deptTree'</span>).jstree(&#123;</div><div class="line">    <span class="string">"core"</span>: &#123;</div><div class="line">        <span class="string">'data'</span>: data.children</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"plugins"</span> : [ <span class="string">"checkbox"</span>, <span class="string">"state"</span> ],</div><div class="line">    <span class="string">'state'</span>: &#123;</div><div class="line">        <span class="string">"opened"</span>: <span class="literal">true</span>,</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p></p><p>效果如下所示：</p><p></p><div id="deptTree7" class="deptTree"></div><p></p><script>$("#deptTree7").jstree({core:{state:{opened:!0},data:[{id:"1",icon:null,url:null,text:"开发部",state:null,checked:!1,attributes:null,children:[{id:"3",icon:null,url:null,text:"开发二部",state:null,checked:!1,attributes:null,children:[],parentId:"1",hasParent:!0,hasChildren:!1},{id:"2",icon:null,url:null,text:"开发一部",state:null,checked:!1,attributes:null,children:[{id:"7",icon:null,url:null,text:"一部分部",state:null,checked:!1,attributes:null,children:[],parentId:"2",hasParent:!0,hasChildren:!1}],parentId:"1",hasParent:!0,hasChildren:!0}],parentId:"0",hasParent:!1,hasChildren:!0},{id:"5",icon:null,url:null,text:"人事部",state:null,checked:!1,attributes:null,children:[],parentId:"0",hasParent:!1,hasChildren:!1},{id:"4",icon:null,url:null,text:"市场部",state:null,checked:!1,attributes:null,children:[],parentId:"0",hasParent:!1,hasChildren:!1},{id:"6",icon:null,url:null,text:"测试部",state:null,checked:!1,attributes:null,children:[],parentId:"0",hasParent:!1,hasChildren:!1}]},plugins:["checkbox"]}).on("loaded.jstree",function(e,l){$("#deptTree7").jstree().open_all()})</script><h3 id="默认选中"><a href="#默认选中" class="headerlink" title="默认选中"></a>默认选中</h3><p>jsTree可以在初始化后默认选中某些节点：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#deptTree'</span>).jstree(&#123;</div><div class="line">    <span class="string">"core"</span>: &#123;</div><div class="line">        <span class="string">'data'</span>: data.children</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"plugins"</span> : [ <span class="string">"checkbox"</span> ],</div><div class="line">    <span class="string">"checkbox"</span>: &#123;</div><div class="line">        <span class="string">"three_state"</span>: <span class="literal">false</span> </div><div class="line">    &#125;,</div><div class="line">&#125;).on(<span class="string">"loaded.jstree"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">event, data</span>) </span>&#123;</div><div class="line">    $(<span class="string">'#deptTree'</span>).jstree().open_all();</div><div class="line">    $(<span class="string">'#deptTree'</span>).jstree(<span class="string">'select_node'</span>, [<span class="number">5</span>, <span class="number">7</span>], <span class="literal">true</span>);</div><div class="line">    <span class="built_in">console</span>.log($(<span class="string">'#deptTree'</span>).jstree(<span class="literal">true</span>).get_selected()); <span class="comment">// ["5", "7"]</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure><p></p><p>效果如下所示：</p><p></p><div id="deptTree8" class="deptTree"></div><p></p><script>$("#deptTree8").jstree({core:{data:[{id:"1",icon:null,url:null,text:"开发部",state:null,checked:!1,attributes:null,children:[{id:"3",icon:null,url:null,text:"开发二部",state:null,checked:!1,attributes:null,children:[],parentId:"1",hasParent:!0,hasChildren:!1},{id:"2",icon:null,url:null,text:"开发一部",state:null,checked:!1,attributes:null,children:[{id:"7",icon:null,url:null,text:"一部分部",state:null,checked:!1,attributes:null,children:[],parentId:"2",hasParent:!0,hasChildren:!1}],parentId:"1",hasParent:!0,hasChildren:!0}],parentId:"0",hasParent:!1,hasChildren:!0},{id:"5",icon:null,url:null,text:"人事部",state:null,checked:!1,attributes:null,children:[],parentId:"0",hasParent:!1,hasChildren:!1},{id:"4",icon:null,url:null,text:"市场部",state:null,checked:!1,attributes:null,children:[],parentId:"0",hasParent:!1,hasChildren:!1},{id:"6",icon:null,url:null,text:"测试部",state:null,checked:!1,attributes:null,children:[],parentId:"0",hasParent:!1,hasChildren:!1}]},plugins:["checkbox"],checkbox:{three_state:!1}}).on("loaded.jstree",function(e,l){$("#deptTree8").jstree().open_all(),$("#deptTree8").jstree("select_node",[5,7],!0)})</script><h3 id="绑定选取监听"><a href="#绑定选取监听" class="headerlink" title="绑定选取监听"></a>绑定选取监听</h3><p>jsTree可以在选中和取消选中的时候绑定监听事件：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#deptTree'</span>).jstree(&#123;</div><div class="line">    <span class="string">"core"</span>: &#123;</div><div class="line">        <span class="string">'data'</span>: data.children</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"plugins"</span> : [ <span class="string">"checkbox"</span> ]</div><div class="line">&#125;).on(<span class="string">"changed.jstree"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e, data</span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(data.changed.selected); <span class="comment">// newly selected</span></div><div class="line">    <span class="built_in">console</span>.log(data.changed.deselected); <span class="comment">// newly deselected</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure><p></p><p>效果如下所示：</p><p></p><div id="deptTree9" class="deptTree"></div><p></p><script>$("#deptTree9").jstree({core:{data:[{id:"1",icon:null,url:null,text:"开发部",state:null,checked:!1,attributes:null,children:[{id:"3",icon:null,url:null,text:"开发二部",state:null,checked:!1,attributes:null,children:[],parentId:"1",hasParent:!0,hasChildren:!1},{id:"2",icon:null,url:null,text:"开发一部",state:null,checked:!1,attributes:null,children:[{id:"7",icon:null,url:null,text:"一部分部",state:null,checked:!1,attributes:null,children:[],parentId:"2",hasParent:!0,hasChildren:!1}],parentId:"1",hasParent:!0,hasChildren:!0}],parentId:"0",hasParent:!1,hasChildren:!0},{id:"5",icon:null,url:null,text:"人事部",state:null,checked:!1,attributes:null,children:[],parentId:"0",hasParent:!1,hasChildren:!1},{id:"4",icon:null,url:null,text:"市场部",state:null,checked:!1,attributes:null,children:[],parentId:"0",hasParent:!1,hasChildren:!1},{id:"6",icon:null,url:null,text:"测试部",state:null,checked:!1,attributes:null,children:[],parentId:"0",hasParent:!1,hasChildren:!1}]},plugins:["checkbox","changed"],checkbox:{three_state:!1}}).on("loaded.jstree",function(e,l){$("#deptTree9").jstree().open_all()}).on("changed.jstree",function(e,l){l.changed.selected.length&&alert("选中节点ID："+l.changed.selected),l.changed.deselected.length&&alert("取消选中节点ID："+l.changed.deselected)})</script><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><p>其他方法和属性可参考官方文档（官方文档写的比较抽象=。=）：<a href="https://www.jstree.com/api/" target="_blank" rel="external">https://www.jstree.com/api/</a>。</p><p>源码链接：<a href="https://drive.google.com/open?id=17rdibWmH9CunPP9vs9sQrJPj5FefzoHj" target="_blank" rel="external">https://drive.google.com/open?id=17rdibWmH9CunPP9vs9sQrJPj5FefzoHj</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Jun 06 2018 16:37:34 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;jsTree是一款基于jQuery的树形控件，具有扩展性强，可编辑和可配置的特性，支持HTML，JSON和Ajax数据加载。jsTree官网地址：&lt;a href=&quot;https://www.jstree.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.jstree.com/&lt;/a&gt;。这里主要介绍的是基于Ajax从数据库获取数据，然后生成树形菜单的用法。jsTree的皮肤可以自由定制，本文使用的是一款第三方jsTree皮肤。
    
    </summary>
    
    
      <category term="jQuery" scheme="http://mrbird.cc/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>jQuery Validate表单校验插件</title>
    <link href="http://mrbird.cc/jQuery-Validate.html"/>
    <id>http://mrbird.cc/jQuery-Validate.html</id>
    <published>2018-01-14T01:41:41.000Z</published>
    <updated>2018-04-11T01:34:15.846Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Jun 06 2018 16:37:33 GMT+0800 (中国标准时间) --><p>jQuery Validate 插件为表单提供了强大的验证功能，让客户端表单验证变得更简单，同时提供了大量的定制选项，满足应用程序各种需求。该插件捆绑了一套有用的验证方法，包括 URL 和电子邮件验证，同时提供了一个用来编写用户自定义方法的 API。官网地址为：<a href="https://jqueryvalidation.org/" target="_blank" rel="external">https://jqueryvalidation.org/</a>。<a id="more"></a></p><h2 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h2><p>引入Bootstrap（jQuery Validate并不依赖于Bootstap，这里引入Bootstrap是为了用于构建表单）：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0/css/bootstrap.min.css"</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- jQuery --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://ajax.aspnetcdn.com/ajax/jquery/jquery-2.0.0.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- popper --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/popper.js/1.12.9/umd/popper.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- bootstrap --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0/js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>引入jQuery Validate依赖：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- jquery-validate --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery-validate/1.17.0/jquery.validate.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery-validate/1.17.0/additional-methods.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery-validate/1.17.0/localization/messages_zh.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>jquery.validate.js为核心代码；additional-methods.js为扩展的校验方法，一般我们自定义的校验方法都放到这个文件里；messages_zh.js为中文汉化包。</p><h2 id="默认校验规则"><a href="#默认校验规则" class="headerlink" title="默认校验规则"></a>默认校验规则</h2><p>jquery.validate.js为我们提供了一系列的默认校验规则：</p><table><tbody><tr><th width="10%">序号</th><th width="30%">规则</th><th width="60%">描述</th></tr><tr><td>1</td><td>required:true</td><td>必须输入的字段。</td></tr><tr><td>2</td><td>remote:”check.php”</td><td>使用 ajax 方法调用 check.php 验证输入值。</td></tr><tr><td>3</td><td>email:true</td><td>必须输入正确格式的电子邮件。</td></tr><tr><td>4</td><td>url:true</td><td>必须输入正确格式的网址。</td></tr><tr><td>5</td><td>date:true</td><td>必须输入正确格式的日期。日期校验 ie6 出错，慎用。</td></tr><tr><td>6</td><td>dateISO:true</td><td>必须输入正确格式的日期（ISO），例如：2009-06-23，1998/01/22。只验证格式，不验证有效性。</td></tr><tr><td>7</td><td>number:true</td><td>必须输入合法的数字（负数，小数）。</td></tr><tr><td>8</td><td>digits:true</td><td>必须输入整数。</td></tr><tr><td>9</td><td>creditcard:</td><td>必须输入合法的信用卡号。</td></tr><tr><td>10</td><td>equalTo:”#field”</td><td>输入值必须和 #field 相同。</td></tr><tr><td>11</td><td>accept:</td><td>输入拥有合法后缀名的字符串（上传文件的后缀）。</td></tr><tr><td>12</td><td>maxlength:5</td><td>输入长度最多是 5 的字符串（汉字算一个字符）。当为checkbox时，指选中个数。</td></tr><tr><td>13</td><td>minlength:10</td><td>输入长度最小是 10 的字符串（汉字算一个字符）。当为checkbox时，指选中个数。</td></tr><tr><td>14</td><td>rangelength:[5,10]</td><td>输入长度必须介于 5 和 10 之间的字符串（汉字算一个字符）。当为checkbox时，指选中个数。</td></tr><tr><td>15</td><td>range:[5,10]</td><td>输入值必须介于 5 和 10 之间。</td></tr><tr><td>16</td><td>max:5</td><td>输入值不能大于 5。</td></tr><tr><td>17</td><td>min:10</td><td>输入值不能小于 10。</td></tr></tbody></table><p>默认的提示（messages_zh.js）：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">$.extend($.validator.messages, &#123;</div><div class="line">    <span class="attr">required</span>: <span class="string">"这是必填字段"</span>,</div><div class="line">    <span class="attr">remote</span>: <span class="string">"请修正此字段"</span>,</div><div class="line">    <span class="attr">email</span>: <span class="string">"请输入有效的电子邮件地址"</span>,</div><div class="line">    <span class="attr">url</span>: <span class="string">"请输入有效的网址"</span>,</div><div class="line">    <span class="attr">date</span>: <span class="string">"请输入有效的日期"</span>,</div><div class="line">    <span class="attr">dateISO</span>: <span class="string">"请输入有效的日期 (YYYY-MM-DD)"</span>,</div><div class="line">    <span class="attr">number</span>: <span class="string">"请输入有效的数字"</span>,</div><div class="line">    <span class="attr">digits</span>: <span class="string">"只能输入数字"</span>,</div><div class="line">    <span class="attr">creditcard</span>: <span class="string">"请输入有效的信用卡号码"</span>,</div><div class="line">    <span class="attr">equalTo</span>: <span class="string">"你的输入不相同"</span>,</div><div class="line">    <span class="attr">extension</span>: <span class="string">"请输入有效的后缀"</span>,</div><div class="line">    <span class="attr">maxlength</span>: $.validator.format(<span class="string">"最多可以输入 &#123;0&#125; 个字符"</span>),</div><div class="line">    <span class="attr">minlength</span>: $.validator.format(<span class="string">"最少要输入 &#123;0&#125; 个字符"</span>),</div><div class="line">    <span class="attr">rangelength</span>: $.validator.format(<span class="string">"请输入长度在 &#123;0&#125; 到 &#123;1&#125; 之间的字符串"</span>),</div><div class="line">    <span class="attr">range</span>: $.validator.format(<span class="string">"请输入范围在 &#123;0&#125; 到 &#123;1&#125; 之间的数值"</span>),</div><div class="line">    <span class="attr">max</span>: $.validator.format(<span class="string">"请输入不大于 &#123;0&#125; 的数值"</span>),</div><div class="line">    <span class="attr">min</span>: $.validator.format(<span class="string">"请输入不小于 &#123;0&#125; 的数值"</span>)</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p></p><h2 id="自定义校验"><a href="#自定义校验" class="headerlink" title="自定义校验"></a>自定义校验</h2><p>除了使用自带的校验方法外，我们也可以添加自己的校验方法，比如添加手机号码格式的校验方法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">jQuery.validator.addMethod(<span class="string">"checkPhone"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">value, element, params</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> checkPhone = <span class="regexp">/^0?(13[0-9]|15[012356789]|17[013678]|18[0-9]|14[57])[0-9]&#123;8&#125;$/</span>;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.optional(element) || (checkPhone.test(value));</div><div class="line">&#125;, <span class="string">"请输入正确的手机号"</span>);</div></pre></td></tr></table></figure><p></p><p>value值当前校验的值，element为校验的元素，params为校验参数。</p><p>自定义的校验方法一般都添加到additional-methods.js。</p><h2 id="错误信息提示"><a href="#错误信息提示" class="headerlink" title="错误信息提示"></a>错误信息提示</h2><p>当校验不通过时，默认错误信息会插入到校验元素的后面，但当校验元素是radio或者checkbox的时候，错误信息的位置需要进行调整：</p><p><img src="img/QQ截图20180315163346.png" alt="QQ截图20180315163346.png"></p><p>调整方法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">errorPlacement: <span class="function"><span class="keyword">function</span>(<span class="params">error, element</span>) </span>&#123; <span class="comment">//指定错误信息位置</span></div><div class="line">    <span class="keyword">if</span> (element.is(<span class="string">':radio'</span>) || element.is(<span class="string">':checkbox'</span>)) &#123; <span class="comment">//如果是radio或checkbox</span></div><div class="line">        <span class="keyword">var</span> eid = element.attr(<span class="string">'name'</span>); <span class="comment">//获取元素的name属性</span></div><div class="line">        error.appendTo(element.parent().parent()); <span class="comment">//将错误信息添加当前元素的父元素的父元素后面(根据实际html结构进行调整)</span></div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        error.insertAfter(element);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>调整后： <img src="img/QQ截图20180315163539.png" alt="QQ截图20180315163539.png"></p><h2 id="后端校验"><a href="#后端校验" class="headerlink" title="后端校验"></a>后端校验</h2><p>remote选项用于后端校验，比如校验用户名的唯一性等：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">remote: &#123;</div><div class="line">    <span class="attr">url</span>: <span class="string">"user/checkUserName"</span>,</div><div class="line">    <span class="attr">type</span>: <span class="string">"get"</span>,</div><div class="line">    <span class="attr">dataType</span>: <span class="string">"json"</span>,</div><div class="line">    <span class="attr">data</span>: &#123;</div><div class="line">        <span class="attr">username</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">return</span> $(<span class="string">"input[name='username']"</span>).val();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>后端返回boolean类型即可。</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>编写个form表单：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"form"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"userName"</span> <span class="attr">placeholder</span>=<span class="string">"用户名"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">placeholder</span>=<span class="string">"密码"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>确认密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"confirm_password"</span> <span class="attr">placeholder</span>=<span class="string">"请再次输入密码"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>手机号<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"phone"</span> <span class="attr">placeholder</span>=<span class="string">"手机号"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>邮箱<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">placeholder</span>=<span class="string">"邮箱"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>地址<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"address"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>- 请选择 -<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>福州<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span>厦门<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"3"</span>&gt;</span>龙岩<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>爱好<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-check form-check-inline"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-check-input"</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"form-check-label"</span>&gt;</span>游泳<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-check form-check-inline"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-check-input"</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"form-check-label"</span>&gt;</span>唱歌<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-check form-check-inline"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-check-input"</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"3"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"form-check-label"</span>&gt;</span>睡觉<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-check form-check-inline"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-check-input"</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"form-check-label"</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-check form-check-inline"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-check-input"</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"form-check-label"</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>上传图片<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">class</span>=<span class="string">"form-control-file"</span> <span class="attr">name</span>=<span class="string">"file"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-check form-check-inline"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">class</span>=<span class="string">"form-check-input"</span> <span class="attr">name</span>=<span class="string">"subscribe"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"form-check-label"</span>&gt;</span>订阅<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>订阅方式<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-check form-check-inline"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-check-input"</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"stype"</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"form-check-label"</span>&gt;</span>RSS<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-check form-check-inline"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-check-input"</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"stype"</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"form-check-label"</span>&gt;</span>邮箱订阅<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>Submit<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"reset"</span> <span class="attr">class</span>=<span class="string">"btn btn-danger"</span>&gt;</span>Reset<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>绑定校验规则等：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div></pre></td><td class="code"><pre><div class="line">jQuery.validator.addMethod(<span class="string">"checkPhone"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">value, element, params</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> checkPhone = <span class="regexp">/^0?(13[0-9]|15[012356789]|17[013678]|18[0-9]|14[57])[0-9]&#123;8&#125;$/</span>;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.optional(element) || (checkPhone.test(value));</div><div class="line">&#125;, <span class="string">"请输入正确的手机号"</span>);</div><div class="line"></div><div class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    validateRule();</div><div class="line">    $(<span class="string">"#submit"</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> validator = $(<span class="string">".form"</span>).validate();</div><div class="line">        <span class="keyword">var</span> flag = validator.form();</div><div class="line">        <span class="keyword">if</span> (flag) &#123;</div><div class="line">            alert(<span class="string">"true"</span>);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            alert(<span class="string">"false"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">    $(<span class="string">"#reset"</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> validator = $(<span class="string">".form"</span>).validate();</div><div class="line">        validator.resetForm();</div><div class="line">    &#125;);</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">validateRule</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    $(<span class="string">".form"</span>).validate(&#123;</div><div class="line">        <span class="attr">rules</span>: &#123;</div><div class="line">            <span class="attr">userName</span>: &#123;</div><div class="line">                <span class="attr">required</span>: <span class="literal">true</span>,</div><div class="line">                <span class="attr">minlength</span>: <span class="number">3</span>,</div><div class="line">                <span class="attr">maxlength</span>: <span class="number">10</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">password</span>: &#123;</div><div class="line">                <span class="attr">required</span>: <span class="literal">true</span>,</div><div class="line">                <span class="attr">minlength</span>: <span class="number">5</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">confirm_password</span>: &#123;</div><div class="line">                <span class="attr">required</span>: <span class="literal">true</span>,</div><div class="line">                <span class="attr">minlength</span>: <span class="number">5</span>,</div><div class="line">                <span class="attr">equalTo</span>: <span class="string">"[name='password']"</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">address</span>: &#123;</div><div class="line">                <span class="attr">required</span>: <span class="literal">true</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">phone</span>: &#123;</div><div class="line">                <span class="attr">checkPhone</span>: <span class="literal">true</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">email</span>: &#123;</div><div class="line">                <span class="attr">required</span>: <span class="literal">true</span>,</div><div class="line">                <span class="attr">email</span>: <span class="literal">true</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">hobby</span>: &#123;</div><div class="line">                <span class="attr">required</span>: <span class="literal">true</span>,</div><div class="line">                <span class="attr">minlength</span>: <span class="number">2</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">sex</span>: &#123;</div><div class="line">                <span class="attr">required</span>: <span class="literal">true</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">file</span>: &#123;</div><div class="line">                <span class="attr">required</span>: <span class="literal">true</span>,</div><div class="line">                <span class="attr">accept</span>: <span class="string">"image/jpg,image/jpeg,image/png,image/gif"</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">stype</span>: &#123;</div><div class="line">                <span class="attr">required</span>: <span class="string">"[name='subscribe']:checked"</span></div><div class="line">            &#125;</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">messages</span>: &#123;</div><div class="line">            <span class="attr">userName</span>: &#123;</div><div class="line">                <span class="attr">required</span>: <span class="string">"请输入用户名"</span>,</div><div class="line">                <span class="attr">minlength</span>: <span class="string">"用户名长度不能少于&#123;0&#125;个字符"</span>,</div><div class="line">                <span class="attr">maxlength</span>: <span class="string">"用户名长度不能超过&#123;0&#125;个字符"</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">password</span>: &#123;</div><div class="line">                <span class="attr">required</span>: <span class="string">"请输入密码"</span>,</div><div class="line">                <span class="attr">minlength</span>: <span class="string">"密码长度不能小于&#123;0&#125;个字母"</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">confirm_password</span>: &#123;</div><div class="line">                <span class="attr">required</span>: <span class="string">"请输入密码"</span>,</div><div class="line">                <span class="attr">minlength</span>: <span class="string">"密码长度不能小于&#123;0&#125;个字母"</span>,</div><div class="line">                <span class="attr">equalTo</span>: <span class="string">"两次密码输入不一致"</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">address</span>: &#123;</div><div class="line">                <span class="attr">required</span>: <span class="string">"请选择地址"</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">email</span>: &#123;</div><div class="line">                <span class="attr">required</span>: <span class="string">"请输入邮箱"</span>,</div><div class="line">                <span class="attr">email</span>: <span class="string">"邮箱格式不正确"</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">hobby</span>: &#123;</div><div class="line">                <span class="attr">required</span>: <span class="string">"请选择爱好"</span>,</div><div class="line">                <span class="attr">minlength</span>: <span class="string">"至少选择&#123;0&#125;项爱好"</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">sex</span>: &#123;</div><div class="line">                <span class="attr">required</span>: <span class="string">"请选择性别"</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">file</span>: &#123;</div><div class="line">                <span class="attr">required</span>: <span class="string">"请上传附件"</span>,</div><div class="line">                <span class="attr">accept</span>: <span class="string">"只支持jpg，jpeg，png或gif后缀的图片"</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">stype</span>: &#123;</div><div class="line">                <span class="attr">required</span>: <span class="string">"请选择订阅方式"</span></div><div class="line">            &#125;</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">errorPlacement</span>: <span class="function"><span class="keyword">function</span>(<span class="params">error, element</span>) </span>&#123;</div><div class="line">            <span class="keyword">if</span> (element.is(<span class="string">':radio'</span>) || element.is(<span class="string">':checkbox'</span>)) &#123; </div><div class="line">                <span class="keyword">var</span> eid = element.attr(<span class="string">'name'</span>); </div><div class="line">                error.appendTo(element.parent().parent());</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                error.insertAfter(element);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>这里提下关于附件的格式问题，其限定的不是文件格式后缀，而是文件的<strong>MIME</strong>类型，具体可参考：<a href="/BootstrapValidator指南.html">BootstrapValidator指南</a>中列举的<strong>MIME</strong>类型。</p><p>演示效果如下：</p><p></p><p data-height="938" data-theme-id="30192" data-slug-hash="oqxJmq" data-default-tab="result" data-user="mrbird" data-embed-version="2" data-pen-title="jquery-validation" class="codepen">See the Pen <a href="https://codepen.io/mrbird/pen/oqxJmq/" target="_blank" rel="external">jquery-validation</a> by wuyouzhuguli (<a href="https://codepen.io/mrbird" target="_blank" rel="external">@mrbird</a>) on <a href="https://codepen.io" target="_blank" rel="external">CodePen</a>.</p><p></p><script async src="https://static.codepen.io/assets/embed/ei.js"></script><p>源码地址：<a href="https://drive.google.com/open?id=1lyUVNyX5VkxN3GqQz0_y_oBX3twMxPAh" target="_blank" rel="external">https://drive.google.com/open?id=1lyUVNyX5VkxN3GqQz0_y_oBX3twMxPAh</a></p><p>其他使用事项可参考：</p><ol><li><p><a href="http://www.runoob.com/jquery/jquery-plugin-validate.html" target="_blank" rel="external">http://www.runoob.com/jquery/jquery-plugin-validate.html</a></p></li><li><p><a href="https://jqueryvalidation.org/documentation/" target="_blank" rel="external">https://jqueryvalidation.org/documentation/</a></p></li></ol><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Jun 06 2018 16:37:33 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;jQuery Validate 插件为表单提供了强大的验证功能，让客户端表单验证变得更简单，同时提供了大量的定制选项，满足应用程序各种需求。该插件捆绑了一套有用的验证方法，包括 URL 和电子邮件验证，同时提供了一个用来编写用户自定义方法的 API。官网地址为：&lt;a href=&quot;https://jqueryvalidation.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://jqueryvalidation.org/&lt;/a&gt;。
    
    </summary>
    
    
      <category term="Bootstrap" scheme="http://mrbird.cc/tags/Bootstrap/"/>
    
      <category term="jQuery" scheme="http://mrbird.cc/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>树形表格插件jQuery TreeGrid</title>
    <link href="http://mrbird.cc/jQuery-TreeGrid.html"/>
    <id>http://mrbird.cc/jQuery-TreeGrid.html</id>
    <published>2018-01-10T01:45:38.000Z</published>
    <updated>2018-04-11T01:34:15.867Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Jun 06 2018 16:37:33 GMT+0800 (中国标准时间) --><p>借助树形表格插件jQuery TreeGrid，我们可以以表格的形式来展现那些带有层级关系的数据，比如部门上下级，菜单表等。jQuery TreeGrid的官方地址为：<a href="http://maxazan.github.io/jquery-treegrid/" target="_blank" rel="external">http://maxazan.github.io/jquery-treegrid/</a>。由于这里的使用环境为bootstrap，原始的jQuery TreeGrid插件显得不是那么的灵活和美观，为了在bootstrap中无缝的使用该插件，这里引用了经过二次封装的jQuery TreeGrid插件jquery.treegrid.extension.js，作者为：<a href="http://www.cnblogs.com/landeanfen/p/6776152.html" target="_blank" rel="external">http://www.cnblogs.com/landeanfen/p/6776152.html</a>。<a id="more"></a></p><h2 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h2><p>首先先引入bootstrap相关的依赖：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0/css/bootstrap.min.css"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://code.jquery.com/jquery-2.0.0.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/popper.js/1.12.9/umd/popper.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0/js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>然后引入jQuery TreeGrid依赖以及jquery.treegrid.extension.js ：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- jquery.treegrid --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">data-th-href</span>=<span class="string">"@&#123;css/jqTreeGrid/jquery.treegrid.css&#125;"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">data-th-src</span>=<span class="string">"@&#123;js/jqTreeGrid/jquery.treegrid.js&#125;"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- jquery.treegrid.extension --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">data-th-src</span>=<span class="string">"@&#123;js/jqTreeGrid/jquery.treegrid.extension.js&#125;"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>因为bootstrap没有自带图标组件，为了下文的使用，这里引入<a href="http://fontawesome.dashgame.com/" target="_blank" rel="external">font-awesome</a>:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/font-awesome/4.7.0/css/font-awesome.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></div></pre></td></tr></table></figure><p></p><h2 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h2><p>使用的数据表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="comment">-- Table structure for T_DEPT</span></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="string">"MRBIRD"</span>.<span class="string">"T_DEPT"</span>;</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">"MRBIRD"</span>.<span class="string">"T_DEPT"</span> (</div><div class="line"><span class="string">"DEPT_ID"</span> <span class="built_in">NUMBER</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> ,</div><div class="line"><span class="string">"PARENT_ID"</span> <span class="built_in">NUMBER</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> ,</div><div class="line"><span class="string">"DEPT_NAME"</span> VARCHAR2(<span class="number">100</span> <span class="keyword">BYTE</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> ,</div><div class="line"><span class="string">"ORDER_NUM"</span> <span class="built_in">NUMBER</span> <span class="literal">NULL</span> ,</div><div class="line"><span class="string">"CREATE_TIME"</span> <span class="built_in">DATE</span> <span class="literal">NULL</span> </div><div class="line">);</div><div class="line"></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="comment">-- Records of T_DEPT</span></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"MRBIRD"</span>.<span class="string">"T_DEPT"</span> <span class="keyword">VALUES</span> (<span class="string">'7'</span>, <span class="string">'2'</span>, <span class="string">'开发一部福州分部'</span>, <span class="literal">null</span>, <span class="keyword">TO_DATE</span>(<span class="string">'2018-03-15 09:32:15'</span>, <span class="string">'YYYY-MM-DD HH24:MI:SS'</span>));</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"MRBIRD"</span>.<span class="string">"T_DEPT"</span> <span class="keyword">VALUES</span> (<span class="string">'1'</span>, <span class="string">'0'</span>, <span class="string">'开发部'</span>, <span class="literal">null</span>, <span class="keyword">TO_DATE</span>(<span class="string">'2018-01-04 15:42:26'</span>, <span class="string">'YYYY-MM-DD HH24:MI:SS'</span>));</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"MRBIRD"</span>.<span class="string">"T_DEPT"</span> <span class="keyword">VALUES</span> (<span class="string">'3'</span>, <span class="string">'1'</span>, <span class="string">'开发二部'</span>, <span class="literal">null</span>, <span class="keyword">TO_DATE</span>(<span class="string">'2018-01-04 15:42:29'</span>, <span class="string">'YYYY-MM-DD HH24:MI:SS'</span>));</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"MRBIRD"</span>.<span class="string">"T_DEPT"</span> <span class="keyword">VALUES</span> (<span class="string">'5'</span>, <span class="string">'0'</span>, <span class="string">'人事部'</span>, <span class="literal">null</span>, <span class="keyword">TO_DATE</span>(<span class="string">'2018-01-04 15:42:32'</span>, <span class="string">'YYYY-MM-DD HH24:MI:SS'</span>));</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"MRBIRD"</span>.<span class="string">"T_DEPT"</span> <span class="keyword">VALUES</span> (<span class="string">'2'</span>, <span class="string">'1'</span>, <span class="string">'开发一部'</span>, <span class="literal">null</span>, <span class="keyword">TO_DATE</span>(<span class="string">'2018-01-04 15:42:34'</span>, <span class="string">'YYYY-MM-DD HH24:MI:SS'</span>));</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"MRBIRD"</span>.<span class="string">"T_DEPT"</span> <span class="keyword">VALUES</span> (<span class="string">'4'</span>, <span class="string">'0'</span>, <span class="string">'市场部'</span>, <span class="literal">null</span>, <span class="keyword">TO_DATE</span>(<span class="string">'2018-01-04 15:42:36'</span>, <span class="string">'YYYY-MM-DD HH24:MI:SS'</span>));</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"MRBIRD"</span>.<span class="string">"T_DEPT"</span> <span class="keyword">VALUES</span> (<span class="string">'6'</span>, <span class="string">'0'</span>, <span class="string">'测试部'</span>, <span class="literal">null</span>, <span class="keyword">TO_DATE</span>(<span class="string">'2018-01-04 15:42:38'</span>, <span class="string">'YYYY-MM-DD HH24:MI:SS'</span>));</div></pre></td></tr></table></figure><p></p><p>后端框架为Spring Boot + MyBatis（通用mapper和pagehelper插件），获取数据的具体细节这里不再描述，可参考文末的源码。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>编写一个简单的页面：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"form"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"input-group-addon"</span>&gt;</span>部门名称：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"deptName"</span> <span class="attr">class</span>=<span class="string">"form-control"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-success"</span> <span class="attr">onclick</span>=<span class="string">"refresh()"</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">onclick</span>=<span class="string">"search()"</span>&gt;</span>搜索<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">"deptTreeTable"</span> <span class="attr">data-mobile-responsive</span>=<span class="string">"true"</span> <span class="attr">class</span>=<span class="string">"mb-bootstrap-table text-nowrap"</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>jQuery TreeGrid插件的使用：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> ctx = [[@&#123;/&#125;]];</div><div class="line"></div><div class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    initDeptTreeTable();</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">initDeptTreeTable</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    $(<span class="string">'#deptTreeTable'</span>).bootstrapTreeTable(&#123;</div><div class="line">        <span class="attr">id</span>: <span class="string">'deptId'</span>, <span class="comment">// 选取记录返回的值</span></div><div class="line">        code: <span class="string">'deptId'</span>, <span class="comment">// 用于设置父子关系</span></div><div class="line">        parentCode: <span class="string">'parentId'</span>, <span class="comment">// 用于设置父子关系</span></div><div class="line">        rootCodeValue: <span class="literal">null</span>, <span class="comment">//设置根节点code值----可指定根节点，默认为null,"",0,"0"</span></div><div class="line">        data: [], <span class="comment">// 构造table的数据集合，如果是ajax请求则不必填写</span></div><div class="line">        type: <span class="string">"GET"</span>, <span class="comment">// 请求数据的ajax类型</span></div><div class="line">        url: ctx + <span class="string">'dept/list'</span>, <span class="comment">// 请求数据的ajax的url</span></div><div class="line">        ajaxParams: &#123;</div><div class="line">            <span class="attr">deptName</span>: $(<span class="string">".form"</span>).find(<span class="string">"input[name='deptName']"</span>).val().trim()</div><div class="line">        &#125;, <span class="comment">// 请求数据的ajax的data属性</span></div><div class="line">        expandColumn: <span class="number">2</span>, <span class="comment">// 在哪一列上面显示展开按钮</span></div><div class="line">        expandAll: <span class="literal">true</span>, <span class="comment">// 是否全部展开</span></div><div class="line">        striped: <span class="literal">true</span>, <span class="comment">// 是否各行渐变色</span></div><div class="line">        columns: [&#123;</div><div class="line">                <span class="attr">field</span>: <span class="string">'selectItem'</span>,</div><div class="line">                <span class="attr">checkbox</span>: <span class="literal">true</span></div><div class="line">            &#125;,</div><div class="line">            &#123;</div><div class="line">                <span class="attr">title</span>: <span class="string">'编号'</span>,</div><div class="line">                <span class="attr">field</span>: <span class="string">'deptId'</span>,</div><div class="line">                <span class="attr">width</span>: <span class="string">'50px'</span></div><div class="line">            &#125;,</div><div class="line">            &#123;</div><div class="line">                <span class="attr">title</span>: <span class="string">'名称'</span>,</div><div class="line">                <span class="attr">field</span>: <span class="string">'deptName'</span></div><div class="line">            &#125;,</div><div class="line">            &#123;</div><div class="line">                <span class="attr">title</span>: <span class="string">'创建时间'</span>,</div><div class="line">                <span class="attr">field</span>: <span class="string">'createTime'</span></div><div class="line">            &#125;</div><div class="line">        ], <span class="comment">// 设置列</span></div><div class="line">        toolbar: <span class="literal">null</span>, <span class="comment">//顶部工具条</span></div><div class="line">        height: <span class="number">0</span>,</div><div class="line">        <span class="attr">expanderExpandedClass</span>: <span class="string">'fa fa-chevron-down'</span>, <span class="comment">// 展开的按钮的图标</span></div><div class="line">        expanderCollapsedClass: <span class="string">'fa fa-chevron-up'</span> <span class="comment">// 缩起的按钮的图标</span></div><div class="line">    &#125;);</div><div class="line">&#125;</div><div class="line"><span class="comment">// 搜索方法</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    initDeptTreeTable();</div><div class="line">&#125;</div><div class="line"><span class="comment">// 重置方法</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">refresh</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    $(<span class="string">".form"</span>)[<span class="number">0</span>].reset();</div><div class="line">    search();</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>参数说明如注解所示，其中expanderExpandedClass和expanderCollapsedClass为展开和缩起的图标，这里使用的是文章开始引入的font-awesome。</p><p>后端返回的JSON数据如下所示：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">[&#123;</div><div class="line">    <span class="attr">"deptId"</span>: <span class="number">1</span>,</div><div class="line">    <span class="attr">"parentId"</span>: <span class="number">0</span>,</div><div class="line">    <span class="attr">"deptName"</span>: <span class="string">"开发部"</span>,</div><div class="line">    <span class="attr">"orderNum"</span>: <span class="literal">null</span>,</div><div class="line">    <span class="attr">"createTime"</span>: <span class="number">1515051746000</span></div><div class="line">&#125;, &#123;</div><div class="line">    <span class="attr">"deptId"</span>: <span class="number">2</span>,</div><div class="line">    <span class="attr">"parentId"</span>: <span class="number">1</span>,</div><div class="line">    <span class="attr">"deptName"</span>: <span class="string">"开发一部"</span>,</div><div class="line">    <span class="attr">"orderNum"</span>: <span class="literal">null</span>,</div><div class="line">    <span class="attr">"createTime"</span>: <span class="number">1515051754000</span></div><div class="line">&#125;, &#123;</div><div class="line">    <span class="attr">"deptId"</span>: <span class="number">3</span>,</div><div class="line">    <span class="attr">"parentId"</span>: <span class="number">1</span>,</div><div class="line">    <span class="attr">"deptName"</span>: <span class="string">"开发二部"</span>,</div><div class="line">    <span class="attr">"orderNum"</span>: <span class="literal">null</span>,</div><div class="line">    <span class="attr">"createTime"</span>: <span class="number">1515051749000</span></div><div class="line">&#125;, &#123;</div><div class="line">    <span class="attr">"deptId"</span>: <span class="number">4</span>,</div><div class="line">    <span class="attr">"parentId"</span>: <span class="number">0</span>,</div><div class="line">    <span class="attr">"deptName"</span>: <span class="string">"市场部"</span>,</div><div class="line">    <span class="attr">"orderNum"</span>: <span class="literal">null</span>,</div><div class="line">    <span class="attr">"createTime"</span>: <span class="number">1515051756000</span></div><div class="line">&#125;, &#123;</div><div class="line">    <span class="attr">"deptId"</span>: <span class="number">5</span>,</div><div class="line">    <span class="attr">"parentId"</span>: <span class="number">0</span>,</div><div class="line">    <span class="attr">"deptName"</span>: <span class="string">"人事部"</span>,</div><div class="line">    <span class="attr">"orderNum"</span>: <span class="literal">null</span>,</div><div class="line">    <span class="attr">"createTime"</span>: <span class="number">1515051752000</span></div><div class="line">&#125;, &#123;</div><div class="line">    <span class="attr">"deptId"</span>: <span class="number">6</span>,</div><div class="line">    <span class="attr">"parentId"</span>: <span class="number">0</span>,</div><div class="line">    <span class="attr">"deptName"</span>: <span class="string">"测试部"</span>,</div><div class="line">    <span class="attr">"orderNum"</span>: <span class="literal">null</span>,</div><div class="line">    <span class="attr">"createTime"</span>: <span class="number">1515051758000</span></div><div class="line">&#125;, &#123;</div><div class="line">    <span class="attr">"deptId"</span>: <span class="number">7</span>,</div><div class="line">    <span class="attr">"parentId"</span>: <span class="number">2</span>,</div><div class="line">    <span class="attr">"deptName"</span>: <span class="string">"开发一部福州分部"</span>,</div><div class="line">    <span class="attr">"orderNum"</span>: <span class="literal">null</span>,</div><div class="line">    <span class="attr">"createTime"</span>: <span class="number">1521077535000</span></div><div class="line">&#125;]</div></pre></td></tr></table></figure><p></p><p>页面显示效果如下： <img src="img/QQ截图20180315103450.png" alt="QQ截图20180315103450.png"></p><p>其实，在实际使用中我们并不需要配置那么多参数，查看jquery.treegrid.extension.js源码可发现，其默认参数为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">$.fn.bootstrapTreeTable.defaults = &#123;</div><div class="line">    <span class="attr">id</span>: <span class="string">'menuId'</span>,</div><div class="line">    <span class="attr">code</span>: <span class="string">'menuId'</span>,</div><div class="line">    <span class="attr">parentCode</span>: <span class="string">'parentId'</span>,</div><div class="line">    <span class="attr">rootCodeValue</span>: <span class="literal">null</span>,</div><div class="line">    <span class="attr">data</span>: [],</div><div class="line">    <span class="attr">type</span>: <span class="string">"GET"</span>,</div><div class="line">    <span class="attr">url</span>: <span class="literal">null</span>,</div><div class="line">    <span class="attr">ajaxParams</span>: &#123;&#125;,</div><div class="line">    <span class="attr">expandColumn</span>: <span class="literal">null</span>,</div><div class="line">    <span class="attr">expandAll</span>: <span class="literal">true</span>,</div><div class="line">    <span class="attr">striped</span>: <span class="literal">false</span>,</div><div class="line">    <span class="attr">columns</span>: [],</div><div class="line">    <span class="attr">toolbar</span>: <span class="literal">null</span>,</div><div class="line">    <span class="attr">height</span>: <span class="number">0</span>,</div><div class="line">    <span class="attr">expanderExpandedClass</span>: <span class="string">'fa fa-chevron-down'</span>,</div><div class="line">    <span class="attr">expanderCollapsedClass</span>: <span class="string">'fa fa-chevron-up'</span></div><div class="line"></div><div class="line">&#125;;</div></pre></td></tr></table></figure><p></p><p>所以使用的时候只需配置几个我们关注的参数即可：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#deptTreeTable'</span>).bootstrapTreeTable(&#123;</div><div class="line">    <span class="attr">id</span>: <span class="string">'deptId'</span>,</div><div class="line">    <span class="attr">code</span>: <span class="string">'deptId'</span>,</div><div class="line">    <span class="attr">parentCode</span>: <span class="string">'parentId'</span>,</div><div class="line">    <span class="attr">url</span>: ctx + <span class="string">'dept/list'</span>,</div><div class="line">    <span class="attr">ajaxParams</span>: &#123;</div><div class="line">        <span class="attr">deptName</span>: $(<span class="string">".form"</span>).find(<span class="string">"input[name='deptName']"</span>).val().trim()</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">expandColumn</span>: <span class="number">2</span>,</div><div class="line">    <span class="attr">striped</span>: <span class="literal">true</span>,</div><div class="line">    <span class="attr">columns</span>: [&#123;</div><div class="line">            <span class="attr">field</span>: <span class="string">'selectItem'</span>,</div><div class="line">            <span class="attr">checkbox</span>: <span class="literal">true</span></div><div class="line">        &#125;,</div><div class="line">        &#123;</div><div class="line">            <span class="attr">title</span>: <span class="string">'编号'</span>,</div><div class="line">            <span class="attr">field</span>: <span class="string">'deptId'</span>,</div><div class="line">            <span class="attr">width</span>: <span class="string">'50px'</span></div><div class="line">        &#125;,</div><div class="line">        &#123;</div><div class="line">            <span class="attr">title</span>: <span class="string">'名称'</span>,</div><div class="line">            <span class="attr">field</span>: <span class="string">'deptName'</span></div><div class="line">        &#125;,</div><div class="line">        &#123;</div><div class="line">            <span class="attr">title</span>: <span class="string">'创建时间'</span>,</div><div class="line">            <span class="attr">field</span>: <span class="string">'createTime'</span></div><div class="line">        &#125;</div><div class="line">    ]</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p></p><p>jquery.treegrid.extension.js还封装了一些方法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">$.fn.bootstrapTreeTable.methods = &#123;</div><div class="line">    <span class="comment">// 返回选中记录的id（返回的id由配置中的id属性指定）</span></div><div class="line">    <span class="comment">// 为了兼容bootstrap-table的写法，统一返回数组，这里只返回了指定的id</span></div><div class="line">    getSelections: <span class="function"><span class="keyword">function</span>(<span class="params">target, data</span>) </span>&#123;</div><div class="line">        <span class="comment">// 所有被选中的记录input</span></div><div class="line">        <span class="keyword">var</span> _ipt = target.find(<span class="string">"tbody"</span>).find(<span class="string">"tr"</span>).find(<span class="string">"input[name='select_item']:checked"</span>);</div><div class="line">        <span class="keyword">var</span> chk_value = [];</div><div class="line">        <span class="comment">// 如果是radio</span></div><div class="line">        <span class="keyword">if</span> (_ipt.attr(<span class="string">"type"</span>) == <span class="string">"radio"</span>) &#123;</div><div class="line">            chk_value.push(&#123; <span class="attr">id</span>: _ipt.val() &#125;);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            _ipt.each(<span class="function"><span class="keyword">function</span>(<span class="params">_i, _item</span>) </span>&#123;</div><div class="line">                chk_value.push(&#123; <span class="attr">id</span>: $(_item).val() &#125;);</div><div class="line">            &#125;);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> chk_value;</div><div class="line">    &#125;,</div><div class="line">    <span class="comment">// 刷新记录</span></div><div class="line">    refresh: <span class="function"><span class="keyword">function</span>(<span class="params">target, parms</span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span> (parms) &#123;</div><div class="line">            target.load(parms);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            target.load();</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="comment">// 重置表格视图</span></div><div class="line">    resetHeight: <span class="function"><span class="keyword">function</span>(<span class="params">target, height</span>) </span>&#123;</div><div class="line">        target.find(<span class="string">"tbody"</span>).css(<span class="string">"height"</span>, height + <span class="string">'px'</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// 组件的其他方法也可以进行类似封装........</span></div><div class="line">&#125;;</div></pre></td></tr></table></figure><p></p><p>比如获取选中行的数据可使用getSelections：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"#deptTreeTable"</span>).bootstrapTreeTable(<span class="string">"getSelections"</span>);</div></pre></td></tr></table></figure><p></p><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><p>源码链接：<a href="https://drive.google.com/open?id=1fgYRpD5CNCn4gj06_MiLm-g2fCjsSYtk" target="_blank" rel="external">https://drive.google.com/open?id=1fgYRpD5CNCn4gj06_MiLm-g2fCjsSYtk</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Jun 06 2018 16:37:33 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;借助树形表格插件jQuery TreeGrid，我们可以以表格的形式来展现那些带有层级关系的数据，比如部门上下级，菜单表等。jQuery TreeGrid的官方地址为：&lt;a href=&quot;http://maxazan.github.io/jquery-treegrid/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://maxazan.github.io/jquery-treegrid/&lt;/a&gt;。由于这里的使用环境为bootstrap，原始的jQuery TreeGrid插件显得不是那么的灵活和美观，为了在bootstrap中无缝的使用该插件，这里引用了经过二次封装的jQuery TreeGrid插件jquery.treegrid.extension.js，作者为：&lt;a href=&quot;http://www.cnblogs.com/landeanfen/p/6776152.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/landeanfen/p/6776152.html&lt;/a&gt;。
    
    </summary>
    
    
      <category term="Bootstrap" scheme="http://mrbird.cc/tags/Bootstrap/"/>
    
      <category term="jQuery" scheme="http://mrbird.cc/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>Bootstrap Table学习指南</title>
    <link href="http://mrbird.cc/Bootstrap-Table%20guide.html"/>
    <id>http://mrbird.cc/Bootstrap-Table guide.html</id>
    <published>2018-01-06T01:43:13.000Z</published>
    <updated>2018-04-11T01:34:15.761Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Jun 06 2018 16:37:30 GMT+0800 (中国标准时间) --><p>Bootstrap Table是一款基于Bootstrap的jQuery表格插件，通过简单的设置，就可以拥有强大的单选、多选、排序、分页，以及编辑、导出、过滤、扩展等等的功能。作者地址：<a href="https://github.com/wenzhixin/bootstrap-table" target="_blank" rel="external">https://github.com/wenzhixin/bootstrap-table</a>。这里简单介绍下使用方法以及对其进行二次封装，方便日常开发使用。<a id="more"></a></p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>因为基于Bootstrap，所以先引入Bootstrap依赖：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0/css/bootstrap.min.css"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://code.jquery.com/jquery-2.0.0.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/popper.js/1.12.9/umd/popper.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0/js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>然后引入Bootstrap Table依赖：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- Latest compiled and minified CSS --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"//cdnjs.cloudflare.com/ajax/libs/bootstrap-table/1.9.0/bootstrap-table.min.css"</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- Latest compiled and minified JavaScript --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdnjs.cloudflare.com/ajax/libs/bootstrap-table/1.9.0/bootstrap-table.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- Latest compiled and minified Locales --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdnjs.cloudflare.com/ajax/libs/bootstrap-table/1.9.0/locale/bootstrap-table-zh-CN.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><p></p><h2 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h2><p>本例中使用到的数据表SQL如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="comment">-- Table structure for T_ROLE</span></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="string">"MRBIRD"</span>.<span class="string">"T_ROLE"</span>;</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">"MRBIRD"</span>.<span class="string">"T_ROLE"</span> (</div><div class="line"><span class="string">"ROLE_ID"</span> <span class="built_in">NUMBER</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> ,</div><div class="line"><span class="string">"ROLE_NAME"</span> VARCHAR2(<span class="number">100</span> <span class="keyword">BYTE</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> ,</div><div class="line"><span class="string">"REMARK"</span> VARCHAR2(<span class="number">100</span> <span class="keyword">BYTE</span>) <span class="literal">NULL</span> ,</div><div class="line"><span class="string">"CREATE_TIME"</span> <span class="built_in">DATE</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> ,</div><div class="line"><span class="string">"MODIFY_TIME"</span> <span class="built_in">DATE</span> <span class="literal">NULL</span> </div><div class="line">);</div><div class="line"></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="comment">-- Records of T_ROLE</span></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"MRBIRD"</span>.<span class="string">"T_ROLE"</span> <span class="keyword">VALUES</span> (<span class="string">'23'</span>, <span class="string">'用户管理员'</span>, <span class="string">'负责用户的增删改操作'</span>, <span class="keyword">TO_DATE</span>(<span class="string">'2018-01-09 15:32:41'</span>, <span class="string">'YYYY-MM-DD HH24:MI:SS'</span>), <span class="literal">null</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"MRBIRD"</span>.<span class="string">"T_ROLE"</span> <span class="keyword">VALUES</span> (<span class="string">'1'</span>, <span class="string">'管理员'</span>, <span class="string">'管理员'</span>, <span class="keyword">TO_DATE</span>(<span class="string">'2017-12-27 16:23:11'</span>, <span class="string">'YYYY-MM-DD HH24:MI:SS'</span>), <span class="keyword">TO_DATE</span>(<span class="string">'2018-02-24 16:01:45'</span>, <span class="string">'YYYY-MM-DD HH24:MI:SS'</span>));</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"MRBIRD"</span>.<span class="string">"T_ROLE"</span> <span class="keyword">VALUES</span> (<span class="string">'2'</span>, <span class="string">'测试账号'</span>, <span class="string">'测试账号'</span>, <span class="keyword">TO_DATE</span>(<span class="string">'2017-12-27 16:25:09'</span>, <span class="string">'YYYY-MM-DD HH24:MI:SS'</span>), <span class="keyword">TO_DATE</span>(<span class="string">'2018-01-23 09:11:11'</span>, <span class="string">'YYYY-MM-DD HH24:MI:SS'</span>));</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"MRBIRD"</span>.<span class="string">"T_ROLE"</span> <span class="keyword">VALUES</span> (<span class="string">'3'</span>, <span class="string">'注册账户'</span>, <span class="string">'注册账户，只可查看，不可操作'</span>, <span class="keyword">TO_DATE</span>(<span class="string">'2017-12-29 16:00:15'</span>, <span class="string">'YYYY-MM-DD HH24:MI:SS'</span>), <span class="keyword">TO_DATE</span>(<span class="string">'2018-02-24 17:33:45'</span>, <span class="string">'YYYY-MM-DD HH24:MI:SS'</span>));</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"MRBIRD"</span>.<span class="string">"T_ROLE"</span> <span class="keyword">VALUES</span> (<span class="string">'24'</span>, <span class="string">'系统监控员'</span>, <span class="string">'可查看系统监控信息，但不可操作'</span>, <span class="keyword">TO_DATE</span>(<span class="string">'2018-01-09 15:52:01'</span>, <span class="string">'YYYY-MM-DD HH24:MI:SS'</span>), <span class="keyword">TO_DATE</span>(<span class="string">'2018-03-07 19:05:33'</span>, <span class="string">'YYYY-MM-DD HH24:MI:SS'</span>));</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"MRBIRD"</span>.<span class="string">"T_ROLE"</span> <span class="keyword">VALUES</span> (<span class="string">'25'</span>, <span class="string">'用户查看'</span>, <span class="string">'查看用户，无相应操作权限'</span>, <span class="keyword">TO_DATE</span>(<span class="string">'2018-01-09 15:56:30'</span>, <span class="string">'YYYY-MM-DD HH24:MI:SS'</span>), <span class="literal">null</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"MRBIRD"</span>.<span class="string">"T_ROLE"</span> <span class="keyword">VALUES</span> (<span class="string">'63'</span>, <span class="string">'影院工作者'</span>, <span class="string">'可查看影视信息'</span>, <span class="keyword">TO_DATE</span>(<span class="string">'2018-02-06 08:48:28'</span>, <span class="string">'YYYY-MM-DD HH24:MI:SS'</span>), <span class="keyword">TO_DATE</span>(<span class="string">'2018-03-07 19:05:26'</span>, <span class="string">'YYYY-MM-DD HH24:MI:SS'</span>));</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"MRBIRD"</span>.<span class="string">"T_ROLE"</span> <span class="keyword">VALUES</span> (<span class="string">'64'</span>, <span class="string">'天气预报员'</span>, <span class="string">'可查看天气预报信息'</span>, <span class="keyword">TO_DATE</span>(<span class="string">'2018-02-27 08:47:04'</span>, <span class="string">'YYYY-MM-DD HH24:MI:SS'</span>), <span class="literal">null</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"MRBIRD"</span>.<span class="string">"T_ROLE"</span> <span class="keyword">VALUES</span> (<span class="string">'65'</span>, <span class="string">'文章审核'</span>, <span class="string">'文章类'</span>, <span class="keyword">TO_DATE</span>(<span class="string">'2018-02-27 08:48:01'</span>, <span class="string">'YYYY-MM-DD HH24:MI:SS'</span>), <span class="keyword">TO_DATE</span>(<span class="string">'2018-03-13 11:20:34'</span>, <span class="string">'YYYY-MM-DD HH24:MI:SS'</span>));</div></pre></td></tr></table></figure><p></p><p>后端框架为Spring Boot + MyBatis（通用mapper和pagehelper插件），获取数据的具体细节这里不再描述，可参考文末的源码。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>编写一个简单的页面：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"form"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"input-group-addon"</span>&gt;</span>角色：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"roleName"</span> <span class="attr">class</span>=<span class="string">"form-control"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-success"</span> <span class="attr">onclick</span>=<span class="string">"refresh()"</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">onclick</span>=<span class="string">"search()"</span>&gt;</span>搜索<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">"roleTable"</span> <span class="attr">data-mobile-responsive</span>=<span class="string">"true"</span> <span class="attr">class</span>=<span class="string">"mb-bootstrap-table text-nowrap"</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>Bootstrap Table插件的使用：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#roleTable'</span>).bootstrapTable(&#123;</div><div class="line">    <span class="attr">method</span>: <span class="string">'get'</span>, <span class="comment">// 服务器数据的请求方式 get or post</span></div><div class="line">    url: ctx + <span class="string">"bootstrap-table/list"</span>, <span class="comment">// 服务器数据的加载地址</span></div><div class="line">    striped: <span class="literal">true</span>, <span class="comment">//是否显示行间隔色</span></div><div class="line">    cache: <span class="literal">false</span>, <span class="comment">//是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）</span></div><div class="line">    pagination: <span class="literal">true</span>, <span class="comment">//是否显示分页（*）</span></div><div class="line">    sortable: <span class="literal">false</span>, <span class="comment">//是否启用排序</span></div><div class="line">    sidePagination: <span class="string">"server"</span>, <span class="comment">//分页方式：client客户端分页，server服务端分页（*）</span></div><div class="line">    pageNumber: <span class="number">1</span>, <span class="comment">//初始化加载第一页，默认第一页</span></div><div class="line">    pageSize: <span class="number">5</span>, <span class="comment">//每页的记录行数（*）</span></div><div class="line">    pageList: [<span class="number">5</span>, <span class="number">25</span>, <span class="number">50</span>, <span class="number">100</span>], <span class="comment">//可供选择的每页的行数（*）</span></div><div class="line">    strictSearch: <span class="literal">true</span>,</div><div class="line">    <span class="attr">minimumCountColumns</span>: <span class="number">2</span>, <span class="comment">//最少允许的列数</span></div><div class="line">    clickToSelect: <span class="literal">true</span>, <span class="comment">//是否启用点击选中行</span></div><div class="line">    uniqueId: <span class="string">"ID"</span>, <span class="comment">//每一行的唯一标识，一般为主键列</span></div><div class="line">    cardView: <span class="literal">false</span>,</div><div class="line">    <span class="attr">detailView</span>: <span class="literal">false</span>, <span class="comment">//是否显示详细视图</span></div><div class="line">    smartDisplay: <span class="literal">false</span>,</div><div class="line">    <span class="attr">queryParams</span>: <span class="function"><span class="keyword">function</span>(<span class="params">params</span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> &#123;</div><div class="line">            <span class="attr">pageSize</span>: params.limit,</div><div class="line">            <span class="attr">pageNum</span>: params.offset / params.limit + <span class="number">1</span>,</div><div class="line">            <span class="attr">roleName</span>: $(<span class="string">".form"</span>).find(<span class="string">"input[name='roleName']"</span>).val().trim(),</div><div class="line">        &#125;;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">columns</span>: [&#123;</div><div class="line">        <span class="attr">checkbox</span>: <span class="literal">true</span></div><div class="line">    &#125;,&#123;</div><div class="line">        <span class="attr">field</span>: <span class="string">'roleId'</span>,</div><div class="line">        <span class="attr">title</span>: <span class="string">'角色ID'</span></div><div class="line">    &#125;,&#123;</div><div class="line">        <span class="attr">field</span>: <span class="string">'roleName'</span>,</div><div class="line">        <span class="attr">title</span>: <span class="string">'角色'</span></div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">field</span>: <span class="string">'remark'</span>,</div><div class="line">        <span class="attr">title</span>: <span class="string">'描述'</span></div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">field</span>: <span class="string">'createTime'</span>,</div><div class="line">        <span class="attr">title</span>: <span class="string">'创建时间'</span></div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">field</span>: <span class="string">'modifyTime'</span>,</div><div class="line">        <span class="attr">title</span>: <span class="string">'修改时间'</span></div><div class="line">    &#125;]</div><div class="line">&#125;);</div><div class="line"><span class="comment">// 搜索方法</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    $(<span class="string">'#roleTable'</span>).bootstrapTable(<span class="string">'refresh'</span>);</div><div class="line">&#125;</div><div class="line"><span class="comment">// 重置方法</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">refresh</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    $(<span class="string">".form"</span>)[<span class="number">0</span>].reset();</div><div class="line">    search();</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>后端返回的JSON数据如下所示：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"total"</span>: <span class="number">9</span>,</div><div class="line">    <span class="attr">"rows"</span>: [&#123;</div><div class="line">        <span class="attr">"roleId"</span>: <span class="number">1</span>,</div><div class="line">        <span class="attr">"roleName"</span>: <span class="string">"管理员"</span>,</div><div class="line">        <span class="attr">"remark"</span>: <span class="string">"管理员"</span>,</div><div class="line">        <span class="attr">"createTime"</span>: <span class="number">1514362991000</span>,</div><div class="line">        <span class="attr">"modifyTime"</span>: <span class="number">1519459305000</span></div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"roleId"</span>: <span class="number">2</span>,</div><div class="line">        <span class="attr">"roleName"</span>: <span class="string">"测试账号"</span>,</div><div class="line">        <span class="attr">"remark"</span>: <span class="string">"测试账号"</span>,</div><div class="line">        <span class="attr">"createTime"</span>: <span class="number">1514363109000</span>,</div><div class="line">        <span class="attr">"modifyTime"</span>: <span class="number">1516669871000</span></div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"roleId"</span>: <span class="number">3</span>,</div><div class="line">        <span class="attr">"roleName"</span>: <span class="string">"注册账户"</span>,</div><div class="line">        <span class="attr">"remark"</span>: <span class="string">"注册账户，只可查看，不可操作"</span>,</div><div class="line">        <span class="attr">"createTime"</span>: <span class="number">1514534415000</span>,</div><div class="line">        <span class="attr">"modifyTime"</span>: <span class="number">1519464825000</span></div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"roleId"</span>: <span class="number">23</span>,</div><div class="line">        <span class="attr">"roleName"</span>: <span class="string">"用户管理员"</span>,</div><div class="line">        <span class="attr">"remark"</span>: <span class="string">"负责用户的增删改操作"</span>,</div><div class="line">        <span class="attr">"createTime"</span>: <span class="number">1515483161000</span>,</div><div class="line">        <span class="attr">"modifyTime"</span>: <span class="literal">null</span></div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"roleId"</span>: <span class="number">24</span>,</div><div class="line">        <span class="attr">"roleName"</span>: <span class="string">"系统监控员"</span>,</div><div class="line">        <span class="attr">"remark"</span>: <span class="string">"可查看系统监控信息，但不可操作"</span>,</div><div class="line">        <span class="attr">"createTime"</span>: <span class="number">1515484321000</span>,</div><div class="line">        <span class="attr">"modifyTime"</span>: <span class="number">1520420733000</span></div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"roleId"</span>: <span class="number">25</span>,</div><div class="line">        <span class="attr">"roleName"</span>: <span class="string">"用户查看"</span>,</div><div class="line">        <span class="attr">"remark"</span>: <span class="string">"查看用户，无相应操作权限"</span>,</div><div class="line">        <span class="attr">"createTime"</span>: <span class="number">1515484590000</span>,</div><div class="line">        <span class="attr">"modifyTime"</span>: <span class="literal">null</span></div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"roleId"</span>: <span class="number">63</span>,</div><div class="line">        <span class="attr">"roleName"</span>: <span class="string">"影院工作者"</span>,</div><div class="line">        <span class="attr">"remark"</span>: <span class="string">"可查看影视信息"</span>,</div><div class="line">        <span class="attr">"createTime"</span>: <span class="number">1517878108000</span>,</div><div class="line">        <span class="attr">"modifyTime"</span>: <span class="number">1520420726000</span></div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"roleId"</span>: <span class="number">64</span>,</div><div class="line">        <span class="attr">"roleName"</span>: <span class="string">"天气预报员"</span>,</div><div class="line">        <span class="attr">"remark"</span>: <span class="string">"可查看天气预报信息"</span>,</div><div class="line">        <span class="attr">"createTime"</span>: <span class="number">1519692424000</span>,</div><div class="line">        <span class="attr">"modifyTime"</span>: <span class="literal">null</span></div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">"roleId"</span>: <span class="number">65</span>,</div><div class="line">        <span class="attr">"roleName"</span>: <span class="string">"文章审核"</span>,</div><div class="line">        <span class="attr">"remark"</span>: <span class="string">"文章类"</span>,</div><div class="line">        <span class="attr">"createTime"</span>: <span class="number">1519692481000</span>,</div><div class="line">        <span class="attr">"modifyTime"</span>: <span class="number">1520911234000</span></div><div class="line">    &#125;]</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>页面显示效果如下： <img src="img/QQ截图20180314172620.png" alt="QQ截图20180314172620.png"></p><h2 id="二次封装"><a href="#二次封装" class="headerlink" title="二次封装"></a>二次封装</h2><p>实际使用中除了几个常用的参数比如url，queryParams，columns等等之外，剩下的参数一般默认就好，所以接下来对其进行二次封装，使得开发中更为方便。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> $Mrbird = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> bootstrapTable_default = &#123;</div><div class="line">        <span class="attr">method</span>: <span class="string">'get'</span>,</div><div class="line">        <span class="attr">striped</span>: <span class="literal">true</span>,</div><div class="line">        <span class="attr">cache</span>: <span class="literal">false</span>,</div><div class="line">        <span class="attr">pagination</span>: <span class="literal">true</span>,</div><div class="line">        <span class="attr">sortable</span>: <span class="literal">false</span>,</div><div class="line">        <span class="attr">sidePagination</span>: <span class="string">"server"</span>,</div><div class="line">        <span class="attr">pageNumber</span>: <span class="number">1</span>,</div><div class="line">        <span class="attr">pageSize</span>: <span class="number">5</span>,</div><div class="line">        <span class="attr">pageList</span>: [<span class="number">5</span>, <span class="number">10</span>, <span class="number">25</span>, <span class="number">50</span>, <span class="number">100</span>],</div><div class="line">        <span class="attr">strictSearch</span>: <span class="literal">true</span>,</div><div class="line">        <span class="attr">showColumns</span>: <span class="literal">false</span>,</div><div class="line">        <span class="attr">minimumCountColumns</span>: <span class="number">2</span>,</div><div class="line">        <span class="attr">clickToSelect</span>: <span class="literal">true</span>,</div><div class="line">        <span class="attr">uniqueId</span>: <span class="string">"ID"</span>,</div><div class="line">        <span class="attr">cardView</span>: <span class="literal">false</span>,</div><div class="line">        <span class="attr">detailView</span>: <span class="literal">false</span>,</div><div class="line">        <span class="attr">smartDisplay</span>: <span class="literal">false</span>,</div><div class="line">        <span class="attr">queryParams</span>: <span class="function"><span class="keyword">function</span>(<span class="params">params</span>) </span>&#123;</div><div class="line">            <span class="keyword">return</span> &#123;</div><div class="line">                <span class="attr">pageSize</span>: params.limit,</div><div class="line">                <span class="attr">pageNum</span>: params.offset / params.limit + <span class="number">1</span>,</div><div class="line">            &#125;;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_initTable</span>(<span class="params">id, settings</span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> params = $.extend(&#123;&#125;, bootstrapTable_default, settings);</div><div class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> params.url == <span class="string">'undefined'</span>) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="string">'初始化表格失败，请配置url参数！'</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> params.columns == <span class="string">'undefined'</span>) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="string">'初始化表格失败，请配置columns参数！'</span>;</div><div class="line">        &#125;</div><div class="line">        $(<span class="string">'#'</span> + id).bootstrapTable(params);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> &#123;</div><div class="line">        <span class="attr">initTable</span>: <span class="function"><span class="keyword">function</span>(<span class="params">id, settings</span>) </span>&#123;</div><div class="line">            _initTable(id, settings);</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">refreshTable</span>: <span class="function"><span class="keyword">function</span>(<span class="params">id</span>) </span>&#123;</div><div class="line">            $(<span class="string">'#'</span> + id).bootstrapTable(<span class="string">'refresh'</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;)($);</div></pre></td></tr></table></figure><p></p><p>这样，在使用Bootstap Table插件的时候只需要像下面这样书写即可：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> settings = &#123;</div><div class="line">        <span class="attr">url</span>: ctx + <span class="string">"bootstrap-table/list"</span>,</div><div class="line">        <span class="attr">queryParams</span>: <span class="function"><span class="keyword">function</span>(<span class="params">params</span>) </span>&#123;</div><div class="line">            <span class="keyword">return</span> &#123;</div><div class="line">                <span class="attr">pageSize</span>: params.limit,</div><div class="line">                <span class="attr">pageNum</span>: params.offset / params.limit + <span class="number">1</span>,</div><div class="line">                <span class="attr">roleName</span>: $(<span class="string">".form"</span>).find(<span class="string">"input[name='roleName']"</span>).val().trim(),</div><div class="line">            &#125;;</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">columns</span>: [&#123;</div><div class="line">                <span class="attr">checkbox</span>: <span class="literal">true</span></div><div class="line">            &#125;,</div><div class="line">            &#123;</div><div class="line">                <span class="attr">field</span>: <span class="string">'roleId'</span>,</div><div class="line">                <span class="attr">title</span>: <span class="string">'角色ID'</span></div><div class="line">            &#125;, &#123;</div><div class="line">                <span class="attr">field</span>: <span class="string">'roleName'</span>,</div><div class="line">                <span class="attr">title</span>: <span class="string">'角色'</span></div><div class="line">            &#125;, &#123;</div><div class="line">                <span class="attr">field</span>: <span class="string">'remark'</span>,</div><div class="line">                <span class="attr">title</span>: <span class="string">'描述'</span></div><div class="line">            &#125;, &#123;</div><div class="line">                <span class="attr">field</span>: <span class="string">'createTime'</span>,</div><div class="line">                <span class="attr">title</span>: <span class="string">'创建时间'</span></div><div class="line">            &#125;, &#123;</div><div class="line">                <span class="attr">field</span>: <span class="string">'modifyTime'</span>,</div><div class="line">                <span class="attr">title</span>: <span class="string">'修改时间'</span></div><div class="line">            &#125;</div><div class="line">        ]</div><div class="line">    &#125;</div><div class="line">    $Mrbird.initTable(<span class="string">'roleTable'</span>, settings);</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p></p><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><p>Bootstap Table除了上面介绍的内容外，其还包含了许多别的特性，可参考官方文档：<a href="http://bootstrap-table.wenzhixin.net.cn/zh-cn/documentation/" target="_blank" rel="external">http://bootstrap-table.wenzhixin.net.cn/zh-cn/documentation/</a>。</p><p>源码链接：<a href="https://drive.google.com/open?id=1qEVgDDBfbdaVJ1FSckzQr6RAUyGF7k6J" target="_blank" rel="external">https://drive.google.com/open?id=1qEVgDDBfbdaVJ1FSckzQr6RAUyGF7k6J</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Jun 06 2018 16:37:30 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;Bootstrap Table是一款基于Bootstrap的jQuery表格插件，通过简单的设置，就可以拥有强大的单选、多选、排序、分页，以及编辑、导出、过滤、扩展等等的功能。作者地址：&lt;a href=&quot;https://github.com/wenzhixin/bootstrap-table&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/wenzhixin/bootstrap-table&lt;/a&gt;。这里简单介绍下使用方法以及对其进行二次封装，方便日常开发使用。
    
    </summary>
    
    
      <category term="Bootstrap" scheme="http://mrbird.cc/tags/Bootstrap/"/>
    
  </entry>
  
  <entry>
    <title>Linux下部署Spring Boot jar</title>
    <link href="http://mrbird.cc/Linux%20Spring-Boot-jar.html"/>
    <id>http://mrbird.cc/Linux Spring-Boot-jar.html</id>
    <published>2018-01-05T09:11:01.000Z</published>
    <updated>2018-05-22T07:16:29.948Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Jun 06 2018 16:37:32 GMT+0800 (中国标准时间) --><p>部署Spring Boot项目可以使用Maven命令<code>mvn:clean package</code>将项目打包成只执行的jar文件，然后使用命令<code>java -jar XX.jar</code>来执行。但这样做无法将shell命令行释放，关闭terminal后项目也随之关闭了。这里介绍在Linux系统中后台运行Spring Boot jar文件的方法。</p><p>实现这个功能主要依赖于Linux的<code>nohup</code>命令。<code>nohup</code>命令可以将程序以忽略挂起信号的方式运行起来，被运行的程序的输出信息将不会显示到终端。<a id="more"></a></p><p><code>nohup</code>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">nohup 命令</div><div class="line">用途：不挂断地运行命令。</div><div class="line">语法：nohup Command [ Arg … ][ &amp; ]</div></pre></td></tr></table></figure><p></p><p>所以只需要在启动命令前加上<code>nohup</code>命令，末尾加上<code>&amp;</code>即可：<code>nohup java -jar XX.jar &amp;</code>。</p><p>为了方便，我们可以编写启动脚本<strong>start.sh</strong>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nohup java -jar XX.jar &amp;</div></pre></td></tr></table></figure><p></p><p>关停脚本<strong>stop.sh</strong>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">PID=`ps -ef | grep sms-2.0.jar | grep -v grep | awk '&#123;print $2&#125;'`</div><div class="line">if [ -z "$PID" ]</div><div class="line">then</div><div class="line">    echo Application is already stopped</div><div class="line">else</div><div class="line">    echo kill $PID</div><div class="line">    kill -9 $PID</div><div class="line">fi</div></pre></td></tr></table></figure><p></p><p>重启脚本<strong>run.sh</strong>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">echo stop application</div><div class="line">source stop.sh</div><div class="line">echo start application</div><div class="line">source start.sh</div></pre></td></tr></table></figure><p></p><p>在编写shell脚本的过程中遇到了两个问题：</p><ol><li><p>执行<code>.sh</code>文件提示权限不足：</p><p>解决办法：执行命令<code>chmod u+x XX.sh</code>赋予当前用于可执行的权限即可。</p></li><li><p>提示<span style="color:red">/bin/bash^M: bad interpreter: 没有那个文件或目录</span>。</p><p>问题出现的原因是shell脚本是在windows中编写的然后上传到Linux中的，出现了兼容性问题。解决办法：执行<code>vim XX.sh</code>打开shell文件，然后切换到命令模式，执行<code>:set fileformat=unix</code>后保存退出即可。</p></li></ol><p>使用了<code>nohup</code>命令后，会在jar文件目录下生成一个nohup.out文件，可通过其观察当前项目的运行情况：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> ll</span></div><div class="line">总用量 76612</div><div class="line">drwxrwxr-x 2 zjrun zjrun     4096 2月   8 08:49 log</div><div class="line">-rw------- 1 zjrun zjrun 58695723 2月   8 10:15 nohup.out</div><div class="line">-rwxrw-r-- 1 zjrun zjrun       88 2月   7 15:17 run.sh</div><div class="line">-rw-rw-r-- 1 zjrun zjrun 19730199 2月   8 10:11 sms-1.0.jar</div><div class="line">-rwxrw-r-- 1 zjrun zjrun       60 2月   7 15:22 start.sh</div><div class="line">-rwxrw-r-- 1 zjrun zjrun      184 2月   7 15:19 stop.sh</div><div class="line"><span class="meta"></span></div><div class="line">$<span class="bash"> tail -10f nohup.out </span></div><div class="line">10:14:31.309 logback [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Registering beans for JMX exposure on startup</div><div class="line">10:14:31.478 logback [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8963"]</div><div class="line">10:14:31.498 logback [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8963"]</div><div class="line">10:14:31.506 logback [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read</div><div class="line">10:14:31.634 logback [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8963 (http)</div><div class="line">10:14:31.644 logback [main] INFO  com.xingyi.sms.SmsApplication - Started SmsApplication in 7.213 seconds (JVM running for 8.03)</div><div class="line">complete!</div><div class="line">10:15:26.978 logback [http-nio-8963-exec-1] INFO  o.a.c.c.C.[.[localhost].[/mobilePre] - Initializing Spring FrameworkServlet 'dispatcherServlet'</div><div class="line">10:15:26.979 logback [http-nio-8963-exec-1] INFO  o.s.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started</div><div class="line">10:15:27.004 logback [http-nio-8963-exec-1] INFO  o.s.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms</div></pre></td></tr></table></figure><p></p><blockquote><p>参考自： <a href="http://blog.didispace.com/spring-boot-run-backend/" target="_blank" rel="external">http://blog.didispace.com/spring-boot-run-backend/</a></p></blockquote><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Jun 06 2018 16:37:32 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;部署Spring Boot项目可以使用Maven命令&lt;code&gt;mvn:clean package&lt;/code&gt;将项目打包成只执行的jar文件，然后使用命令&lt;code&gt;java -jar XX.jar&lt;/code&gt;来执行。但这样做无法将shell命令行释放，关闭terminal后项目也随之关闭了。这里介绍在Linux系统中后台运行Spring Boot jar文件的方法。&lt;/p&gt;&lt;p&gt;实现这个功能主要依赖于Linux的&lt;code&gt;nohup&lt;/code&gt;命令。&lt;code&gt;nohup&lt;/code&gt;命令可以将程序以忽略挂起信号的方式运行起来，被运行的程序的输出信息将不会显示到终端。
    
    </summary>
    
    
      <category term="Spring Boot" scheme="http://mrbird.cc/tags/Spring-Boot/"/>
    
      <category term="Linux" scheme="http://mrbird.cc/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot logback日志配置[转]</title>
    <link href="http://mrbird.cc/Spring-Boot-logback.html"/>
    <id>http://mrbird.cc/Spring-Boot-logback.html</id>
    <published>2018-01-03T09:15:37.000Z</published>
    <updated>2018-04-11T01:34:15.824Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Jun 06 2018 16:37:32 GMT+0800 (中国标准时间) --><p>Spring Boot在所有内部日志中使用<a href="http://commons.apache.org/proper/commons-logging/" target="_blank" rel="external">Commons Logging</a>，但是默认配置也提供了对常用日志的支持，如：<a href="http://docs.oracle.com/javase/7/docs/api/java/util/logging/package-summary.html" target="_blank" rel="external">Java Util Logging</a>，<a href="http://logging.apache.org/log4j/" target="_blank" rel="external">Log4J</a>, <a href="https://logging.apache.org/log4j/2.x/" target="_blank" rel="external">Log4J2</a>和<a href="https://logback.qos.ch/" target="_blank" rel="external">Logback</a>。每种Logger都可以通过配置使用控制台或者文件输出日志内容。</p><p><a href="http://www.slf4j.org/" target="_blank" rel="external">SLF4J</a> —— Simple Logging Facade For Java，它是一个针对于各类Java日志框架的统一Facade抽象。Java日志框架众多——常用的有<code>java.util.logging</code>, <code>log4j</code>, <code>logback</code>，<code>commons-logging</code>, Spring框架使用的是Jakarta Commons Logging API（JCL）。而SLF4J定义了统一的日志抽象接口，而真正的日志实现则是在运行时决定的——它提供了各类日志框架的绑定。<a id="more"></a></p><p><a href="https://logback.qos.ch/" target="_blank" rel="external">Logback</a>是log4j框架的作者开发的新一代日志框架，它效率更高、能够适应诸多的运行环境，同时天然支持SLF4J。</p><p>默认情况下，Spring Boot会用Logback来记录日志，并用INFO级别输出到控制台。在运行应用程序和其他例子时，你应该已经看到很多INFO级别的日志了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">  _   _   _   _   _   _  </div><div class="line"> / \ / \ / \ / \ / \ / \ </div><div class="line">( m | r | b | i | r | d )</div><div class="line"> \_/ \_/ \_/ \_/ \_/ \_/ </div><div class="line">2018-02-08 15:05:03.368  INFO 14404 --- [ main] cc.mrbird.Application                    : Starting Application on SC-201802012049 with PID 14404 (D:\neonWorkspace\mrbird\target\classes started by Administrator in D:\neonWorkspace\mrbird)</div><div class="line">2018-02-08 15:05:03.375  INFO 14404 --- [ main] cc.mrbird.Application                    : No active profile set, falling back to default profiles: default</div><div class="line">2018-02-08 15:05:03.777  INFO 14404 --- [ main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31321838: startup date [Thu Feb 08 15:05:03 CST 2018]; root of context hierarchy</div><div class="line">2018-02-08 15:05:05.083  INFO 14404 --- [ main] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean &apos;advisorAutoProxyCreator&apos; with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=shiroConfig; factoryMethodName=advisorAutoProxyCreator; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [cc/mrbird/config/ShiroConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration; factoryMethodName=advisorAutoProxyCreator; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/stat/DruidSpringAopConfiguration.class]]</div><div class="line">2018-02-08 15:05:05.554  INFO 14404 --- [ main] trationDelegate$BeanPostProcessorChecker : Bean &apos;shiroConfig&apos; of type [cc.mrbird.config.ShiroConfig$$EnhancerBySpringCGLIB$$b7e43ac8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)</div><div class="line">2018-02-08 15:05:05.600  INFO 14404 --- [ main] trationDelegate$BeanPostProcessorChecker : Bean &apos;com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration&apos; of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)</div><div class="line">2018-02-08 15:05:06.231  INFO 14404 --- [ main] trationDelegate$BeanPostProcessorChecker : Bean &apos;mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties&apos; of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)</div><div class="line">...</div></pre></td></tr></table></figure><p></p><p>从上面可以看到，日志输出内容元素具体如下：</p><ol><li><p>时间日期：精确到毫秒；</p></li><li><p>日志级别：ERROR, WARN, INFO, DEBUG or TRACE；</p></li><li><p>进程ID；</p></li><li><p>分隔符：<code>---</code>标识实际日志的开始；</p></li><li><p>线程名：方括号括起来（可能会截断控制台输出）；</p></li><li><p>Logger名：通常使用源代码的类名；</p></li><li><p>日志内容。</p></li></ol><h2 id="添加日志依赖"><a href="#添加日志依赖" class="headerlink" title="添加日志依赖"></a>添加日志依赖</h2><p>假如maven依赖中添加了spring-boot-starter-logging：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>那么，我们的Spring Boot应用将自动使用logback作为应用日志框架，Spring Boot启动的时候，由org.springframework.boot.logging.Logging-Application-Listener根据情况初始化并使用。</p><h2 id="默认配置属性支持"><a href="#默认配置属性支持" class="headerlink" title="默认配置属性支持"></a>默认配置属性支持</h2><p>Spring Boot为我们提供了很多默认的日志配置，所以，只要将spring-boot-starter-logging作为依赖加入到当前应用的classpath，则“开箱即用”。 下面介绍几种在application.properties就可以配置的日志相关属性。</p><h2 id="控制台输出"><a href="#控制台输出" class="headerlink" title="控制台输出"></a>控制台输出</h2><p>日志级别从低到高分为<strong>TRACE</strong> &lt; <strong>DEBUG</strong> &lt; <strong>INFO</strong> &lt; <strong>WARN</strong> &lt; <strong>ERROR</strong> &lt; <strong>FATAL</strong>，如果设置为WARN，则低于WARN的信息都不会输出。 Spring Boot中默认配置ERROR、WARN和INFO级别的日志输出到控制台。您还可以通过启动您的应用程序–debug标志来启用“调试”模式（开发的时候推荐开启）,以下两种方式皆可：</p><ul><li><p>在运行命令后加入–debug标志，如：<code>$ java -jar springTest.jar --debug</code>。</p></li><li><p>在application.properties中配置<code>debug=true</code>，该属性置为true的时候，核心Logger（包含嵌入式容器、hibernate、spring）会输出更多内容，但是你自己应用的日志并不会输出为DEBUG级别。</p></li></ul><h2 id="文件输出"><a href="#文件输出" class="headerlink" title="文件输出"></a>文件输出</h2><p>默认情况下，Spring Boot将日志输出到控制台，不会写到日志文件。如果要编写除控制台输出之外的日志文件，则需在application.properties中设置logging.file或logging.path属性。</p><ul><li><p>logging.file，设置文件，可以是绝对路径，也可以是相对路径。如：<code>logging.file=my.log</code>。</p></li><li><p>logging.path，设置目录，会在该目录下创建spring.log文件，并写入日志内容，如：<code>logging.path=/var/log</code>。</p></li></ul><p>如果只配置 logging.file，会在项目的当前路径下生成一个 xxx.log 日志文件。</p><p>如果只配置 logging.path，在 /var/log文件夹生成一个日志文件为 spring.log。</p><h2 id="级别控制"><a href="#级别控制" class="headerlink" title="级别控制"></a>级别控制</h2><p>所有支持的日志记录系统都可以在Spring环境中设置记录级别（例如在application.properties中） 格式为：’logging.level.* = LEVEL’</p><ul><li><p><code>logging.level</code>：日志级别控制前缀，<code>*</code>为包名或Logger名</p></li><li><p><code>LEVEL</code>：选项TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF</p></li></ul><p>举例：</p><ul><li><p>logging.level.com.mrbird=DEBUG：com.mrbird包下所有class以DEBUG级别输出。</p></li><li><p>logging.level.root=WARN：root日志以WARN级别输出。</p></li></ul><h2 id="自定义日志配置"><a href="#自定义日志配置" class="headerlink" title="自定义日志配置"></a>自定义日志配置</h2><p>由于日志服务一般都在ApplicationContext创建前就初始化了，它并不是必须通过Spring的配置文件控制。因此通过系统属性和传统的Spring Boot外部配置文件依然可以很好的支持日志控制和管理。</p><p>根据不同的日志系统，你可以按如下规则组织配置文件名，就能被正确加载：</p><ul><li><p>Logback：logback-spring.xml, logback-spring.groovy, logback.xml, logback.groovy</p></li><li><p>Log4j：log4j-spring.properties, log4j-spring.xml, log4j.properties, log4j.xml</p></li><li><p>Log4j2：log4j2-spring.xml, log4j2.xml</p></li><li><p>JDK (Java Util Logging)：logging.properties</p></li></ul><p>Spring Boot官方推荐优先使用带有-spring的文件名作为你的日志配置（如使用logback-spring.xml，而不是logback.xml），命名为logback-spring.xml的日志配置文件，spring boot可以为它添加一些spring boot特有的配置项（下面会提到）。</p><p>上面是默认的命名规则，并且放在src/main/resources下面即可。</p><p>如果你即想完全掌控日志配置，但又不想用logback.xml作为Logback配置的名字，可以在application.properties配置文件里面通过logging.config属性指定自定义的名字：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">logging.config=classpath:logging-config.xml</div></pre></td></tr></table></figure><p></p><p>虽然一般并不需要改变配置文件的名字，但是如果你想针对不同运行时Profile使用不同的日 志配置，这个功能会很有用。</p><p>下面我们来看看一个普通的logback-spring.xml例子:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="meta">&lt;!DOCTYPE xml&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">configuration</span>  <span class="attr">scan</span>=<span class="string">"true"</span> <span class="attr">scanPeriod</span>=<span class="string">"60 seconds"</span> <span class="attr">debug</span>=<span class="string">"false"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">contextName</span>&gt;</span>logback<span class="tag">&lt;/<span class="name">contextName</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"log.path"</span> <span class="attr">value</span>=<span class="string">"log"</span> /&gt;</span></div><div class="line">    <span class="comment">&lt;!--输出到控制台--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"console"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.ConsoleAppender"</span>&gt;</span></div><div class="line">       <span class="comment">&lt;!-- &lt;filter class="ch.qos.logback.classic.filter.ThresholdFilter"&gt;</span></div><div class="line">            &lt;level&gt;ERROR&lt;/level&gt;</div><div class="line">        &lt;/filter&gt;--&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;HH:mm:ss.SSS&#125; %contextName [%thread] %-5level %logger&#123;36&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!--输出到文件--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"file"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.RollingFileAppender"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>$&#123;log.path&#125;/logback.%d&#123;yyyy-MM-dd&#125;.log<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;HH:mm:ss.SSS&#125; %contextName [%thread] %-5level %logger&#123;36&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"info"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"console"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"file"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- logback为java中的包 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"com.mrbird.controller"</span>/&gt;</span></div><div class="line">    <span class="comment">&lt;!--logback.LogbackDemo：类的全路径 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"com.mrbird.controller.LoginController"</span> <span class="attr">level</span>=<span class="string">"WARN"</span> <span class="attr">additivity</span>=<span class="string">"false"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"console"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">logger</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div></pre></td></tr></table></figure><p></p><h3 id="根节点-lt-configuration-gt-包含的属性"><a href="#根节点-lt-configuration-gt-包含的属性" class="headerlink" title="根节点&lt;configuration&gt;包含的属性"></a>根节点<code>&lt;configuration&gt;</code>包含的属性</h3><ul><li><p>scan：当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。</p></li><li><p>scanPeriod：设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。</p></li><li><p>debug：当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。</p></li></ul><p>根节点<code>&lt;configuration&gt;</code>的子节点：<code>&lt;configuration&gt;</code>下面一共有2个属性，3个子节点，分别是：</p><p><strong>属性一：设置上下文名称<code>&lt;contextName&gt;</code></strong></p><p>每个logger都关联到logger上下文，默认上下文名称为“default”。但可以使用设置成其他名字，用于区分不同应用程序的记录。一旦设置，不能修改,可以通过%contextName来打印日志上下文名称。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">contextName</span>&gt;</span>logback<span class="tag">&lt;/<span class="name">contextName</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p><strong>属性二：设置变量<code>&lt;property&gt;</code></strong> 用来定义变量值的标签，有两个属性，name和value；其中name的值是变量的名称，value的值时变量定义的值。通过定义的值会被插入到logger上下文中。定义变量后，可以使“${}”来使用变量。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"log.path"</span> <span class="attr">value</span>=<span class="string">"log"</span> /&gt;</span></div></pre></td></tr></table></figure><p></p><h3 id="子节点一-lt-appender-gt"><a href="#子节点一-lt-appender-gt" class="headerlink" title="子节点一&lt;appender&gt;"></a>子节点一<code>&lt;appender&gt;</code></h3><p>appender用来格式化日志输出节点，有俩个属性name和class，class用来指定哪种输出策略，常用就是控制台输出策略和文件输出策略。</p><p>控制台输出ConsoleAppender：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--输出到控制台--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"console"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.ConsoleAppender"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.filter.ThresholdFilter"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">level</span>&gt;</span>ERROR<span class="tag">&lt;/<span class="name">level</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;HH:mm:ss.SSS&#125; %contextName [%thread] %-5level %logger&#123;36&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">appender</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p><code>&lt;encoder&gt;</code>表示对日志进行编码：</p><ul><li><p><code>%d{HH: mm:ss.SSS}</code>——日志输出时间。</p></li><li><p><code>%thread</code>——输出日志的进程名字，这在Web应用以及异步任务处理中很有用。</p></li><li><p><code>%-5level</code>——日志级别，并且使用5个字符靠左对齐。</p></li><li><p><code>%logger{36}</code>——日志输出者的名字。</p></li><li><p><code>%msg</code>——日志消息。</p></li><li><p><code>%n</code>——平台的换行符。</p></li></ul><p>ThresholdFilter为系统定义的拦截器，例如我们用ThresholdFilter来过滤掉ERROR级别以下的日志不输出到文件中。如果不用记得注释掉，不然你控制台会发现没日志~</p><p>输出到文件RollingFileAppender：</p><p>另一种常见的日志输出到文件，随着应用的运行时间越来越长，日志也会增长的越来越多，将他们输出到同一个文件并非一个好办法。RollingFileAppender用于切分文件日志：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--输出到文件--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"file"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.RollingFileAppender"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>$&#123;log.path&#125;/logback.%d&#123;yyyy-MM-dd&#125;.log<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>30<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">totalSizeCap</span>&gt;</span>1GB<span class="tag">&lt;/<span class="name">totalSizeCap</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;HH:mm:ss.SSS&#125; %contextName [%thread] %-5level %logger&#123;36&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">appender</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>其中重要的是rollingPolicy的定义：</p><ul><li><p><code>&lt;fileNamePattern&gt;${log.path}/logback.%d{yyyy-MM-dd}.log&lt;/fileNamePattern&gt;</code>定义了日志的切分方式——把每一天的日志归档到一个文件中；</p></li><li><p><code>&lt;maxHistory&gt;30&lt;/maxHistory&gt;</code>表示只保留最近30天的日志，以防止日志填满整个磁盘空间。同理，可以使用<code>%d{yyyy-MM-dd_HH-mm}</code>来定义精确到分的日志切分方式；</p></li><li><p><code>&lt;totalSizeCap&gt;1GB&lt;/totalSizeCap&gt;</code>用来指定日志文件的上限大小，例如设置为1GB的话，那么到了这个值，就会删除旧的日志。</p></li></ul><p>logback 每天生成和大小生成冲突的问题可以看这个解答：<a href="http://blog.csdn.net/wujianmin577/article/details/68922545" target="_blank" rel="external">http://blog.csdn.net/wujianmin577/article/details/68922545</a>。</p><h3 id="子节点二-lt-root-gt"><a href="#子节点二-lt-root-gt" class="headerlink" title="子节点二&lt;root&gt;"></a>子节点二<code>&lt;root&gt;</code></h3><p>root节点是必选节点，用来指定最基础的日志输出级别，只有一个level属性，用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，不能设置为INHERITED或者同义词NULL。</p><p>默认是DEBUG。可以包含零个或多个元素，标识这个appender将会添加到这个logger。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"debug"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"console"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"file"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></div></pre></td></tr></table></figure><p></p><h3 id="子节点三-lt-logger-gt"><a href="#子节点三-lt-logger-gt" class="headerlink" title="子节点三&lt;logger&gt;"></a>子节点三<code>&lt;logger&gt;</code></h3><p><code>&lt;logger&gt;</code>用来设置某一个包或者具体的某一个类的日志打印级别、以及指定<code>&lt;appender&gt;</code>。<code>&lt;logger&gt;</code>仅有一个name属性，一个可选的level和一个可选的addtivity属性。</p><ul><li><p><code>name</code>：用来指定受此logger约束的某一个包或者具体的某一个类。</p></li><li><p><code>level</code>：用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，还有一个特俗值INHERITED或者同义词NULL，代表强制执行上级的级别。如果未设置此属性，那么当前logger将会继承上级的级别。</p></li><li><p><code>addtivity</code>：是否向上级logger传递打印信息。默认是true。</p></li></ul><p>logger在实际使用的时候有两种情况：</p><p>先来看一看代码中如何使用：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.mrbird.controller;</div><div class="line"></div><div class="line"><span class="meta">@Controller</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LearnController</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> Logger logger = LoggerFactory.getLogger(<span class="keyword">this</span>.getClass());</div><div class="line"></div><div class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/login"</span>,method = RequestMethod.POST)</div><div class="line">    <span class="meta">@ResponseBody</span></div><div class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String,Object&gt; <span class="title">login</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span>&#123;</div><div class="line">        <span class="comment">//日志级别从低到高分为TRACE &lt; DEBUG &lt; INFO &lt; WARN &lt; ERROR &lt; FATAL，如果设置为WARN，则低于WARN的信息都不会输出。</span></div><div class="line">        logger.trace(<span class="string">"日志输出 trace"</span>);</div><div class="line">        logger.debug(<span class="string">"日志输出 debug"</span>);</div><div class="line">        logger.info(<span class="string">"日志输出 info"</span>);</div><div class="line">        logger.warn(<span class="string">"日志输出 warn"</span>);</div><div class="line">        logger.error(<span class="string">"日志输出 error"</span>);</div><div class="line">        Map&lt;String,Object&gt; map =<span class="keyword">new</span> HashMap&lt;String,Object&gt;();</div><div class="line">        String userName=request.getParameter(<span class="string">"userName"</span>);</div><div class="line">        String password=request.getParameter(<span class="string">"password"</span>);</div><div class="line">        <span class="keyword">if</span>(!userName.equals(<span class="string">""</span>) &amp;&amp; password!=<span class="string">""</span>)&#123;</div><div class="line">            User user =<span class="keyword">new</span> User(userName,password);</div><div class="line">            request.getSession().setAttribute(<span class="string">"user"</span>,user);</div><div class="line">            map.put(<span class="string">"result"</span>,<span class="string">"1"</span>);</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            map.put(<span class="string">"result"</span>,<span class="string">"0"</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> map;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>这是一个登录的判断的方法，我们引入日志，并且打印不同级别的日志，然后根据logback-spring.xml中的配置来看看打印了哪几种级别日志。</p><p>第一种：带有logger的配置，不指定级别，不指定appender：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"com.mrbird.controller"</span>/&gt;</span></div></pre></td></tr></table></figure><p></p><p><code>&lt;logger name=&quot;com.mrbird.controller&quot; /&gt;</code>将控制controller包下的所有类的日志的打印，但是并没用设置打印级别，所以继承他的上级的日志级别“info”；</p><p>没有设置addtivity，默认为true，将此logger的打印信息向上级传递；</p><p>没有设置appender，此logger本身不打印任何信息。</p><p><code>&lt;root level=&quot;info&quot;&gt;</code>将root的打印级别设置为“info”，指定了名字为“console”的appender。</p><p>当执行com.mrbird.controller.LearnController类的login方法时，LearnController 在包com.mrbird.controller中，所以首先执行<code>&lt;logger name=&quot;com.mrbird.controller&quot;/&gt;</code>，将级别为“info”及大于“info”的日志信息传递给root，本身并不打印； root接到下级传递的信息，交给已经配置好的名为“console”的appender处理，“console”appender将信息打印到控制台；</p><p>打印结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">16:00:17.407 logback [http-nio-8080-exec-8] INFO  com.mrbird.controller.LearnController - 日志输出 info</div><div class="line">16:00:17.408 logback [http-nio-8080-exec-8] WARN  com.mrbird.controller.LearnController - 日志输出 warn</div><div class="line">16:00:17.408 logback [http-nio-8080-exec-8] ERROR com.mrbird.controller.LearnController - 日志输出 error</div></pre></td></tr></table></figure><p></p><p>第二种：带有多个logger的配置，指定级别，指定appender；</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--logback.LogbackDemo：类的全路径 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"com.mrbird.controller.LearnController"</span> <span class="attr">level</span>=<span class="string">"WARN"</span> <span class="attr">additivity</span>=<span class="string">"false"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"console"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">logger</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>控制com.mrbird.controller.LearnController类的日志打印，打印级别为“WARN”;additivity属性为false，表示此logger的打印信息不再向上级传递；指定了名字为“console”的appender。</p><p>这时候执行<code>com.mrbird.controller.LearnController</code>类的login方法时，先执行<code>&lt;logger name=&quot;com.mrbird.controller.LearnController&quot; level=&quot;WARN&quot; additivity=&quot;false&quot;&gt;</code>, 将级别为“WARN”及大于“WARN”的日志信息交给此logger指定的名为“console”的appender处理，在控制台中打出日志，不再向上级root传递打印信息。</p><p>打印结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">16:00:17.408 logback [http-nio-8080-exec-8] WARN  com.mrbird.controller.LearnController - 日志输出 warn</div><div class="line">16:00:17.408 logback [http-nio-8080-exec-8] ERROR com.mrbird.controller.LearnController - 日志输出 error</div></pre></td></tr></table></figure><p></p><p>当然如果你把additivity=”false”改成additivity=”true”的话，就会打印两次，因为打印信息向上级传递，logger本身打印一次，root接到后又打印一次。</p><blockquote><p>转载自： <a href="http://tengj.top/2017/04/05/springboot7/" target="_blank" rel="external">http://tengj.top/2017/04/05/springboot7/</a></p></blockquote><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Jun 06 2018 16:37:32 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;Spring Boot在所有内部日志中使用&lt;a href=&quot;http://commons.apache.org/proper/commons-logging/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Commons Logging&lt;/a&gt;，但是默认配置也提供了对常用日志的支持，如：&lt;a href=&quot;http://docs.oracle.com/javase/7/docs/api/java/util/logging/package-summary.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Java Util Logging&lt;/a&gt;，&lt;a href=&quot;http://logging.apache.org/log4j/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Log4J&lt;/a&gt;, &lt;a href=&quot;https://logging.apache.org/log4j/2.x/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Log4J2&lt;/a&gt;和&lt;a href=&quot;https://logback.qos.ch/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Logback&lt;/a&gt;。每种Logger都可以通过配置使用控制台或者文件输出日志内容。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://www.slf4j.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SLF4J&lt;/a&gt; —— Simple Logging Facade For Java，它是一个针对于各类Java日志框架的统一Facade抽象。Java日志框架众多——常用的有&lt;code&gt;java.util.logging&lt;/code&gt;, &lt;code&gt;log4j&lt;/code&gt;, &lt;code&gt;logback&lt;/code&gt;，&lt;code&gt;commons-logging&lt;/code&gt;, Spring框架使用的是Jakarta Commons Logging API（JCL）。而SLF4J定义了统一的日志抽象接口，而真正的日志实现则是在运行时决定的——它提供了各类日志框架的绑定。
    
    </summary>
    
    
      <category term="Spring Boot" scheme="http://mrbird.cc/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>Bootstrap Modal遮罩问题</title>
    <link href="http://mrbird.cc/Bootstrap-Moda%20error.html"/>
    <id>http://mrbird.cc/Bootstrap-Moda error.html</id>
    <published>2017-12-31T02:03:52.000Z</published>
    <updated>2018-04-11T01:34:15.760Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Jun 06 2018 16:37:30 GMT+0800 (中国标准时间) --><p>当同时打开多层Modal并关闭的时候，发现页面的遮罩层并没有消失，可以使用下面的方法手动删除：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"modal"</span>).bind(<span class="string">'hide.bs.modal'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    $(<span class="string">".modal-backdrop"</span>).remove();</div><div class="line">&#125;)</div></pre></td></tr></table></figure><p></p><a id="more"></a><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Jun 06 2018 16:37:30 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;当同时打开多层Modal并关闭的时候，发现页面的遮罩层并没有消失，可以使用下面的方法手动删除：&lt;/p&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;modal&quot;&lt;/span&gt;).bind(&lt;span class=&quot;string&quot;&gt;&#39;hide.bs.modal&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    $(&lt;span class=&quot;string&quot;&gt;&quot;.modal-backdrop&quot;&lt;/span&gt;).remove();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Bootstrap" scheme="http://mrbird.cc/tags/Bootstrap/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis通用Mapper和PageHelper</title>
    <link href="http://mrbird.cc/MyBatis%20common%20Mapper%20PageHelper.html"/>
    <id>http://mrbird.cc/MyBatis common Mapper PageHelper.html</id>
    <published>2017-12-28T11:12:25.000Z</published>
    <updated>2018-05-04T01:59:17.351Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Jun 06 2018 16:37:32 GMT+0800 (中国标准时间) --><p>如果项目中使用到了MyBatis框架，那么使用通用Mapper和PageHelper分页插件将极大的简化我们的操作。通用Mapper可以简化对单表的CRUD操作，PageHelper分页插件可以帮我们自动拼接分页SQL，并且可以使用MyBatis Geneator来自动生成实体类，Mapper接口和Mapper xml代码，非常的方便。插件地址及作者链接<a href="https://gitee.com/free" target="_blank" rel="external">https://gitee.com/free</a>。<a id="more"></a></p><h2 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h2><p>这里使用Spring Boot来构建，可参考<a href="/Spring-Boot%20Mybatis.html">Spring-Boot中使用Mybatis.html</a>搭建一个Spring boot + MyBatis的框架，然后在pom中引入：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- mybatis --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 通用mapper --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>tk.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- pagehelper 分页插件 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>接着在pom中配置MyBatis Geneator：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                    <span class="comment">&lt;!-- 数据库连接驱动 --&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.oracle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ojdbc6<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>tk.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">id</span>&gt;</span>Generate MyBatis Artifacts<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">goals</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>generate<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">                <span class="comment">&lt;!--允许移动生成的文件 --&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">verbose</span>&gt;</span>true<span class="tag">&lt;/<span class="name">verbose</span>&gt;</span></div><div class="line">                <span class="comment">&lt;!-- 是否覆盖 --&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">overwrite</span>&gt;</span>true<span class="tag">&lt;/<span class="name">overwrite</span>&gt;</span></div><div class="line">                <span class="comment">&lt;!-- 自动生成的配置 --&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">configurationFile</span>&gt;</span>src/main/resources/mybatis-generator.xml<span class="tag">&lt;/<span class="name">configurationFile</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p><code>src/main/resources/mybatis-generator.xml</code>为生成器的配置，下文会介绍到。</p><h2 id="配置插件"><a href="#配置插件" class="headerlink" title="配置插件"></a>配置插件</h2><p>在Spring Boot配置文件application.yml中配置MyBatis：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="attr">mybatis:</span></div><div class="line">  <span class="comment"># type-aliases扫描路径</span></div><div class="line"><span class="attr">  type-aliases-package:</span> <span class="string">com.springboot.bean</span></div><div class="line">  <span class="comment"># mapper xml实现扫描路径</span></div><div class="line"><span class="attr">  mapper-locations:</span> <span class="attr">classpath:mapper/*.xml</span></div><div class="line"><span class="attr">  property:</span></div><div class="line"><span class="attr">    order:</span> <span class="string">BEFORE</span></div></pre></td></tr></table></figure><p></p><p>接下来开始配置插件。</p><h3 id="配置通用Mapper"><a href="#配置通用Mapper" class="headerlink" title="配置通用Mapper"></a>配置通用Mapper</h3><p>在Spring Boot配置文件application.yml中配置通用Mapper：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#mappers 多个接口时逗号隔开</span></div><div class="line"><span class="attr">mapper:</span></div><div class="line"><span class="attr">  mappers:</span> <span class="string">com.springboot.config.MyMapper</span></div><div class="line"><span class="attr">  not-empty:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  identity:</span> <span class="string">oracle</span></div></pre></td></tr></table></figure><p></p><p>关于参数的说明，参考<a href="https://gitee.com/free/Mapper/blob/master/wiki/mapper3/2.Integration.md" target="_blank" rel="external">https://gitee.com/free/Mapper/blob/master/wiki/mapper3/2.Integration.md</a>中的<strong>可配参数介绍</strong>。</p><p>除此之外，我们需要定义一个MyMapper接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> tk.mybatis.mapper.common.Mapper;</div><div class="line"><span class="keyword">import</span> tk.mybatis.mapper.common.MySqlMapper;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">MyMapper</span>&lt;<span class="title">T</span>&gt; <span class="keyword">extends</span> <span class="title">Mapper</span>&lt;<span class="title">T</span>&gt;, <span class="title">MySqlMapper</span>&lt;<span class="title">T</span>&gt; </span>&#123;</div><div class="line">	</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>值得注意的是，该接口不能被扫描到，应该和自己定义的Mapper分开。自己定义的Mapper都需要继承这个接口。</p><h3 id="配置PageHelper"><a href="#配置PageHelper" class="headerlink" title="配置PageHelper"></a>配置PageHelper</h3><p>在Spring Boot配置文件application.yml中配置通用配置PageHelper：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#pagehelper</span></div><div class="line"><span class="attr">pagehelper:</span> </div><div class="line"><span class="attr">  helperDialect:</span> <span class="string">oracle</span></div><div class="line"><span class="attr">  reasonable:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  supportMethodsArguments:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  params:</span> <span class="string">count=countSql</span></div></pre></td></tr></table></figure><p></p><p>参数相关说明参考<a href="https://github.com/pagehelper/Mybatis-PageHelper/blob/master/wikis/zh/HowToUse.md" target="_blank" rel="external">https://github.com/pagehelper/Mybatis-PageHelper/blob/master/wikis/zh/HowToUse.md</a>中的<strong>分页插件参数介绍</strong>。</p><h3 id="配置Geneator"><a href="#配置Geneator" class="headerlink" title="配置Geneator*"></a>配置Geneator*</h3><p>在路径src/main/resources/下新建mybatis-generator.xml：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="meta">&lt;!DOCTYPE generatorConfiguration</span></div><div class="line">    PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"</div><div class="line">    "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd"&gt;</div><div class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">"oracle"</span> <span class="attr">targetRuntime</span>=<span class="string">"MyBatis3Simple"</span> <span class="attr">defaultModelType</span>=<span class="string">"flat"</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">type</span>=<span class="string">"tk.mybatis.mapper.generator.MapperPlugin"</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!-- 该配置会使生产的Mapper自动继承MyMapper --&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"mappers"</span> <span class="attr">value</span>=<span class="string">"com.springboot.config.MyMapper"</span> /&gt;</span></div><div class="line">            <span class="comment">&lt;!-- caseSensitive默认false，当数据库表名区分大小写时，可以将该属性设置为true --&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"caseSensitive"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="comment">&lt;!-- 阻止生成自动注释 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">commentGenerator</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"javaFileEncoding"</span> <span class="attr">value</span>=<span class="string">"UTF-8"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suppressDate"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suppressAllComments"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">commentGenerator</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="comment">&lt;!-- 数据库链接地址账号密码 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">jdbcConnection</span> </span></div><div class="line">            <span class="attr">driverClass</span>=<span class="string">"oracle.jdbc.driver.OracleDriver"</span></div><div class="line">            <span class="attr">connectionURL</span>=<span class="string">"jdbc:oracle:thin:@localhost:1521:ORCL"</span></div><div class="line">            <span class="attr">userId</span>=<span class="string">"scott"</span></div><div class="line">            <span class="attr">password</span>=<span class="string">"6742530"</span>&gt;</div><div class="line">        <span class="tag">&lt;/<span class="name">jdbcConnection</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">javaTypeResolver</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"forceBigDecimals"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">javaTypeResolver</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="comment">&lt;!-- 生成Model类存放位置 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">javaModelGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"com.springboot.bean"</span> <span class="attr">targetProject</span>=<span class="string">"src/main/java"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"trimStrings"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">javaModelGenerator</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="comment">&lt;!-- 生成映射文件存放位置 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"mapper"</span> <span class="attr">targetProject</span>=<span class="string">"src/main/resources"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">sqlMapGenerator</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="comment">&lt;!-- 生成Dao类存放位置 --&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件的代码</span></div><div class="line">            type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象</div><div class="line">            type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口 --&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">type</span>=<span class="string">"XMLMAPPER"</span> <span class="attr">targetPackage</span>=<span class="string">"com.springboot.mapper"</span> <span class="attr">targetProject</span>=<span class="string">"src/main/java"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">javaClientGenerator</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="comment">&lt;!-- 配置需要生成的表 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">"T_USER"</span> <span class="attr">domainObjectName</span>=<span class="string">"User"</span> <span class="attr">enableCountByExample</span>=<span class="string">"false"</span> <span class="attr">enableUpdateByExample</span>=<span class="string">"false"</span> <span class="attr">enableDeleteByExample</span>=<span class="string">"false"</span> <span class="attr">enableSelectByExample</span>=<span class="string">"false"</span> <span class="attr">selectByExampleQueryId</span>=<span class="string">"false"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">generatedKey</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">sqlStatement</span>=<span class="string">"oralce"</span> <span class="attr">identity</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">context</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>更详细的说明可参考链接：<a href="http://blog.csdn.net/isea533/article/details/42102297" target="_blank" rel="external">http://blog.csdn.net/isea533/article/details/42102297</a>。</p><h2 id="代码生成"><a href="#代码生成" class="headerlink" title="代码生成"></a>代码生成</h2><p>配置好MyBatis Geneator后，在eclipse中运行命令<code>mybatis-generator:generate</code>：</p><p><img src="img/QQ截图20171227095243.png" alt="QQ截图20171227095243.png"></p><p>以下为自动成成的代码：</p><p>User：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Table</span>(name = <span class="string">"T_USER"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</div><div class="line">    <span class="meta">@Id</span></div><div class="line">    <span class="meta">@Column</span>(name = <span class="string">"ID"</span>)</div><div class="line">    <span class="meta">@GeneratedValue</span>(strategy = GenerationType.IDENTITY)</div><div class="line">    <span class="keyword">private</span> Long id;</div><div class="line">    </div><div class="line">    <span class="meta">@Column</span>(name = <span class="string">"USERNAME"</span>)</div><div class="line">    <span class="keyword">private</span> String username;</div><div class="line">    </div><div class="line">    <span class="meta">@Column</span>(name = <span class="string">"PASSWD"</span>)</div><div class="line">    <span class="keyword">private</span> String passwd;</div><div class="line">    </div><div class="line">    <span class="meta">@Column</span>(name = <span class="string">"CREATE_TIME"</span>)</div><div class="line">    <span class="keyword">private</span> Date createTime;</div><div class="line">    </div><div class="line">    <span class="meta">@Column</span>(name = <span class="string">"STATUS"</span>)</div><div class="line">    <span class="keyword">private</span> String status;</div><div class="line"></div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>因为这里数据库试用的是Oracle，其没有主键自动自增的功能，这里先将<code>@GeneratedValue(strategy = GenerationType.IDENTITY)</code>去掉，主键的生成下面会介绍到。生成的主键是BigDecimal类型的，我们将其改为Long类型。</p><p>UserMapper：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> com.springboot.bean.User;</div><div class="line"><span class="keyword">import</span> com.springboot.config.MyMapper;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> <span class="keyword">extends</span> <span class="title">MyMapper</span>&lt;<span class="title">User</span>&gt; </span>&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>UserMapper.xml：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="meta">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.springboot.mapper.UserMapper"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"BaseResultMap"</span> <span class="attr">type</span>=<span class="string">"com.springboot.bean.User"</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!--</span></div><div class="line">        WARNING - @mbg.generated</div><div class="line">        --&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"ID"</span> <span class="attr">jdbcType</span>=<span class="string">"DECIMAL"</span> <span class="attr">property</span>=<span class="string">"id"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"USERNAME"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> <span class="attr">property</span>=<span class="string">"username"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"PASSWD"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> <span class="attr">property</span>=<span class="string">"passwd"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"CREATE_TIME"</span> <span class="attr">jdbcType</span>=<span class="string">"TIMESTAMP"</span> <span class="attr">property</span>=<span class="string">"createTime"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"STATUS"</span> <span class="attr">jdbcType</span>=<span class="string">"CHAR"</span> <span class="attr">property</span>=<span class="string">"status"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>极其方便的说！</p><h2 id="Mapper"><a href="#Mapper" class="headerlink" title="Mapper"></a>Mapper</h2><p>要让Spring Boot扫描到Mapper接口，需要在Spring Boot入口类中加入<code>@MapperScan(&quot;com.springboot.mapper&quot;)</code>注解。</p><p>为了获取到Oracle 中序列的值，我们定义一个SeqenceMapper接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">SeqenceMapper</span> </span>&#123;</div><div class="line">    <span class="meta">@Select</span>(<span class="string">"select $&#123;seqName&#125;.nextval from dual"</span>)</div><div class="line">    <span class="function">Long <span class="title">getSequence</span><span class="params">(@Param(<span class="string">"seqName"</span>)</span> String seqName)</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>因为这里仅介绍Mapper自带的CRUD方法，所以UserMapper接口中无需定义任何方法。</p><h2 id="通用Service"><a href="#通用Service" class="headerlink" title="通用Service"></a>通用Service</h2><p>我们可以定义一个通用的Service，在其中定义一些通用的方法：</p><p>IService：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Service</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IService</span>&lt;<span class="title">T</span>&gt; </span>&#123;</div><div class="line"></div><div class="line">    <span class="function">Long <span class="title">getSequence</span><span class="params">(@Param(<span class="string">"seqName"</span>)</span> String seqName)</span>;</div><div class="line">    </div><div class="line">    <span class="function">List&lt;T&gt; <span class="title">selectAll</span><span class="params">()</span></span>;</div><div class="line">    </div><div class="line">    <span class="function">T <span class="title">selectByKey</span><span class="params">(Object key)</span></span>;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">save</span><span class="params">(T entity)</span></span>;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">delete</span><span class="params">(Object key)</span></span>;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateAll</span><span class="params">(T entity)</span></span>;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateNotNull</span><span class="params">(T entity)</span></span>;</div><div class="line">    </div><div class="line">    <span class="function">List&lt;T&gt; <span class="title">selectByExample</span><span class="params">(Object example)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>其实现类BaseService：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseService</span>&lt;<span class="title">T</span>&gt; <span class="keyword">implements</span> <span class="title">IService</span>&lt;<span class="title">T</span>&gt; </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">protected</span> Mapper&lt;T&gt; mapper;</div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">protected</span> SeqenceMapper seqenceMapper;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> Mapper&lt;T&gt; <span class="title">getMapper</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> mapper;</div><div class="line">    &#125;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getSequence</span><span class="params">(@Param(<span class="string">"seqName"</span>)</span> String seqName)</span>&#123;</div><div class="line">        <span class="keyword">return</span> seqenceMapper.getSequence(seqName);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> List&lt;T&gt; <span class="title">selectAll</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">//说明：查询所有数据</span></div><div class="line">        <span class="keyword">return</span> mapper.selectAll();</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">selectByKey</span><span class="params">(Object key)</span> </span>&#123;</div><div class="line">        <span class="comment">//说明：根据主键字段进行查询，方法参数必须包含完整的主键属性，查询条件使用等号</span></div><div class="line">        <span class="keyword">return</span> mapper.selectByPrimaryKey(key);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">save</span><span class="params">(T entity)</span> </span>&#123;</div><div class="line">        <span class="comment">//说明：保存一个实体，null的属性也会保存，不会使用数据库默认值</span></div><div class="line">        <span class="keyword">return</span> mapper.insert(entity);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">(Object key)</span> </span>&#123;</div><div class="line">        <span class="comment">//说明：根据主键字段进行删除，方法参数必须包含完整的主键属性</span></div><div class="line">        <span class="keyword">return</span> mapper.deleteByPrimaryKey(key);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">updateAll</span><span class="params">(T entity)</span> </span>&#123;</div><div class="line">        <span class="comment">//说明：根据主键更新实体全部字段，null值会被更新</span></div><div class="line">        <span class="keyword">return</span> mapper.updateByPrimaryKey(entity);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">updateNotNull</span><span class="params">(T entity)</span> </span>&#123;</div><div class="line">        <span class="comment">//根据主键更新属性不为null的值</span></div><div class="line">        <span class="keyword">return</span> mapper.updateByPrimaryKeySelective(entity);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> List&lt;T&gt; <span class="title">selectByExample</span><span class="params">(Object example)</span> </span>&#123;</div><div class="line">        <span class="comment">//说明：根据Example条件进行查询</span></div><div class="line">        <span class="comment">//重点：这个查询支持通过Example类指定查询列，通过selectProperties方法指定查询列</span></div><div class="line">        <span class="keyword">return</span> mapper.selectByExample(example);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>接下来让UserService接口继承IService接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> <span class="keyword">extends</span> <span class="title">IService</span>&lt;<span class="title">User</span>&gt;</span>&#123;</div><div class="line">	</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>其实现类UserServiceImpl：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Repository</span>(<span class="string">"userService"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">extends</span> <span class="title">BaseService</span>&lt;<span class="title">User</span>&gt; <span class="keyword">implements</span> <span class="title">UserService</span></span>&#123;</div><div class="line">	</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>这样即可在UserService中使用BaseService中的通用方法了。</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>测试插入：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RunWith</span>(SpringJUnit4ClassRunner.class)</div><div class="line"><span class="meta">@SpringBootTest</span>(classes = Application.class)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApplicationTest</span> </span>&#123;</div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> UserService userService;</div><div class="line">    </div><div class="line">    <span class="meta">@Test</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        User user = <span class="keyword">new</span> User();</div><div class="line">        user.setId(userService.getSequence(<span class="string">"seq_user"</span>));</div><div class="line">        user.setUsername(<span class="string">"scott"</span>);</div><div class="line">        user.setPasswd(<span class="string">"ac089b11709f9b9e9980e7c497268dfa"</span>);</div><div class="line">        user.setCreateTime(<span class="keyword">new</span> Date());</div><div class="line">        user.setStatus(<span class="string">"0"</span>);</div><div class="line">        <span class="keyword">this</span>.userService.save(user);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>运行代码，查看数据库：</p><p><img src="img/QQ截图20171227102024.png" alt="QQ截图20171227102024.png"></p><p>测试查询：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">Example example = <span class="keyword">new</span> Example(User.class);</div><div class="line">example.createCriteria().andCondition(<span class="string">"username like '%i%'"</span>);</div><div class="line">example.setOrderByClause(<span class="string">"id desc"</span>);</div><div class="line">List&lt;User&gt; userList = <span class="keyword">this</span>.userService.selectByExample(example);</div><div class="line"><span class="keyword">for</span> (User u : userList) &#123;</div><div class="line">    System.out.println(u.getUsername());</div><div class="line">&#125;</div><div class="line"></div><div class="line">List&lt;User&gt; all = <span class="keyword">this</span>.userService.selectAll();</div><div class="line"><span class="keyword">for</span> (User u : all) &#123;</div><div class="line">    System.out.println(u.getUsername());</div><div class="line">&#125;</div><div class="line"></div><div class="line">User user = <span class="keyword">new</span> User();</div><div class="line">user.setId(<span class="number">1l</span>);</div><div class="line">user = <span class="keyword">this</span>.userService.selectByKey(user);</div><div class="line">System.out.println(user.getUsername());</div></pre></td></tr></table></figure><p></p><p>测试删除：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">User user = <span class="keyword">new</span> User();</div><div class="line">user.setId(<span class="number">4l</span>);</div><div class="line"><span class="keyword">this</span>.userService.delete(user);</div></pre></td></tr></table></figure><p></p><p>分页测试，从第二页开始，每页2条数据：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">PageHelper.startPage(<span class="number">2</span>, <span class="number">2</span>);</div><div class="line">List&lt;User&gt; list = userService.selectAll();</div><div class="line">PageInfo&lt;User&gt; pageInfo = <span class="keyword">new</span> PageInfo&lt;User&gt;(list);</div><div class="line">List&lt;User&gt; result = pageInfo.getList();</div><div class="line"><span class="keyword">for</span> (User u : result) &#123;</div><div class="line">    System.out.println(u.getUsername());</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>查看日志打印出的SQL：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">2017-12-28 10:25:14.033 DEBUG 11116 --- [main] c.s.mapper.UserMapper.selectAll          : ==&gt;  Preparing: SELECT * FROM ( SELECT TMP_PAGE.*, ROWNUM ROW_ID FROM (</div><div class="line">                                                                                                          SELECT ID,USERNAME,PASSWD,CREATE_TIME,STATUS FROM T_USER ) TMP_PAGE WHERE ROWNUM &lt;= ? ) WHERE ROW_ID &gt; ? </div><div class="line">2017-12-28 10:25:14.068 DEBUG 11116 --- [main] c.s.mapper.UserMapper.selectAll          : ==&gt; Parameters: 4(Integer), 2(Integer)</div><div class="line">2017-12-28 10:25:14.073 DEBUG 11116 --- [main] c.s.mapper.UserMapper.selectAll          : &lt;==      Total: 2</div></pre></td></tr></table></figure><p></p><p>插件已经帮我自动拼接好了。</p><p>其他注意事项参考官方说明。源码链接：<a href="https://drive.google.com/open?id=1ePz1ihSGSFwNtE_-FWHEG-F5qOJ3dLQi" target="_blank" rel="external">https://drive.google.com/open?id=1ePz1ihSGSFwNtE_-FWHEG-F5qOJ3dLQi</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Jun 06 2018 16:37:32 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;如果项目中使用到了MyBatis框架，那么使用通用Mapper和PageHelper分页插件将极大的简化我们的操作。通用Mapper可以简化对单表的CRUD操作，PageHelper分页插件可以帮我们自动拼接分页SQL，并且可以使用MyBatis Geneator来自动生成实体类，Mapper接口和Mapper xml代码，非常的方便。插件地址及作者链接&lt;a href=&quot;https://gitee.com/free&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://gitee.com/free&lt;/a&gt;。
    
    </summary>
    
    
      <category term="MyBatis" scheme="http://mrbird.cc/tags/MyBatis/"/>
    
  </entry>
  
</feed>
